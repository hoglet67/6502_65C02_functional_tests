AS65 Assembler for R6502 [1.42].  Copyright 1994-2007, Frank A. Kingswood                                                Page    1
------------------------------------------------ 65C02_extended_opcodes_test.a65c ------------------------------------------------

3125 lines read, no errors in pass 1.
                        ;
                        ; 6 5 C 0 2   E X T E N D E D   O P C O D E S   T E S T
                        ;
                        ; Copyright (C) 2013-2017  Klaus Dormann
                        ;
                        ; This program is free software: you can redistribute it and/or modify
                        ; it under the terms of the GNU General Public License as published by
                        ; the Free Software Foundation, either version 3 of the License, or
                        ; (at your option) any later version.
                        ;
                        ; This program is distributed in the hope that it will be useful,
                        ; but WITHOUT ANY WARRANTY; without even the implied warranty of
                        ; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
                        ; GNU General Public License for more details.
                        ;
                        ; You should have received a copy of the GNU General Public License
                        ; along with this program.  If not, see <http://www.gnu.org/licenses/>.
                        
                        
                        ; This program is designed to test all additional 65C02 opcodes, addressing
                        ; modes and functionality not available in the NMOS version of the 6502.
                        ; The 6502_functional_test is a prerequisite to this test.
                        ; NMI, IRQ, STP & WAI are covered in the 6502_interrupt_test.
                        ; 
                        ; version 04-dec-2017
                        ; contact info at http://2m5.de or email K@2m5.de
                        ;
                        ; assembled with AS65 from http://www.kingswood-consulting.co.uk/assemblers/
                        ; command line switches: -l -m -s2 -w -x -h0
                        ;                         |  |  |   |  |  no page headers in listing
                        ;                         |  |  |   |  65C02 extensions
                        ;                         |  |  |   wide listing (133 char/col)
                        ;                         |  |  write intel hex file instead of binary
                        ;                         |  expand macros in listing
                        ;                         generate pass2 listing
                        ;
                        ; No IO - should be run from a monitor with access to registers.
                        ; To run load intel hex image with a load command, than alter PC to 400 hex
                        ; (code_segment) and enter a go command.
                        ; Loop on program counter determines error or successful completion of test.
                        ; Check listing for relevant traps (jump/branch *).
                        ; Please note that in early tests some instructions will have to be used before
                        ; they are actually tested!
                        ;
                        ; RESET, NMI or IRQ should not occur and will be trapped if vectors are enabled.
                        ; Tests documented behavior of the original 65C02 only!
                        ; Decimal ops will only be tested with valid BCD operands and the V flag will
                        ; be ignored as it is absolutely useless in decimal mode.
                        ;
                        ; Debugging hints:
                        ;     Most of the code is written sequentially. if you hit a trap, check the
                        ;   immediately preceeding code for the instruction to be tested. Results are
                        ;   tested first, flags are checked second by pushing them onto the stack and
                        ;   pulling them to the accumulator after the result was checked. The "real"
                        ;   flags are no longer valid for the tested instruction at this time!
                        ;     If the tested instruction was indexed, the relevant index (X or Y) must
                        ;   also be checked. Opposed to the flags, X and Y registers are still valid.
                        ;
                        ; versions:
                        ;   19-jul-2013  1st version distributed for testing
                        ;   23-jul-2013  fixed BRA out of range due to larger trap macros
                        ;                added RAM integrity check
                        ;   16-aug-2013  added error report to standard output option
                        ;   23-aug-2015  change revoked
                        ;   24-aug-2015  all self modifying immediate opcodes now execute in data RAM
                        ;   28-aug-2015  fixed decimal adc/sbc immediate only testing carry
                        ;   09-feb-2017  fixed RMB/SMB tested when they shouldn't be tested
                        ;   04-dec-2017  fixed BRK not tested for actually going through the IRQ vector
                        ;                added option to skip the remainder of a failing test
                        ;                in report.i65
                        ;                added skip override to undefined opcode as NOP test
                        
                        
                        ; C O N F I G U R A T I O N
                        
                        ;ROM_vectors writable (0=no, 1=yes)
                        ;if ROM vectors can not be used interrupts will not be trapped
                        ;as a consequence BRK can not be tested but will be emulated to test RTI
0000 =                  ROM_vectors = 0
                        
                        ;load_data_direct (0=move from code segment, 1=load directly)
                        ;loading directly is preferred but may not be supported by your platform
                        ;0 produces only consecutive object code, 1 is not suitable for a binary image
0000 =                  load_data_direct = 0
                        
                        ;I_flag behavior (0=force enabled, 1=force disabled, 2=prohibit change, 3=allow
                        ;change) 2 requires extra code and is not recommended.
0003 =                  I_flag = 3
                        
                        ;configure memory - try to stay away from memory used by the system
                        ;zero_page memory start address, $4e (78) consecutive Bytes required
                        ;                                add 2 if I_flag = 2
0050 =                  zero_page = $50
                        
                        ;data_segment memory start address, $63 (99) consecutive Bytes required
                        ; + 12 Bytes at data_segment + $f9 (JMP indirect page cross test)
3200 =                  data_segment = $3200
                            if (data_segment & $ff) != 0
                                ERROR ERROR ERROR low byte of data_segment MUST be $00 !!
                            endif  
                        
                        ;code_segment memory start address, 10kB of consecutive space required
                        ;                                   add 1 kB if I_flag = 2
3400 =                  code_segment = $3400
                        
                        ;added WDC only opcodes WAI & STP (0=test as NOPs, >0=no test)
0001 =                  wdc_op = WDC_OP
                        
                        ;added Rockwell & WDC opcodes BBR, BBS, RMB & SMB
                        ;(0=test as NOPs, 1=full test, >1=no test) 
0001 =                  rkwl_wdc_op = RKWL_OP
                        
                        ;skip testing all undefined opcodes override
                        ;0=test as NOP, >0=skip
0000 =                  skip_nop = 0
                        
                        ;report errors through I/O channel (0=use standard self trap loops, 1=include
                        ;report.i65 as I/O channel, add 3 kB)
0001 =                  report = 1
                        
                        ;RAM integrity test option. Checks for undesired RAM writes.
                        ;set lowest non RAM or RAM mirror address page (-1=disable, 0=64k, $40=16k)
                        ;leave disabled if a monitor, OS or background interrupt is allowed to alter RAM
ffff =                  ram_top = -1
                        
                                noopt       ;do not take shortcuts
                                
                        ;macros for error & success traps to allow user modification
                        ;example:
                        ;trap    macro
                        ;        jsr my_error_handler
                        ;        endm
                        ;trap_eq macro
                        ;        bne skip\?
                        ;        trap           ;failed equal (zero)
                        ;skip\?
                        ;        endm
                        ;
                        ; my_error_handler should pop the calling address from the stack and report it.
                        ; putting larger portions of code (more than 3 bytes) inside the trap macro
                        ; may lead to branch range problems for some tests.
                            if report = 0
                        trap    macro
                                jmp *           ;failed anyway
                                endm
                        trap_eq macro
                                beq *           ;failed equal (zero)
                                endm
                        trap_ne macro
                                bne *           ;failed not equal (non zero)
                                endm
                        trap_cs macro
                                bcs *           ;failed carry set
                                endm
                        trap_cc macro
                                bcc *           ;failed carry clear
                                endm
                        trap_mi macro
                                bmi *           ;failed minus (bit 7 set)
                                endm
                        trap_pl macro
                                bpl *           ;failed plus (bit 7 clear)
                                endm
                        trap_vs macro
                                bvs *           ;failed overflow set
                                endm
                        trap_vc macro
                                bvc *           ;failed overflow clear
                                endm
                        ; please observe that during the test the stack gets invalidated
                        ; therefore a RTS inside the success macro is not possible
                        success macro
                                jmp *           ;test passed, no errors
                                endm
                            endif
                            if report = 1
                        trap    macro
                                jsr report_error
                                endm
                        trap_eq macro
                                bne skip\?
                                trap           ;failed equal (zero)
                        skip\?
                                endm
                        trap_ne macro
                                beq skip\?
                                trap            ;failed not equal (non zero)
                        skip\?
                                endm
                        trap_cs macro
                                bcc skip\?
                                trap            ;failed carry set
                        skip\?
                                endm
                        trap_cc macro
                                bcs skip\?
                                trap            ;failed carry clear
                        skip\?
                                endm
                        trap_mi macro
                                bpl skip\?
                                trap            ;failed minus (bit 7 set)
                        skip\?
                                endm
                        trap_pl macro
                                bmi skip\?
                                trap            ;failed plus (bit 7 clear)
                        skip\?
                                endm
                        trap_vs macro
                                bvc skip\?
                                trap            ;failed overflow set
                        skip\?
                                endm
                        trap_vc macro
                                bvs skip\?
                                trap            ;failed overflow clear
                        skip\?
                                endm
                        ; please observe that during the test the stack gets invalidated
                        ; therefore a RTS inside the success macro is not possible
                        success macro
                                jsr report_success
                                endm
                            endif
                        
                        
0001 =                  carry   equ %00000001   ;flag bits in status
0002 =                  zero    equ %00000010
0004 =                  intdis  equ %00000100
0008 =                  decmode equ %00001000
0010 =                  break   equ %00010000
0020 =                  reserv  equ %00100000
0040 =                  overfl  equ %01000000
0080 =                  minus   equ %10000000
                        
0001 =                  fc      equ carry
0002 =                  fz      equ zero
0003 =                  fzc     equ carry+zero
0040 =                  fv      equ overfl
0042 =                  fvz     equ overfl+zero
0080 =                  fn      equ minus
0081 =                  fnc     equ minus+carry
0082 =                  fnz     equ minus+zero
0083 =                  fnzc    equ minus+zero+carry
00c0 =                  fnv     equ minus+overfl
                        
0030 =                  fao     equ break+reserv    ;bits always on after PHP, BRK
0034 =                  fai     equ fao+intdis      ;+ forced interrupt disable
00ff =                  m8      equ $ff             ;8 bit mask
00fb =                  m8i     equ $ff&~intdis     ;8 bit mask - interrupt disable
                        
                        ;macros to allow masking of status bits.
                        ;masking of interrupt enable/disable on load and compare
                        ;masking of always on bits after PHP or BRK (unused & break) on compare
                                if I_flag = 0
                        load_flag   macro
                                    lda #\1&m8i         ;force enable interrupts (mask I)
                                    endm
                        cmp_flag    macro
                                    cmp #(\1|fao)&m8i   ;I_flag is always enabled + always on bits
                                    endm
                        eor_flag    macro
                                    eor #(\1&m8i|fao)   ;mask I, invert expected flags + always on bits
                                    endm
                                endif
                                if I_flag = 1
                        load_flag   macro
                                    lda #\1|intdis      ;force disable interrupts
                                    endm
                        cmp_flag    macro
                                    cmp #(\1|fai)&m8    ;I_flag is always disabled + always on bits
                                    endm
                        eor_flag    macro
                                    eor #(\1|fai)       ;invert expected flags + always on bits + I
                                    endm
                                endif
                                if I_flag = 2
                        load_flag   macro
                                    lda #\1
                                    ora flag_I_on       ;restore I-flag
                                    and flag_I_off
                                    endm
                        cmp_flag    macro
                                    eor flag_I_on       ;I_flag is never changed
                                    cmp #(\1|fao)&m8i   ;expected flags + always on bits, mask I
                                    endm
                        eor_flag    macro
                                    eor flag_I_on       ;I_flag is never changed
                                    eor #(\1&m8i|fao)   ;mask I, invert expected flags + always on bits
                                    endm
                                endif
                                if I_flag = 3
                        load_flag   macro
                                    lda #\1             ;allow test to change I-flag (no mask)
                                    endm
                        cmp_flag    macro
                                    cmp #(\1|fao)&m8    ;expected flags + always on bits
                                    endm
                        eor_flag    macro
                                    eor #\1|fao         ;invert expected flags + always on bits
                                    endm
                                endif
                        
                        ;macros to set (register|memory|zeropage) & status
                        set_stat    macro       ;setting flags in the processor status register
                                    load_flag \1
                                    pha         ;use stack to load status
                                    plp
                                    endm
                        
                        set_a       macro       ;precharging accu & status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    lda #\1     ;precharge accu
                                    plp
                                    endm
                        
                        set_x       macro       ;precharging index & status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    ldx #\1     ;precharge index x
                                    plp
                                    endm
                        
                        set_y       macro       ;precharging index & status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    ldy #\1     ;precharge index y
                                    plp
                                    endm
                        
                        set_ax      macro       ;precharging indexed accu & immediate status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    lda \1,x    ;precharge accu
                                    plp
                                    endm
                        
                        set_ay      macro       ;precharging indexed accu & immediate status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    lda \1,y    ;precharge accu
                                    plp
                                    endm
                        
                        set_z       macro       ;precharging indexed zp & immediate status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    lda \1,x    ;load to zeropage
                                    sta zpt
                                    plp
                                    endm
                        
                        set_zx      macro       ;precharging zp,x & immediate status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    lda \1,x    ;load to indexed zeropage
                                    sta zpt,x
                                    plp
                                    endm
                        
                        set_abs     macro       ;precharging indexed memory & immediate status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    lda \1,x    ;load to memory
                                    sta abst
                                    plp
                                    endm
                        
                        set_absx    macro       ;precharging abs,x & immediate status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    lda \1,x    ;load to indexed memory
                                    sta abst,x
                                    plp
                                    endm
                        
                        ;macros to test (register|memory|zeropage) & status & (mask)
                        tst_stat    macro       ;testing flags in the processor status register
                                    php         ;save status
                                    pla         ;use stack to retrieve status
                                    pha
                                    cmp_flag \1
                                    trap_ne
                                    plp         ;restore status
                                    endm
                                    
                        tst_a       macro       ;testing result in accu & flags
                                    php         ;save flags
                                    cmp #\1     ;test result
                                    trap_ne
                                    pla         ;load status
                                    pha
                                    cmp_flag \2
                                    trap_ne
                                    plp         ;restore status
                                    endm
                        
                        tst_as      macro       ;testing result in accu & flags, save accu
                                    pha
                                    php         ;save flags
                                    cmp #\1     ;test result
                                    trap_ne
                                    pla         ;load status
                                    pha
                                    cmp_flag \2
                                    trap_ne
                                    plp         ;restore status
                                    pla
                                    endm
                        
                        tst_x       macro       ;testing result in x index & flags
                                    php         ;save flags
                                    cpx #\1     ;test result
                                    trap_ne
                                    pla         ;load status
                                    pha
                                    cmp_flag \2
                                    trap_ne
                                    plp         ;restore status
                                    endm
                        
                        tst_y       macro       ;testing result in y index & flags
                                    php         ;save flags
                                    cpy #\1     ;test result
                                    trap_ne
                                    pla         ;load status
                                    pha
                                    cmp_flag \2
                                    trap_ne
                                    plp         ;restore status
                                    endm
                        
                        tst_ax      macro       ;indexed testing result in accu & flags
                                    php         ;save flags
                                    cmp \1,x    ;test result
                                    trap_ne
                                    pla         ;load status
                                    eor_flag \3
                                    cmp \2,x    ;test flags
                                    trap_ne     ;
                                    endm
                        
                        tst_ay      macro       ;indexed testing result in accu & flags
                                    php         ;save flags
                                    cmp \1,y    ;test result
                                    trap_ne     ;
                                    pla         ;load status
                                    eor_flag \3
                                    cmp \2,y    ;test flags
                                    trap_ne
                                    endm
                                
                        tst_z       macro       ;indexed testing result in zp & flags
                                    php         ;save flags
                                    lda zpt
                                    cmp \1,x    ;test result
                                    trap_ne
                                    pla         ;load status
                                    eor_flag \3
                                    cmp \2,x    ;test flags
                                    trap_ne
                                    endm
                        
                        tst_zx      macro       ;testing result in zp,x & flags
                                    php         ;save flags
                                    lda zpt,x
                                    cmp \1,x    ;test result
                                    trap_ne
                                    pla         ;load status
                                    eor_flag \3
                                    cmp \2,x    ;test flags
                                    trap_ne
                                    endm
                        
                        tst_abs     macro       ;indexed testing result in memory & flags
                                    php         ;save flags
                                    lda abst
                                    cmp \1,x    ;test result
                                    trap_ne
                                    pla         ;load status
                                    eor_flag \3
                                    cmp \2,x    ;test flags
                                    trap_ne
                                    endm
                        
                        tst_absx    macro       ;testing result in abs,x & flags
                                    php         ;save flags
                                    lda abst,x
                                    cmp \1,x    ;test result
                                    trap_ne
                                    pla         ;load status
                                    eor_flag \3
                                    cmp \2,x    ;test flags
                                    trap_ne
                                    endm
                                    
                        ; RAM integrity test
                        ;   verifies that none of the previous tests has altered RAM outside of the
                        ;   designated write areas.
                        ;   uses zpt word as indirect pointer, zpt+2 word as checksum
                                if ram_top > -1
                        check_ram   macro 
                                    cld
                                    lda #0
                                    sta zpt         ;set low byte of indirect pointer
                                    sta zpt+3       ;checksum high byte
                                    ldx #11         ;reset modifiable RAM
                        ccs1\?      sta jxi_tab,x   ;JMP indirect page cross area
                                    dex
                                    bpl ccs1\?
                                    clc
                                    ldx #zp_bss-zero_page ;zeropage - write test area
                        ccs3\?      adc zero_page,x
                                    bcc ccs2\?
                                    inc zpt+3       ;carry to high byte
                                    clc
                        ccs2\?      inx
                                    bne ccs3\?
                                    ldx #hi(abs1)   ;set high byte of indirect pointer
                                    stx zpt+1
                                    ldy #lo(abs1)   ;data after write & execute test area
                        ccs5\?      adc (zpt),y
                                    bcc ccs4\?
                                    inc zpt+3       ;carry to high byte
                                    clc
                        ccs4\?      iny
                                    bne ccs5\?
                                    inx             ;advance RAM high address
                                    stx zpt+1
                                    cpx #ram_top
                                    bne ccs5\?
                                    sta zpt+2       ;checksum low is
                                    cmp ram_chksm   ;checksum low expected
                                    trap_ne         ;checksum mismatch
                                    lda zpt+3       ;checksum high is
                                    cmp ram_chksm+1 ;checksum high expected
                                    trap_ne         ;checksum mismatch
                                    endm            
                                else
                        check_ram   macro
                                    ;RAM check disabled - RAM size not set
                                    endm
                                endif
                                    
                        next_test   macro           ;make sure, tests don't jump the fence
                                    lda test_case   ;previous test
                                    cmp #test_num
                                    trap_ne         ;test is out of sequence
                        test_num = test_num + 1
                                    lda #test_num   ;*** next tests' number
                                    sta test_case
                                    ;check_ram       ;uncomment to find altered RAM after each test
                                    endm
                        
                            if load_data_direct = 1
                                data
                            else
                                bss                 ;uninitialized segment, copy of data at end of code!
                            endif
0050 =                          org zero_page
                        ;break test interrupt save
0050 =                  irq_a   ds  1               ;a register
0051 =                  irq_x   ds  1               ;x register
                            if I_flag = 2
                        ;masking for I bit in status
                        flag_I_on   ds  1           ;or mask to load flags   
                        flag_I_off  ds  1           ;and mask to load flags
                            endif
0052 =                  zpt                         ;5 bytes store/modify test area
                        ;add/subtract operand generation and result/flag prediction
0052 =                  adfc    ds  1               ;carry flag before op
0053 =                  ad1     ds  1               ;operand 1 - accumulator
0054 =                  ad2     ds  1               ;operand 2 - memory / immediate
0055 =                  adrl    ds  1               ;expected result bits 0-7
0056 =                  adrh    ds  1               ;expected result bit 8 (carry)
0057 =                  adrf    ds  1               ;expected flags NV0000ZC (-V in decimal mode)
0058 =                  sb2     ds  1               ;operand 2 complemented for subtract
0059 =                  zp_bss
0059 =                  zp1     db  $c3,$82,$41,0   ;test patterns for LDx BIT ROL ROR ASL LSR
005d =                  zp7f    db  $7f             ;test pattern for compare  
                        ;logical zeropage operands
005e =                  zpOR    db  0,$1f,$71,$80   ;test pattern for OR
0062 =                  zpAN    db  $0f,$ff,$7f,$80 ;test pattern for AND
0066 =                  zpEO    db  $ff,$0f,$8f,$8f ;test pattern for EOR
                        ;indirect addressing pointers
006a =                  ind1    dw  abs1            ;indirect pointer to pattern in absolute memory
006c =                          dw  abs1+1
006e =                          dw  abs1+2
0070 =                          dw  abs1+3
0072 =                          dw  abs7f
0074 =                  inw1    dw  abs1-$f8        ;indirect pointer for wrap-test pattern
0076 =                  indt    dw  abst            ;indirect pointer to store area in absolute memory
0078 =                          dw  abst+1
007a =                          dw  abst+2
007c =                          dw  abst+3
007e =                  inwt    dw  abst-$f8        ;indirect pointer for wrap-test store
0080 =                  indAN   dw  absAN           ;indirect pointer to AND pattern in absolute memory
0082 =                          dw  absAN+1
0084 =                          dw  absAN+2
0086 =                          dw  absAN+3
0088 =                  indEO   dw  absEO           ;indirect pointer to EOR pattern in absolute memory
008a =                          dw  absEO+1
008c =                          dw  absEO+2
008e =                          dw  absEO+3
0090 =                  indOR   dw  absOR           ;indirect pointer to OR pattern in absolute memory
0092 =                          dw  absOR+1
0094 =                          dw  absOR+2
0096 =                          dw  absOR+3
                        ;add/subtract indirect pointers
0098 =                  adi2    dw  ada2            ;indirect pointer to operand 2 in absolute memory
009a =                  sbi2    dw  sba2            ;indirect pointer to complemented operand 2 (SBC)
009c =                  adiy2   dw  ada2-$ff        ;with offset for indirect indexed
009e =                  sbiy2   dw  sba2-$ff
00a0 =                  zp_bss_end
                            
3200 =                          org data_segment
3200 =                  pg_x    ds  2               ;high JMP indirect address for page cross bug
3202 =                  test_case   ds  1           ;current test number
3203 =                  ram_chksm   ds  2           ;checksum for RAM integrity test
                        ;add/subtract operand copy - abs tests write area
3205 =                  abst                        ;5 bytes store/modify test area
3205 =                  ada2    ds  1               ;operand 2
3206 =                  sba2    ds  1               ;operand 2 complemented for subtract
3207 =                          ds  3               ;fill remaining bytes
320a =                  data_bss
                            if load_data_direct = 1
                        ex_adci adc #0              ;execute immediate opcodes
                                rts
                        ex_sbci sbc #0              ;execute immediate opcodes
                                rts
                            else
320a =                  ex_adci ds  3
320d =                  ex_sbci ds  3
                            endif
3210 =                  abs1    db  $c3,$82,$41,0   ;test patterns for LDx BIT ROL ROR ASL LSR
3214 =                  abs7f   db  $7f             ;test pattern for compare
                        ;loads
3215 =                  fLDx    db  fn,fn,0,fz      ;expected flags for load
                        ;shifts
3219 =                  rASL                        ;expected result ASL & ROL -carry  
3219 =                  rROL    db  $86,$04,$82,0   ; "
321d =                  rROLc   db  $87,$05,$83,1   ;expected result ROL +carry
3221 =                  rLSR                        ;expected result LSR & ROR -carry
3221 =                  rROR    db  $61,$41,$20,0   ; "
3225 =                  rRORc   db  $e1,$c1,$a0,$80 ;expected result ROR +carry
3229 =                  fASL                        ;expected flags for shifts
3229 =                  fROL    db  fnc,fc,fn,fz    ;no carry in
322d =                  fROLc   db  fnc,fc,fn,0     ;carry in
3231 =                  fLSR
3231 =                  fROR    db  fc,0,fc,fz      ;no carry in
3235 =                  fRORc   db  fnc,fn,fnc,fn   ;carry in
                        ;increments (decrements)
3239 =                  rINC    db  $7f,$80,$ff,0,1 ;expected result for INC/DEC
323e =                  fINC    db  0,fn,fn,fz,0    ;expected flags for INC/DEC
                        ;logical memory operand
3243 =                  absOR   db  0,$1f,$71,$80   ;test pattern for OR
3247 =                  absAN   db  $0f,$ff,$7f,$80 ;test pattern for AND
324b =                  absEO   db  $ff,$0f,$8f,$8f ;test pattern for EOR
                        ;logical accu operand
324f =                  absORa  db  0,$f1,$1f,0     ;test pattern for OR
3253 =                  absANa  db  $f0,$ff,$ff,$ff ;test pattern for AND
3257 =                  absEOa  db  $ff,$f0,$f0,$0f ;test pattern for EOR
                        ;logical results
325b =                  absrlo  db  0,$ff,$7f,$80
325f =                  absflo  db  fz,fn,0,fn
3263 =                  data_bss_end
                        ;define area for page crossing JMP (abs) & JMP (abs,x) test
32f9 =                  jxi_tab equ data_segment + $100 - 7     ;JMP (jxi_tab,x) x=6
32fd =                  ji_tab  equ data_segment + $100 - 3     ;JMP (ji_tab+2)
3300 =                  jxp_tab equ data_segment + $100         ;JMP (jxp_tab-255) x=255
                        
                        
                                code
3400 =                          org code_segment
3400 : d8               start   cld
3401 : a2ff                     ldx #$ff
3403 : 9a                       txs
3404 : a900                     lda #0          ;*** test 0 = initialize
3406 : 8d0232                   sta test_case
0000 =                  test_num = 0
                        
                        ;stop interrupts before initializing BSS
                            if I_flag = 1
                                sei
                            endif
                            
                        ;initialize I/O for report channel
                            if report = 1
3409 : 201661                   jsr report_init
                            endif
                            
                        ;initialize BSS segment
                            if load_data_direct != 1
340c : a246                     ldx #zp_end-zp_init-1
340e : bdc062           ld_zp   lda zp_init,x
3411 : 9559                     sta zp_bss,x
3413 : ca                       dex
3414 : 10f8                     bpl ld_zp
3416 : a258                     ldx #data_end-data_init-1
3418 : bd0763           ld_data lda data_init,x
341b : 9d0a32                   sta data_bss,x
341e : ca                       dex
341f : 10f7                     bpl ld_data
                              if ROM_vectors = 1
                                ldx #5
                        ld_vect lda vec_init,x
                                sta vec_bss,x
                                dex
                                bpl ld_vect
                              endif
                            endif
                        
                        ;retain status of interrupt flag
                            if I_flag = 2
                                php
                                pla
                                and #4          ;isolate flag
                                sta flag_I_on   ;or mask
                                eor #lo(~4)     ;reverse
                                sta flag_I_off  ;and mask
                            endif
                                
                        ;generate checksum for RAM integrity test
                            if ram_top > -1
                                lda #0 
                                sta zpt         ;set low byte of indirect pointer
                                sta ram_chksm+1 ;checksum high byte
                                ldx #11         ;reset modifiable RAM
                        gcs1    sta jxi_tab,x   ;JMP indirect page cross area
                                dex
                                bpl gcs1
                                clc
                                ldx #zp_bss-zero_page ;zeropage - write test area
                        gcs3    adc zero_page,x
                                bcc gcs2
                                inc ram_chksm+1 ;carry to high byte
                                clc
                        gcs2    inx
                                bne gcs3
                                ldx #hi(abs1)   ;set high byte of indirect pointer
                                stx zpt+1
                                ldy #lo(abs1)   ;data after write & execute test area
                        gcs5    adc (zpt),y
                                bcc gcs4
                                inc ram_chksm+1 ;carry to high byte
                                clc
                        gcs4    iny
                                bne gcs5
                                inx             ;advance RAM high address
                                stx zpt+1
                                cpx #ram_top
                                bne gcs5
                                sta ram_chksm   ;checksum complete
                            endif
                                next_test            
3421 : ad0232          >            lda test_case   ;previous test
3424 : c900            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
3426 : f003            >        beq skip0002
                       >        trap            ;failed not equal (non zero)
3428 : 202561          >        jsr report_error
                       >
342b :                 >skip0002
                       >
0001 =                 >test_num = test_num + 1
342b : a901            >            lda #test_num   ;*** next tests' number
342d : 8d0232          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ;testing stack operations PHX PHY PLX PLY
3430 : a999                     lda #$99        ;protect a
3432 : a2ff                     ldx #$ff        ;initialize stack
3434 : 9a                       txs
3435 : a255                     ldx #$55
3437 : da                       phx
3438 : a2aa                     ldx #$aa
343a : da                       phx
343b : ecfe01                   cpx $1fe        ;on stack ?
                                trap_ne
343e : f003            >        beq skip0004
                       >        trap            ;failed not equal (non zero)
3440 : 202561          >        jsr report_error
                       >
3443 :                 >skip0004
                        
3443 : ba                       tsx
3444 : e0fd                     cpx #$fd        ;sp decremented?
                                trap_ne
3446 : f003            >        beq skip0006
                       >        trap            ;failed not equal (non zero)
3448 : 202561          >        jsr report_error
                       >
344b :                 >skip0006
                        
344b : 7a                       ply
344c : c0aa                     cpy #$aa        ;successful retreived from stack?
                                trap_ne
344e : f003            >        beq skip0008
                       >        trap            ;failed not equal (non zero)
3450 : 202561          >        jsr report_error
                       >
3453 :                 >skip0008
                        
3453 : 7a                       ply
3454 : c055                     cpy #$55
                                trap_ne
3456 : f003            >        beq skip0010
                       >        trap            ;failed not equal (non zero)
3458 : 202561          >        jsr report_error
                       >
345b :                 >skip0010
                        
345b : ccff01                   cpy $1ff        ;remains on stack?
                                trap_ne
345e : f003            >        beq skip0012
                       >        trap            ;failed not equal (non zero)
3460 : 202561          >        jsr report_error
                       >
3463 :                 >skip0012
                        
3463 : ba                       tsx
3464 : e0ff                     cpx #$ff        ;sp incremented?
                                trap_ne
3466 : f003            >        beq skip0014
                       >        trap            ;failed not equal (non zero)
3468 : 202561          >        jsr report_error
                       >
346b :                 >skip0014
                        
                                
346b : a0a5                     ldy #$a5
346d : 5a                       phy
346e : a05a                     ldy #$5a
3470 : 5a                       phy
3471 : ccfe01                   cpy $1fe        ;on stack ?
                                trap_ne
3474 : f003            >        beq skip0016
                       >        trap            ;failed not equal (non zero)
3476 : 202561          >        jsr report_error
                       >
3479 :                 >skip0016
                        
3479 : ba                       tsx
347a : e0fd                     cpx #$fd        ;sp decremented?
                                trap_ne
347c : f003            >        beq skip0018
                       >        trap            ;failed not equal (non zero)
347e : 202561          >        jsr report_error
                       >
3481 :                 >skip0018
                        
3481 : fa                       plx
3482 : e05a                     cpx #$5a        ;successful retreived from stack?
                                trap_ne
3484 : f003            >        beq skip0020
                       >        trap            ;failed not equal (non zero)
3486 : 202561          >        jsr report_error
                       >
3489 :                 >skip0020
                        
3489 : fa                       plx
348a : e0a5                     cpx #$a5
                                trap_ne
348c : f003            >        beq skip0022
                       >        trap            ;failed not equal (non zero)
348e : 202561          >        jsr report_error
                       >
3491 :                 >skip0022
                        
3491 : ecff01                   cpx $1ff        ;remains on stack?
                                trap_ne
3494 : f003            >        beq skip0024
                       >        trap            ;failed not equal (non zero)
3496 : 202561          >        jsr report_error
                       >
3499 :                 >skip0024
                        
3499 : ba                       tsx
349a : e0ff                     cpx #$ff        ;sp incremented?
                                trap_ne
349c : f003            >        beq skip0026
                       >        trap            ;failed not equal (non zero)
349e : 202561          >        jsr report_error
                       >
34a1 :                 >skip0026
                        
34a1 : c999                     cmp #$99        ;unchanged?
                                trap_ne
34a3 : f003            >        beq skip0028
                       >        trap            ;failed not equal (non zero)
34a5 : 202561          >        jsr report_error
                       >
34a8 :                 >skip0028
                        
                                next_test            
34a8 : ad0232          >            lda test_case   ;previous test
34ab : c901            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
34ad : f003            >        beq skip0031
                       >        trap            ;failed not equal (non zero)
34af : 202561          >        jsr report_error
                       >
34b2 :                 >skip0031
                       >
0002 =                 >test_num = test_num + 1
34b2 : a902            >            lda #test_num   ;*** next tests' number
34b4 : 8d0232          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                                
                        ; test PHX does not alter flags or X but PLX does
34b7 : a0aa                     ldy #$aa        ;protect y
                                set_x 1,$ff     ;push
                       >            load_flag $ff     
34b9 : a9ff            >            lda #$ff                  ;allow test to change I-flag (no mask)
                       >
34bb : 48              >            pha         ;use stack to load status
34bc : a201            >            ldx #1     ;precharge index x
34be : 28              >            plp
                        
34bf : da                       phx
                                tst_x 1,$ff
34c0 : 08              >            php         ;save flags
34c1 : e001            >            cpx #1     ;test result
                       >            trap_ne
34c3 : f003            >        beq skip0036
                       >        trap            ;failed not equal (non zero)
34c5 : 202561          >        jsr report_error
                       >
34c8 :                 >skip0036
                       >
34c8 : 68              >            pla         ;load status
34c9 : 48              >            pha
                       >            cmp_flag $ff
34ca : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
34cc : f003            >        beq skip0039
                       >        trap            ;failed not equal (non zero)
34ce : 202561          >        jsr report_error
                       >
34d1 :                 >skip0039
                       >
34d1 : 28              >            plp         ;restore status
                        
                                set_x 0,0
                       >            load_flag 0
34d2 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
34d4 : 48              >            pha         ;use stack to load status
34d5 : a200            >            ldx #0     ;precharge index x
34d7 : 28              >            plp
                        
34d8 : da                       phx
                                tst_x 0,0
34d9 : 08              >            php         ;save flags
34da : e000            >            cpx #0     ;test result
                       >            trap_ne
34dc : f003            >        beq skip0044
                       >        trap            ;failed not equal (non zero)
34de : 202561          >        jsr report_error
                       >
34e1 :                 >skip0044
                       >
34e1 : 68              >            pla         ;load status
34e2 : 48              >            pha
                       >            cmp_flag 0
34e3 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
34e5 : f003            >        beq skip0047
                       >        trap            ;failed not equal (non zero)
34e7 : 202561          >        jsr report_error
                       >
34ea :                 >skip0047
                       >
34ea : 28              >            plp         ;restore status
                        
                                set_x $ff,$ff
                       >            load_flag $ff
34eb : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
34ed : 48              >            pha         ;use stack to load status
34ee : a2ff            >            ldx #$ff     ;precharge index x
34f0 : 28              >            plp
                        
34f1 : da                       phx
                                tst_x $ff,$ff
34f2 : 08              >            php         ;save flags
34f3 : e0ff            >            cpx #$ff     ;test result
                       >            trap_ne
34f5 : f003            >        beq skip0052
                       >        trap            ;failed not equal (non zero)
34f7 : 202561          >        jsr report_error
                       >
34fa :                 >skip0052
                       >
34fa : 68              >            pla         ;load status
34fb : 48              >            pha
                       >            cmp_flag $ff
34fc : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
34fe : f003            >        beq skip0055
                       >        trap            ;failed not equal (non zero)
3500 : 202561          >        jsr report_error
                       >
3503 :                 >skip0055
                       >
3503 : 28              >            plp         ;restore status
                        
                                set_x 1,0
                       >            load_flag 0
3504 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3506 : 48              >            pha         ;use stack to load status
3507 : a201            >            ldx #1     ;precharge index x
3509 : 28              >            plp
                        
350a : da                       phx
                                tst_x 1,0
350b : 08              >            php         ;save flags
350c : e001            >            cpx #1     ;test result
                       >            trap_ne
350e : f003            >        beq skip0060
                       >        trap            ;failed not equal (non zero)
3510 : 202561          >        jsr report_error
                       >
3513 :                 >skip0060
                       >
3513 : 68              >            pla         ;load status
3514 : 48              >            pha
                       >            cmp_flag 0
3515 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3517 : f003            >        beq skip0063
                       >        trap            ;failed not equal (non zero)
3519 : 202561          >        jsr report_error
                       >
351c :                 >skip0063
                       >
351c : 28              >            plp         ;restore status
                        
                                set_x 0,$ff
                       >            load_flag $ff
351d : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
351f : 48              >            pha         ;use stack to load status
3520 : a200            >            ldx #0     ;precharge index x
3522 : 28              >            plp
                        
3523 : da                       phx
                                tst_x 0,$ff
3524 : 08              >            php         ;save flags
3525 : e000            >            cpx #0     ;test result
                       >            trap_ne
3527 : f003            >        beq skip0068
                       >        trap            ;failed not equal (non zero)
3529 : 202561          >        jsr report_error
                       >
352c :                 >skip0068
                       >
352c : 68              >            pla         ;load status
352d : 48              >            pha
                       >            cmp_flag $ff
352e : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3530 : f003            >        beq skip0071
                       >        trap            ;failed not equal (non zero)
3532 : 202561          >        jsr report_error
                       >
3535 :                 >skip0071
                       >
3535 : 28              >            plp         ;restore status
                        
                                set_x $ff,0
                       >            load_flag 0
3536 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3538 : 48              >            pha         ;use stack to load status
3539 : a2ff            >            ldx #$ff     ;precharge index x
353b : 28              >            plp
                        
353c : da                       phx
                                tst_x $ff,0
353d : 08              >            php         ;save flags
353e : e0ff            >            cpx #$ff     ;test result
                       >            trap_ne
3540 : f003            >        beq skip0076
                       >        trap            ;failed not equal (non zero)
3542 : 202561          >        jsr report_error
                       >
3545 :                 >skip0076
                       >
3545 : 68              >            pla         ;load status
3546 : 48              >            pha
                       >            cmp_flag 0
3547 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3549 : f003            >        beq skip0079
                       >        trap            ;failed not equal (non zero)
354b : 202561          >        jsr report_error
                       >
354e :                 >skip0079
                       >
354e : 28              >            plp         ;restore status
                        
                                set_x 0,$ff     ;pull
                       >            load_flag $ff     
354f : a9ff            >            lda #$ff                  ;allow test to change I-flag (no mask)
                       >
3551 : 48              >            pha         ;use stack to load status
3552 : a200            >            ldx #0     ;precharge index x
3554 : 28              >            plp
                        
3555 : fa                       plx
                                tst_x $ff,$ff-zero
3556 : 08              >            php         ;save flags
3557 : e0ff            >            cpx #$ff     ;test result
                       >            trap_ne
3559 : f003            >        beq skip0084
                       >        trap            ;failed not equal (non zero)
355b : 202561          >        jsr report_error
                       >
355e :                 >skip0084
                       >
355e : 68              >            pla         ;load status
355f : 48              >            pha
                       >            cmp_flag $ff-zero
3560 : c9fd            >            cmp #($ff-zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3562 : f003            >        beq skip0087
                       >        trap            ;failed not equal (non zero)
3564 : 202561          >        jsr report_error
                       >
3567 :                 >skip0087
                       >
3567 : 28              >            plp         ;restore status
                        
                                set_x $ff,0
                       >            load_flag 0
3568 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
356a : 48              >            pha         ;use stack to load status
356b : a2ff            >            ldx #$ff     ;precharge index x
356d : 28              >            plp
                        
356e : fa                       plx
                                tst_x 0,zero
356f : 08              >            php         ;save flags
3570 : e000            >            cpx #0     ;test result
                       >            trap_ne
3572 : f003            >        beq skip0092
                       >        trap            ;failed not equal (non zero)
3574 : 202561          >        jsr report_error
                       >
3577 :                 >skip0092
                       >
3577 : 68              >            pla         ;load status
3578 : 48              >            pha
                       >            cmp_flag zero
3579 : c932            >            cmp #(zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
357b : f003            >        beq skip0095
                       >        trap            ;failed not equal (non zero)
357d : 202561          >        jsr report_error
                       >
3580 :                 >skip0095
                       >
3580 : 28              >            plp         ;restore status
                        
                                set_x $fe,$ff
                       >            load_flag $ff
3581 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3583 : 48              >            pha         ;use stack to load status
3584 : a2fe            >            ldx #$fe     ;precharge index x
3586 : 28              >            plp
                        
3587 : fa                       plx
                                tst_x 1,$ff-zero-minus
3588 : 08              >            php         ;save flags
3589 : e001            >            cpx #1     ;test result
                       >            trap_ne
358b : f003            >        beq skip0100
                       >        trap            ;failed not equal (non zero)
358d : 202561          >        jsr report_error
                       >
3590 :                 >skip0100
                       >
3590 : 68              >            pla         ;load status
3591 : 48              >            pha
                       >            cmp_flag $ff-zero-minus
3592 : c97d            >            cmp #($ff-zero-minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3594 : f003            >        beq skip0103
                       >        trap            ;failed not equal (non zero)
3596 : 202561          >        jsr report_error
                       >
3599 :                 >skip0103
                       >
3599 : 28              >            plp         ;restore status
                        
                                set_x 0,0
                       >            load_flag 0
359a : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
359c : 48              >            pha         ;use stack to load status
359d : a200            >            ldx #0     ;precharge index x
359f : 28              >            plp
                        
35a0 : fa                       plx
                                tst_x $ff,minus
35a1 : 08              >            php         ;save flags
35a2 : e0ff            >            cpx #$ff     ;test result
                       >            trap_ne
35a4 : f003            >        beq skip0108
                       >        trap            ;failed not equal (non zero)
35a6 : 202561          >        jsr report_error
                       >
35a9 :                 >skip0108
                       >
35a9 : 68              >            pla         ;load status
35aa : 48              >            pha
                       >            cmp_flag minus
35ab : c9b0            >            cmp #(minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
35ad : f003            >        beq skip0111
                       >        trap            ;failed not equal (non zero)
35af : 202561          >        jsr report_error
                       >
35b2 :                 >skip0111
                       >
35b2 : 28              >            plp         ;restore status
                        
                                set_x $ff,$ff
                       >            load_flag $ff
35b3 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
35b5 : 48              >            pha         ;use stack to load status
35b6 : a2ff            >            ldx #$ff     ;precharge index x
35b8 : 28              >            plp
                        
35b9 : fa                       plx
                                tst_x 0,$ff-minus
35ba : 08              >            php         ;save flags
35bb : e000            >            cpx #0     ;test result
                       >            trap_ne
35bd : f003            >        beq skip0116
                       >        trap            ;failed not equal (non zero)
35bf : 202561          >        jsr report_error
                       >
35c2 :                 >skip0116
                       >
35c2 : 68              >            pla         ;load status
35c3 : 48              >            pha
                       >            cmp_flag $ff-minus
35c4 : c97f            >            cmp #($ff-minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
35c6 : f003            >        beq skip0119
                       >        trap            ;failed not equal (non zero)
35c8 : 202561          >        jsr report_error
                       >
35cb :                 >skip0119
                       >
35cb : 28              >            plp         ;restore status
                        
                                set_x $fe,0
                       >            load_flag 0
35cc : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
35ce : 48              >            pha         ;use stack to load status
35cf : a2fe            >            ldx #$fe     ;precharge index x
35d1 : 28              >            plp
                        
35d2 : fa                       plx
                                tst_x 1,0
35d3 : 08              >            php         ;save flags
35d4 : e001            >            cpx #1     ;test result
                       >            trap_ne
35d6 : f003            >        beq skip0124
                       >        trap            ;failed not equal (non zero)
35d8 : 202561          >        jsr report_error
                       >
35db :                 >skip0124
                       >
35db : 68              >            pla         ;load status
35dc : 48              >            pha
                       >            cmp_flag 0
35dd : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
35df : f003            >        beq skip0127
                       >        trap            ;failed not equal (non zero)
35e1 : 202561          >        jsr report_error
                       >
35e4 :                 >skip0127
                       >
35e4 : 28              >            plp         ;restore status
                        
35e5 : c0aa                     cpy #$aa        ;Y unchanged
                                trap_ne
35e7 : f003            >        beq skip0129
                       >        trap            ;failed not equal (non zero)
35e9 : 202561          >        jsr report_error
                       >
35ec :                 >skip0129
                        
                                next_test            
35ec : ad0232          >            lda test_case   ;previous test
35ef : c902            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
35f1 : f003            >        beq skip0132
                       >        trap            ;failed not equal (non zero)
35f3 : 202561          >        jsr report_error
                       >
35f6 :                 >skip0132
                       >
0003 =                 >test_num = test_num + 1
35f6 : a903            >            lda #test_num   ;*** next tests' number
35f8 : 8d0232          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                         
                        ; test PHY does not alter flags or Y but PLY does
35fb : a255                     ldx #$55        ;x & a protected
                                set_y 1,$ff     ;push
                       >            load_flag $ff     
35fd : a9ff            >            lda #$ff                  ;allow test to change I-flag (no mask)
                       >
35ff : 48              >            pha         ;use stack to load status
3600 : a001            >            ldy #1     ;precharge index y
3602 : 28              >            plp
                        
3603 : 5a                       phy
                                tst_y 1,$ff
3604 : 08              >            php         ;save flags
3605 : c001            >            cpy #1     ;test result
                       >            trap_ne
3607 : f003            >        beq skip0137
                       >        trap            ;failed not equal (non zero)
3609 : 202561          >        jsr report_error
                       >
360c :                 >skip0137
                       >
360c : 68              >            pla         ;load status
360d : 48              >            pha
                       >            cmp_flag $ff
360e : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3610 : f003            >        beq skip0140
                       >        trap            ;failed not equal (non zero)
3612 : 202561          >        jsr report_error
                       >
3615 :                 >skip0140
                       >
3615 : 28              >            plp         ;restore status
                        
                                set_y 0,0
                       >            load_flag 0
3616 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3618 : 48              >            pha         ;use stack to load status
3619 : a000            >            ldy #0     ;precharge index y
361b : 28              >            plp
                        
361c : 5a                       phy
                                tst_y 0,0
361d : 08              >            php         ;save flags
361e : c000            >            cpy #0     ;test result
                       >            trap_ne
3620 : f003            >        beq skip0145
                       >        trap            ;failed not equal (non zero)
3622 : 202561          >        jsr report_error
                       >
3625 :                 >skip0145
                       >
3625 : 68              >            pla         ;load status
3626 : 48              >            pha
                       >            cmp_flag 0
3627 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3629 : f003            >        beq skip0148
                       >        trap            ;failed not equal (non zero)
362b : 202561          >        jsr report_error
                       >
362e :                 >skip0148
                       >
362e : 28              >            plp         ;restore status
                        
                                set_y $ff,$ff
                       >            load_flag $ff
362f : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3631 : 48              >            pha         ;use stack to load status
3632 : a0ff            >            ldy #$ff     ;precharge index y
3634 : 28              >            plp
                        
3635 : 5a                       phy
                                tst_y $ff,$ff
3636 : 08              >            php         ;save flags
3637 : c0ff            >            cpy #$ff     ;test result
                       >            trap_ne
3639 : f003            >        beq skip0153
                       >        trap            ;failed not equal (non zero)
363b : 202561          >        jsr report_error
                       >
363e :                 >skip0153
                       >
363e : 68              >            pla         ;load status
363f : 48              >            pha
                       >            cmp_flag $ff
3640 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3642 : f003            >        beq skip0156
                       >        trap            ;failed not equal (non zero)
3644 : 202561          >        jsr report_error
                       >
3647 :                 >skip0156
                       >
3647 : 28              >            plp         ;restore status
                        
                                set_y 1,0
                       >            load_flag 0
3648 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
364a : 48              >            pha         ;use stack to load status
364b : a001            >            ldy #1     ;precharge index y
364d : 28              >            plp
                        
364e : 5a                       phy
                                tst_y 1,0
364f : 08              >            php         ;save flags
3650 : c001            >            cpy #1     ;test result
                       >            trap_ne
3652 : f003            >        beq skip0161
                       >        trap            ;failed not equal (non zero)
3654 : 202561          >        jsr report_error
                       >
3657 :                 >skip0161
                       >
3657 : 68              >            pla         ;load status
3658 : 48              >            pha
                       >            cmp_flag 0
3659 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
365b : f003            >        beq skip0164
                       >        trap            ;failed not equal (non zero)
365d : 202561          >        jsr report_error
                       >
3660 :                 >skip0164
                       >
3660 : 28              >            plp         ;restore status
                        
                                set_y 0,$ff
                       >            load_flag $ff
3661 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3663 : 48              >            pha         ;use stack to load status
3664 : a000            >            ldy #0     ;precharge index y
3666 : 28              >            plp
                        
3667 : 5a                       phy
                                tst_y 0,$ff
3668 : 08              >            php         ;save flags
3669 : c000            >            cpy #0     ;test result
                       >            trap_ne
366b : f003            >        beq skip0169
                       >        trap            ;failed not equal (non zero)
366d : 202561          >        jsr report_error
                       >
3670 :                 >skip0169
                       >
3670 : 68              >            pla         ;load status
3671 : 48              >            pha
                       >            cmp_flag $ff
3672 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3674 : f003            >        beq skip0172
                       >        trap            ;failed not equal (non zero)
3676 : 202561          >        jsr report_error
                       >
3679 :                 >skip0172
                       >
3679 : 28              >            plp         ;restore status
                        
                                set_y $ff,0
                       >            load_flag 0
367a : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
367c : 48              >            pha         ;use stack to load status
367d : a0ff            >            ldy #$ff     ;precharge index y
367f : 28              >            plp
                        
3680 : 5a                       phy
                                tst_y $ff,0
3681 : 08              >            php         ;save flags
3682 : c0ff            >            cpy #$ff     ;test result
                       >            trap_ne
3684 : f003            >        beq skip0177
                       >        trap            ;failed not equal (non zero)
3686 : 202561          >        jsr report_error
                       >
3689 :                 >skip0177
                       >
3689 : 68              >            pla         ;load status
368a : 48              >            pha
                       >            cmp_flag 0
368b : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
368d : f003            >        beq skip0180
                       >        trap            ;failed not equal (non zero)
368f : 202561          >        jsr report_error
                       >
3692 :                 >skip0180
                       >
3692 : 28              >            plp         ;restore status
                        
                                set_y 0,$ff     ;pull
                       >            load_flag $ff     
3693 : a9ff            >            lda #$ff                  ;allow test to change I-flag (no mask)
                       >
3695 : 48              >            pha         ;use stack to load status
3696 : a000            >            ldy #0     ;precharge index y
3698 : 28              >            plp
                        
3699 : 7a                       ply
                                tst_y $ff,$ff-zero
369a : 08              >            php         ;save flags
369b : c0ff            >            cpy #$ff     ;test result
                       >            trap_ne
369d : f003            >        beq skip0185
                       >        trap            ;failed not equal (non zero)
369f : 202561          >        jsr report_error
                       >
36a2 :                 >skip0185
                       >
36a2 : 68              >            pla         ;load status
36a3 : 48              >            pha
                       >            cmp_flag $ff-zero
36a4 : c9fd            >            cmp #($ff-zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
36a6 : f003            >        beq skip0188
                       >        trap            ;failed not equal (non zero)
36a8 : 202561          >        jsr report_error
                       >
36ab :                 >skip0188
                       >
36ab : 28              >            plp         ;restore status
                        
                                set_y $ff,0
                       >            load_flag 0
36ac : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
36ae : 48              >            pha         ;use stack to load status
36af : a0ff            >            ldy #$ff     ;precharge index y
36b1 : 28              >            plp
                        
36b2 : 7a                       ply
                                tst_y 0,zero
36b3 : 08              >            php         ;save flags
36b4 : c000            >            cpy #0     ;test result
                       >            trap_ne
36b6 : f003            >        beq skip0193
                       >        trap            ;failed not equal (non zero)
36b8 : 202561          >        jsr report_error
                       >
36bb :                 >skip0193
                       >
36bb : 68              >            pla         ;load status
36bc : 48              >            pha
                       >            cmp_flag zero
36bd : c932            >            cmp #(zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
36bf : f003            >        beq skip0196
                       >        trap            ;failed not equal (non zero)
36c1 : 202561          >        jsr report_error
                       >
36c4 :                 >skip0196
                       >
36c4 : 28              >            plp         ;restore status
                        
                                set_y $fe,$ff
                       >            load_flag $ff
36c5 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
36c7 : 48              >            pha         ;use stack to load status
36c8 : a0fe            >            ldy #$fe     ;precharge index y
36ca : 28              >            plp
                        
36cb : 7a                       ply
                                tst_y 1,$ff-zero-minus
36cc : 08              >            php         ;save flags
36cd : c001            >            cpy #1     ;test result
                       >            trap_ne
36cf : f003            >        beq skip0201
                       >        trap            ;failed not equal (non zero)
36d1 : 202561          >        jsr report_error
                       >
36d4 :                 >skip0201
                       >
36d4 : 68              >            pla         ;load status
36d5 : 48              >            pha
                       >            cmp_flag $ff-zero-minus
36d6 : c97d            >            cmp #($ff-zero-minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
36d8 : f003            >        beq skip0204
                       >        trap            ;failed not equal (non zero)
36da : 202561          >        jsr report_error
                       >
36dd :                 >skip0204
                       >
36dd : 28              >            plp         ;restore status
                        
                                set_y 0,0
                       >            load_flag 0
36de : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
36e0 : 48              >            pha         ;use stack to load status
36e1 : a000            >            ldy #0     ;precharge index y
36e3 : 28              >            plp
                        
36e4 : 7a                       ply
                                tst_y $ff,minus
36e5 : 08              >            php         ;save flags
36e6 : c0ff            >            cpy #$ff     ;test result
                       >            trap_ne
36e8 : f003            >        beq skip0209
                       >        trap            ;failed not equal (non zero)
36ea : 202561          >        jsr report_error
                       >
36ed :                 >skip0209
                       >
36ed : 68              >            pla         ;load status
36ee : 48              >            pha
                       >            cmp_flag minus
36ef : c9b0            >            cmp #(minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
36f1 : f003            >        beq skip0212
                       >        trap            ;failed not equal (non zero)
36f3 : 202561          >        jsr report_error
                       >
36f6 :                 >skip0212
                       >
36f6 : 28              >            plp         ;restore status
                        
                                set_y $ff,$ff
                       >            load_flag $ff
36f7 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
36f9 : 48              >            pha         ;use stack to load status
36fa : a0ff            >            ldy #$ff     ;precharge index y
36fc : 28              >            plp
                        
36fd : 7a                       ply
                                tst_y 0,$ff-minus
36fe : 08              >            php         ;save flags
36ff : c000            >            cpy #0     ;test result
                       >            trap_ne
3701 : f003            >        beq skip0217
                       >        trap            ;failed not equal (non zero)
3703 : 202561          >        jsr report_error
                       >
3706 :                 >skip0217
                       >
3706 : 68              >            pla         ;load status
3707 : 48              >            pha
                       >            cmp_flag $ff-minus
3708 : c97f            >            cmp #($ff-minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
370a : f003            >        beq skip0220
                       >        trap            ;failed not equal (non zero)
370c : 202561          >        jsr report_error
                       >
370f :                 >skip0220
                       >
370f : 28              >            plp         ;restore status
                        
                                set_y $fe,0
                       >            load_flag 0
3710 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3712 : 48              >            pha         ;use stack to load status
3713 : a0fe            >            ldy #$fe     ;precharge index y
3715 : 28              >            plp
                        
3716 : 7a                       ply
                                tst_y 1,0
3717 : 08              >            php         ;save flags
3718 : c001            >            cpy #1     ;test result
                       >            trap_ne
371a : f003            >        beq skip0225
                       >        trap            ;failed not equal (non zero)
371c : 202561          >        jsr report_error
                       >
371f :                 >skip0225
                       >
371f : 68              >            pla         ;load status
3720 : 48              >            pha
                       >            cmp_flag 0
3721 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3723 : f003            >        beq skip0228
                       >        trap            ;failed not equal (non zero)
3725 : 202561          >        jsr report_error
                       >
3728 :                 >skip0228
                       >
3728 : 28              >            plp         ;restore status
                        
3729 : e055                     cpx #$55        ;x unchanged?
                                trap_ne
372b : f003            >        beq skip0230
                       >        trap            ;failed not equal (non zero)
372d : 202561          >        jsr report_error
                       >
3730 :                 >skip0230
                        
                                next_test            
3730 : ad0232          >            lda test_case   ;previous test
3733 : c903            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
3735 : f003            >        beq skip0233
                       >        trap            ;failed not equal (non zero)
3737 : 202561          >        jsr report_error
                       >
373a :                 >skip0233
                       >
0004 =                 >test_num = test_num + 1
373a : a904            >            lda #test_num   ;*** next tests' number
373c : 8d0232          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                         
                        ; PC modifying instructions (BRA, BBR, BBS, 1, 2, 3 byte NOPs, JMP(abs,x))
                        ; testing unconditional branch BRA
                        
373f : a281                     ldx #$81        ;protect unused registers
3741 : a07e                     ldy #$7e
                                set_a 0,$ff
                       >            load_flag $ff
3743 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3745 : 48              >            pha         ;use stack to load status
3746 : a900            >            lda #0     ;precharge accu
3748 : 28              >            plp
                        
3749 : 8003                     bra br1         ;branch should always be taken
                                trap 
374b : 202561          >        jsr report_error
                        
374e :                  br1
                                tst_a 0,$ff
374e : 08              >            php         ;save flags
374f : c900            >            cmp #0     ;test result
                       >            trap_ne
3751 : f003            >        beq skip0239
                       >        trap            ;failed not equal (non zero)
3753 : 202561          >        jsr report_error
                       >
3756 :                 >skip0239
                       >
3756 : 68              >            pla         ;load status
3757 : 48              >            pha
                       >            cmp_flag $ff
3758 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
375a : f003            >        beq skip0242
                       >        trap            ;failed not equal (non zero)
375c : 202561          >        jsr report_error
                       >
375f :                 >skip0242
                       >
375f : 28              >            plp         ;restore status
                        
                                set_a $ff,0
                       >            load_flag 0
3760 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3762 : 48              >            pha         ;use stack to load status
3763 : a9ff            >            lda #$ff     ;precharge accu
3765 : 28              >            plp
                        
3766 : 8003                     bra br2         ;branch should always be taken
                                trap 
3768 : 202561          >        jsr report_error
                        
376b :                  br2
                                tst_a $ff,0
376b : 08              >            php         ;save flags
376c : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
376e : f003            >        beq skip0248
                       >        trap            ;failed not equal (non zero)
3770 : 202561          >        jsr report_error
                       >
3773 :                 >skip0248
                       >
3773 : 68              >            pla         ;load status
3774 : 48              >            pha
                       >            cmp_flag 0
3775 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3777 : f003            >        beq skip0251
                       >        trap            ;failed not equal (non zero)
3779 : 202561          >        jsr report_error
                       >
377c :                 >skip0251
                       >
377c : 28              >            plp         ;restore status
                        
377d : e081                     cpx #$81
                                trap_ne
377f : f003            >        beq skip0253
                       >        trap            ;failed not equal (non zero)
3781 : 202561          >        jsr report_error
                       >
3784 :                 >skip0253
                        
3784 : c07e                     cpy #$7e
                                trap_ne
3786 : f003            >        beq skip0255
                       >        trap            ;failed not equal (non zero)
3788 : 202561          >        jsr report_error
                       >
378b :                 >skip0255
                        
                                next_test            
378b : ad0232          >            lda test_case   ;previous test
378e : c904            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
3790 : f003            >        beq skip0258
                       >        trap            ;failed not equal (non zero)
3792 : 202561          >        jsr report_error
                       >
3795 :                 >skip0258
                       >
0005 =                 >test_num = test_num + 1
3795 : a905            >            lda #test_num   ;*** next tests' number
3797 : 8d0232          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                                
379a : a000                     ldy #0          ;branch range test  
379c : 8076                     bra bra0
                                
379e : c001             bra1    cpy #1
                                trap_ne         ;long range backward
37a0 : f003            >        beq skip0260
                       >        trap            ;failed not equal (non zero)
37a2 : 202561          >        jsr report_error
                       >
37a5 :                 >skip0260
                        
37a5 : c8                       iny        
37a6 : 8062                     bra bra2
                                        
37a8 : c003             bra3    cpy #3
                                trap_ne         ;long range backward
37aa : f003            >        beq skip0262
                       >        trap            ;failed not equal (non zero)
37ac : 202561          >        jsr report_error
                       >
37af :                 >skip0262
                        
37af : c8                       iny        
37b0 : 804e                     bra bra4
                                        
37b2 : c005             bra5    cpy #5
                                trap_ne         ;long range backward
37b4 : f003            >        beq skip0264
                       >        trap            ;failed not equal (non zero)
37b6 : 202561          >        jsr report_error
                       >
37b9 :                 >skip0264
                        
37b9 : c8                       iny        
37ba : a000                     ldy #0
37bc : 8004                     bra brf0
                                
37be : c8                       iny
37bf : c8                       iny
37c0 : c8                       iny
37c1 : c8                       iny        
37c2 : 8003             brf0    bra brf1
                        
37c4 : c8                       iny
37c5 : c8                       iny
37c6 : c8                       iny
37c7 : c8               brf1    iny        
37c8 : 8002                     bra brf2
                                
37ca : c8                       iny
37cb : c8                       iny
37cc : c8               brf2    iny
37cd : c8                       iny        
37ce : 8001                     bra brf3
                                
37d0 : c8                       iny
37d1 : c8               brf3    iny
37d2 : c8                       iny
37d3 : c8                       iny        
37d4 : 8000                     bra brf4
                                
37d6 : c8               brf4    iny
37d7 : c8                       iny
37d8 : c8                       iny
37d9 : c8                       iny
37da : c00a                     cpy #10
                                trap_ne     ;short range forward
37dc : f003            >        beq skip0266
                       >        trap            ;failed not equal (non zero)
37de : 202561          >        jsr report_error
                       >
37e1 :                 >skip0266
                        
37e1 : 8012                     bra brb0
                        
37e3 : 88               brb4    dey
37e4 : 88                       dey
37e5 : 88                       dey
37e6 : 88                       dey
37e7 : 800e                     bra brb5        
                        
37e9 : 88               brb3    dey
37ea : 88                       dey
37eb : 88                       dey
37ec : 80f5                     bra brb4        
                        
37ee : 88               brb2    dey
37ef : 88                       dey
37f0 : 80f7                     bra brb3        
                        
37f2 : 88               brb1    dey
37f3 : 80f9                     bra brb2        
                        
37f5 : 80fb             brb0    bra brb1        
                        
37f7 : c000             brb5    cpy #0
                                trap_ne     ;short range backward
37f9 : f003            >        beq skip0268
                       >        trap            ;failed not equal (non zero)
37fb : 202561          >        jsr report_error
                       >
37fe :                 >skip0268
                        
37fe : 801e                     bra bra6
                        
3800 : c004             bra4    cpy #4
                                trap_ne     ;long range forward
3802 : f003            >        beq skip0270
                       >        trap            ;failed not equal (non zero)
3804 : 202561          >        jsr report_error
                       >
3807 :                 >skip0270
                        
3807 : c8                       iny        
3808 : 80a8                     bra bra5
                                        
380a : c002             bra2    cpy #2
                                trap_ne     ;long range forward
380c : f003            >        beq skip0272
                       >        trap            ;failed not equal (non zero)
380e : 202561          >        jsr report_error
                       >
3811 :                 >skip0272
                        
3811 : c8                       iny        
3812 : 8094                     bra bra3
                                        
3814 : c000             bra0    cpy #0
                                trap_ne     ;long range forward
3816 : f003            >        beq skip0274
                       >        trap            ;failed not equal (non zero)
3818 : 202561          >        jsr report_error
                       >
381b :                 >skip0274
                        
381b : c8                       iny        
381c : 8080                     bra bra1
                                        
381e :                  bra6
                                next_test
381e : ad0232          >            lda test_case   ;previous test
3821 : c905            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
3823 : f003            >        beq skip0277
                       >        trap            ;failed not equal (non zero)
3825 : 202561          >        jsr report_error
                       >
3828 :                 >skip0277
                       >
0006 =                 >test_num = test_num + 1
3828 : a906            >            lda #test_num   ;*** next tests' number
382a : 8d0232          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                                
                            if rkwl_wdc_op = 1
                        ; testing BBR & BBS
                        
                        bbt     macro           ;\1 = bitnum
                                lda #(1<<\1)    ;testing 1 bit on
                                sta zpt
                                set_a $33,0     ;with flags off
                                bbr \1,zpt,fail1\?
                                bbs \1,zpt,ok1\?
                                trap            ;bbs branch not taken
                        fail1\?
                                trap            ;bbr branch taken
                        ok1\?   
                                tst_a $33,0
                                set_a $cc,$ff   ;with flags on
                                bbr \1,zpt,fail2\?
                                bbs \1,zpt,ok2\?
                                trap            ;bbs branch not taken
                        fail2\? 
                                trap            ;bbr branch taken
                        ok2\?   
                                tst_a $cc,$ff
                                lda zpt
                                cmp #(1<<\1)
                                trap_ne         ;zp altered
                                lda #$ff-(1<<\1) ;testing 1 bit off
                                sta zpt
                                set_a $33,0     ;with flags off
                                bbs \1,zpt,fail3\?
                                bbr \1,zpt,ok3\?
                                trap            ;bbr branch not taken
                        fail3\? 
                                trap            ;bbs branch taken
                        ok3\?   
                                tst_a $33,0
                                set_a $cc,$ff   ;with flags on
                                bbs \1,zpt,fail4\?
                                bbr \1,zpt,ok4\?
                                trap            ;bbr branch not taken
                        fail4\? 
                                trap            ;bbs branch taken
                        ok4\?   
                                tst_a $cc,$ff
                                lda zpt
                                cmp #$ff-(1<<\1)
                                trap_ne         ;zp altered
                                endm
                        
382d : a211                     ldx #$11        ;test bbr/bbs integrity
382f : a022                     ldy #$22
                                bbt 0
3831 : a901            >        lda #(1<<0)    ;testing 1 bit on
3833 : 8552            >        sta zpt
                       >        set_a $33,0     ;with flags off
                       >            load_flag 0     
3835 : a900            >            lda #0                  ;allow test to change I-flag (no mask)
                       >
3837 : 48              >            pha         ;use stack to load status
3838 : a933            >            lda #$33     ;precharge accu
383a : 28              >            plp
                       >
383b : 0f5206          >        bbr 0,zpt,fail10279
383e : 8f5206          >        bbs 0,zpt,ok10279
                       >        trap            ;bbs branch not taken
3841 : 202561          >        jsr report_error
                       >
3844 :                 >fail10279
                       >        trap            ;bbr branch taken
3844 : 202561          >        jsr report_error
                       >
3847 :                 >ok10279   
                       >        tst_a $33,0
3847 : 08              >            php         ;save flags
3848 : c933            >            cmp #$33     ;test result
                       >            trap_ne
384a : f003            >        beq skip0285
                       >        trap            ;failed not equal (non zero)
384c : 202561          >        jsr report_error
                       >
384f :                 >skip0285
                       >
384f : 68              >            pla         ;load status
3850 : 48              >            pha
                       >            cmp_flag 0
3851 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3853 : f003            >        beq skip0288
                       >        trap            ;failed not equal (non zero)
3855 : 202561          >        jsr report_error
                       >
3858 :                 >skip0288
                       >
3858 : 28              >            plp         ;restore status
                       >
                       >        set_a $cc,$ff   ;with flags on
                       >            load_flag $ff   
3859 : a9ff            >            lda #$ff                ;allow test to change I-flag (no mask)
                       >
385b : 48              >            pha         ;use stack to load status
385c : a9cc            >            lda #$cc     ;precharge accu
385e : 28              >            plp
                       >
385f : 0f5206          >        bbr 0,zpt,fail20279
3862 : 8f5206          >        bbs 0,zpt,ok20279
                       >        trap            ;bbs branch not taken
3865 : 202561          >        jsr report_error
                       >
3868 :                 >fail20279 
                       >        trap            ;bbr branch taken
3868 : 202561          >        jsr report_error
                       >
386b :                 >ok20279   
                       >        tst_a $cc,$ff
386b : 08              >            php         ;save flags
386c : c9cc            >            cmp #$cc     ;test result
                       >            trap_ne
386e : f003            >        beq skip0295
                       >        trap            ;failed not equal (non zero)
3870 : 202561          >        jsr report_error
                       >
3873 :                 >skip0295
                       >
3873 : 68              >            pla         ;load status
3874 : 48              >            pha
                       >            cmp_flag $ff
3875 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3877 : f003            >        beq skip0298
                       >        trap            ;failed not equal (non zero)
3879 : 202561          >        jsr report_error
                       >
387c :                 >skip0298
                       >
387c : 28              >            plp         ;restore status
                       >
387d : a552            >        lda zpt
387f : c901            >        cmp #(1<<0)
                       >        trap_ne         ;zp altered
3881 : f003            >        beq skip0300
                       >        trap            ;failed not equal (non zero)
3883 : 202561          >        jsr report_error
                       >
3886 :                 >skip0300
                       >
3886 : a9fe            >        lda #$ff-(1<<0) ;testing 1 bit off
3888 : 8552            >        sta zpt
                       >        set_a $33,0     ;with flags off
                       >            load_flag 0     
388a : a900            >            lda #0                  ;allow test to change I-flag (no mask)
                       >
388c : 48              >            pha         ;use stack to load status
388d : a933            >            lda #$33     ;precharge accu
388f : 28              >            plp
                       >
3890 : 8f5206          >        bbs 0,zpt,fail30279
3893 : 0f5206          >        bbr 0,zpt,ok30279
                       >        trap            ;bbr branch not taken
3896 : 202561          >        jsr report_error
                       >
3899 :                 >fail30279 
                       >        trap            ;bbs branch taken
3899 : 202561          >        jsr report_error
                       >
389c :                 >ok30279   
                       >        tst_a $33,0
389c : 08              >            php         ;save flags
389d : c933            >            cmp #$33     ;test result
                       >            trap_ne
389f : f003            >        beq skip0307
                       >        trap            ;failed not equal (non zero)
38a1 : 202561          >        jsr report_error
                       >
38a4 :                 >skip0307
                       >
38a4 : 68              >            pla         ;load status
38a5 : 48              >            pha
                       >            cmp_flag 0
38a6 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
38a8 : f003            >        beq skip0310
                       >        trap            ;failed not equal (non zero)
38aa : 202561          >        jsr report_error
                       >
38ad :                 >skip0310
                       >
38ad : 28              >            plp         ;restore status
                       >
                       >        set_a $cc,$ff   ;with flags on
                       >            load_flag $ff   
38ae : a9ff            >            lda #$ff                ;allow test to change I-flag (no mask)
                       >
38b0 : 48              >            pha         ;use stack to load status
38b1 : a9cc            >            lda #$cc     ;precharge accu
38b3 : 28              >            plp
                       >
38b4 : 8f5206          >        bbs 0,zpt,fail40279
38b7 : 0f5206          >        bbr 0,zpt,ok40279
                       >        trap            ;bbr branch not taken
38ba : 202561          >        jsr report_error
                       >
38bd :                 >fail40279 
                       >        trap            ;bbs branch taken
38bd : 202561          >        jsr report_error
                       >
38c0 :                 >ok40279   
                       >        tst_a $cc,$ff
38c0 : 08              >            php         ;save flags
38c1 : c9cc            >            cmp #$cc     ;test result
                       >            trap_ne
38c3 : f003            >        beq skip0317
                       >        trap            ;failed not equal (non zero)
38c5 : 202561          >        jsr report_error
                       >
38c8 :                 >skip0317
                       >
38c8 : 68              >            pla         ;load status
38c9 : 48              >            pha
                       >            cmp_flag $ff
38ca : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
38cc : f003            >        beq skip0320
                       >        trap            ;failed not equal (non zero)
38ce : 202561          >        jsr report_error
                       >
38d1 :                 >skip0320
                       >
38d1 : 28              >            plp         ;restore status
                       >
38d2 : a552            >        lda zpt
38d4 : c9fe            >        cmp #$ff-(1<<0)
                       >        trap_ne         ;zp altered
38d6 : f003            >        beq skip0322
                       >        trap            ;failed not equal (non zero)
38d8 : 202561          >        jsr report_error
                       >
38db :                 >skip0322
                       >
                        
                                bbt 1
38db : a902            >        lda #(1<<1)    ;testing 1 bit on
38dd : 8552            >        sta zpt
                       >        set_a $33,0     ;with flags off
                       >            load_flag 0     
38df : a900            >            lda #0                  ;allow test to change I-flag (no mask)
                       >
38e1 : 48              >            pha         ;use stack to load status
38e2 : a933            >            lda #$33     ;precharge accu
38e4 : 28              >            plp
                       >
38e5 : 1f5206          >        bbr 1,zpt,fail10324
38e8 : 9f5206          >        bbs 1,zpt,ok10324
                       >        trap            ;bbs branch not taken
38eb : 202561          >        jsr report_error
                       >
38ee :                 >fail10324
                       >        trap            ;bbr branch taken
38ee : 202561          >        jsr report_error
                       >
38f1 :                 >ok10324   
                       >        tst_a $33,0
38f1 : 08              >            php         ;save flags
38f2 : c933            >            cmp #$33     ;test result
                       >            trap_ne
38f4 : f003            >        beq skip0330
                       >        trap            ;failed not equal (non zero)
38f6 : 202561          >        jsr report_error
                       >
38f9 :                 >skip0330
                       >
38f9 : 68              >            pla         ;load status
38fa : 48              >            pha
                       >            cmp_flag 0
38fb : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
38fd : f003            >        beq skip0333
                       >        trap            ;failed not equal (non zero)
38ff : 202561          >        jsr report_error
                       >
3902 :                 >skip0333
                       >
3902 : 28              >            plp         ;restore status
                       >
                       >        set_a $cc,$ff   ;with flags on
                       >            load_flag $ff   
3903 : a9ff            >            lda #$ff                ;allow test to change I-flag (no mask)
                       >
3905 : 48              >            pha         ;use stack to load status
3906 : a9cc            >            lda #$cc     ;precharge accu
3908 : 28              >            plp
                       >
3909 : 1f5206          >        bbr 1,zpt,fail20324
390c : 9f5206          >        bbs 1,zpt,ok20324
                       >        trap            ;bbs branch not taken
390f : 202561          >        jsr report_error
                       >
3912 :                 >fail20324 
                       >        trap            ;bbr branch taken
3912 : 202561          >        jsr report_error
                       >
3915 :                 >ok20324   
                       >        tst_a $cc,$ff
3915 : 08              >            php         ;save flags
3916 : c9cc            >            cmp #$cc     ;test result
                       >            trap_ne
3918 : f003            >        beq skip0340
                       >        trap            ;failed not equal (non zero)
391a : 202561          >        jsr report_error
                       >
391d :                 >skip0340
                       >
391d : 68              >            pla         ;load status
391e : 48              >            pha
                       >            cmp_flag $ff
391f : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3921 : f003            >        beq skip0343
                       >        trap            ;failed not equal (non zero)
3923 : 202561          >        jsr report_error
                       >
3926 :                 >skip0343
                       >
3926 : 28              >            plp         ;restore status
                       >
3927 : a552            >        lda zpt
3929 : c902            >        cmp #(1<<1)
                       >        trap_ne         ;zp altered
392b : f003            >        beq skip0345
                       >        trap            ;failed not equal (non zero)
392d : 202561          >        jsr report_error
                       >
3930 :                 >skip0345
                       >
3930 : a9fd            >        lda #$ff-(1<<1) ;testing 1 bit off
3932 : 8552            >        sta zpt
                       >        set_a $33,0     ;with flags off
                       >            load_flag 0     
3934 : a900            >            lda #0                  ;allow test to change I-flag (no mask)
                       >
3936 : 48              >            pha         ;use stack to load status
3937 : a933            >            lda #$33     ;precharge accu
3939 : 28              >            plp
                       >
393a : 9f5206          >        bbs 1,zpt,fail30324
393d : 1f5206          >        bbr 1,zpt,ok30324
                       >        trap            ;bbr branch not taken
3940 : 202561          >        jsr report_error
                       >
3943 :                 >fail30324 
                       >        trap            ;bbs branch taken
3943 : 202561          >        jsr report_error
                       >
3946 :                 >ok30324   
                       >        tst_a $33,0
3946 : 08              >            php         ;save flags
3947 : c933            >            cmp #$33     ;test result
                       >            trap_ne
3949 : f003            >        beq skip0352
                       >        trap            ;failed not equal (non zero)
394b : 202561          >        jsr report_error
                       >
394e :                 >skip0352
                       >
394e : 68              >            pla         ;load status
394f : 48              >            pha
                       >            cmp_flag 0
3950 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3952 : f003            >        beq skip0355
                       >        trap            ;failed not equal (non zero)
3954 : 202561          >        jsr report_error
                       >
3957 :                 >skip0355
                       >
3957 : 28              >            plp         ;restore status
                       >
                       >        set_a $cc,$ff   ;with flags on
                       >            load_flag $ff   
3958 : a9ff            >            lda #$ff                ;allow test to change I-flag (no mask)
                       >
395a : 48              >            pha         ;use stack to load status
395b : a9cc            >            lda #$cc     ;precharge accu
395d : 28              >            plp
                       >
395e : 9f5206          >        bbs 1,zpt,fail40324
3961 : 1f5206          >        bbr 1,zpt,ok40324
                       >        trap            ;bbr branch not taken
3964 : 202561          >        jsr report_error
                       >
3967 :                 >fail40324 
                       >        trap            ;bbs branch taken
3967 : 202561          >        jsr report_error
                       >
396a :                 >ok40324   
                       >        tst_a $cc,$ff
396a : 08              >            php         ;save flags
396b : c9cc            >            cmp #$cc     ;test result
                       >            trap_ne
396d : f003            >        beq skip0362
                       >        trap            ;failed not equal (non zero)
396f : 202561          >        jsr report_error
                       >
3972 :                 >skip0362
                       >
3972 : 68              >            pla         ;load status
3973 : 48              >            pha
                       >            cmp_flag $ff
3974 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3976 : f003            >        beq skip0365
                       >        trap            ;failed not equal (non zero)
3978 : 202561          >        jsr report_error
                       >
397b :                 >skip0365
                       >
397b : 28              >            plp         ;restore status
                       >
397c : a552            >        lda zpt
397e : c9fd            >        cmp #$ff-(1<<1)
                       >        trap_ne         ;zp altered
3980 : f003            >        beq skip0367
                       >        trap            ;failed not equal (non zero)
3982 : 202561          >        jsr report_error
                       >
3985 :                 >skip0367
                       >
                        
                                bbt 2
3985 : a904            >        lda #(1<<2)    ;testing 1 bit on
3987 : 8552            >        sta zpt
                       >        set_a $33,0     ;with flags off
                       >            load_flag 0     
3989 : a900            >            lda #0                  ;allow test to change I-flag (no mask)
                       >
398b : 48              >            pha         ;use stack to load status
398c : a933            >            lda #$33     ;precharge accu
398e : 28              >            plp
                       >
398f : 2f5206          >        bbr 2,zpt,fail10369
3992 : af5206          >        bbs 2,zpt,ok10369
                       >        trap            ;bbs branch not taken
3995 : 202561          >        jsr report_error
                       >
3998 :                 >fail10369
                       >        trap            ;bbr branch taken
3998 : 202561          >        jsr report_error
                       >
399b :                 >ok10369   
                       >        tst_a $33,0
399b : 08              >            php         ;save flags
399c : c933            >            cmp #$33     ;test result
                       >            trap_ne
399e : f003            >        beq skip0375
                       >        trap            ;failed not equal (non zero)
39a0 : 202561          >        jsr report_error
                       >
39a3 :                 >skip0375
                       >
39a3 : 68              >            pla         ;load status
39a4 : 48              >            pha
                       >            cmp_flag 0
39a5 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
39a7 : f003            >        beq skip0378
                       >        trap            ;failed not equal (non zero)
39a9 : 202561          >        jsr report_error
                       >
39ac :                 >skip0378
                       >
39ac : 28              >            plp         ;restore status
                       >
                       >        set_a $cc,$ff   ;with flags on
                       >            load_flag $ff   
39ad : a9ff            >            lda #$ff                ;allow test to change I-flag (no mask)
                       >
39af : 48              >            pha         ;use stack to load status
39b0 : a9cc            >            lda #$cc     ;precharge accu
39b2 : 28              >            plp
                       >
39b3 : 2f5206          >        bbr 2,zpt,fail20369
39b6 : af5206          >        bbs 2,zpt,ok20369
                       >        trap            ;bbs branch not taken
39b9 : 202561          >        jsr report_error
                       >
39bc :                 >fail20369 
                       >        trap            ;bbr branch taken
39bc : 202561          >        jsr report_error
                       >
39bf :                 >ok20369   
                       >        tst_a $cc,$ff
39bf : 08              >            php         ;save flags
39c0 : c9cc            >            cmp #$cc     ;test result
                       >            trap_ne
39c2 : f003            >        beq skip0385
                       >        trap            ;failed not equal (non zero)
39c4 : 202561          >        jsr report_error
                       >
39c7 :                 >skip0385
                       >
39c7 : 68              >            pla         ;load status
39c8 : 48              >            pha
                       >            cmp_flag $ff
39c9 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
39cb : f003            >        beq skip0388
                       >        trap            ;failed not equal (non zero)
39cd : 202561          >        jsr report_error
                       >
39d0 :                 >skip0388
                       >
39d0 : 28              >            plp         ;restore status
                       >
39d1 : a552            >        lda zpt
39d3 : c904            >        cmp #(1<<2)
                       >        trap_ne         ;zp altered
39d5 : f003            >        beq skip0390
                       >        trap            ;failed not equal (non zero)
39d7 : 202561          >        jsr report_error
                       >
39da :                 >skip0390
                       >
39da : a9fb            >        lda #$ff-(1<<2) ;testing 1 bit off
39dc : 8552            >        sta zpt
                       >        set_a $33,0     ;with flags off
                       >            load_flag 0     
39de : a900            >            lda #0                  ;allow test to change I-flag (no mask)
                       >
39e0 : 48              >            pha         ;use stack to load status
39e1 : a933            >            lda #$33     ;precharge accu
39e3 : 28              >            plp
                       >
39e4 : af5206          >        bbs 2,zpt,fail30369
39e7 : 2f5206          >        bbr 2,zpt,ok30369
                       >        trap            ;bbr branch not taken
39ea : 202561          >        jsr report_error
                       >
39ed :                 >fail30369 
                       >        trap            ;bbs branch taken
39ed : 202561          >        jsr report_error
                       >
39f0 :                 >ok30369   
                       >        tst_a $33,0
39f0 : 08              >            php         ;save flags
39f1 : c933            >            cmp #$33     ;test result
                       >            trap_ne
39f3 : f003            >        beq skip0397
                       >        trap            ;failed not equal (non zero)
39f5 : 202561          >        jsr report_error
                       >
39f8 :                 >skip0397
                       >
39f8 : 68              >            pla         ;load status
39f9 : 48              >            pha
                       >            cmp_flag 0
39fa : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
39fc : f003            >        beq skip0400
                       >        trap            ;failed not equal (non zero)
39fe : 202561          >        jsr report_error
                       >
3a01 :                 >skip0400
                       >
3a01 : 28              >            plp         ;restore status
                       >
                       >        set_a $cc,$ff   ;with flags on
                       >            load_flag $ff   
3a02 : a9ff            >            lda #$ff                ;allow test to change I-flag (no mask)
                       >
3a04 : 48              >            pha         ;use stack to load status
3a05 : a9cc            >            lda #$cc     ;precharge accu
3a07 : 28              >            plp
                       >
3a08 : af5206          >        bbs 2,zpt,fail40369
3a0b : 2f5206          >        bbr 2,zpt,ok40369
                       >        trap            ;bbr branch not taken
3a0e : 202561          >        jsr report_error
                       >
3a11 :                 >fail40369 
                       >        trap            ;bbs branch taken
3a11 : 202561          >        jsr report_error
                       >
3a14 :                 >ok40369   
                       >        tst_a $cc,$ff
3a14 : 08              >            php         ;save flags
3a15 : c9cc            >            cmp #$cc     ;test result
                       >            trap_ne
3a17 : f003            >        beq skip0407
                       >        trap            ;failed not equal (non zero)
3a19 : 202561          >        jsr report_error
                       >
3a1c :                 >skip0407
                       >
3a1c : 68              >            pla         ;load status
3a1d : 48              >            pha
                       >            cmp_flag $ff
3a1e : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3a20 : f003            >        beq skip0410
                       >        trap            ;failed not equal (non zero)
3a22 : 202561          >        jsr report_error
                       >
3a25 :                 >skip0410
                       >
3a25 : 28              >            plp         ;restore status
                       >
3a26 : a552            >        lda zpt
3a28 : c9fb            >        cmp #$ff-(1<<2)
                       >        trap_ne         ;zp altered
3a2a : f003            >        beq skip0412
                       >        trap            ;failed not equal (non zero)
3a2c : 202561          >        jsr report_error
                       >
3a2f :                 >skip0412
                       >
                        
                                bbt 3
3a2f : a908            >        lda #(1<<3)    ;testing 1 bit on
3a31 : 8552            >        sta zpt
                       >        set_a $33,0     ;with flags off
                       >            load_flag 0     
3a33 : a900            >            lda #0                  ;allow test to change I-flag (no mask)
                       >
3a35 : 48              >            pha         ;use stack to load status
3a36 : a933            >            lda #$33     ;precharge accu
3a38 : 28              >            plp
                       >
3a39 : 3f5206          >        bbr 3,zpt,fail10414
3a3c : bf5206          >        bbs 3,zpt,ok10414
                       >        trap            ;bbs branch not taken
3a3f : 202561          >        jsr report_error
                       >
3a42 :                 >fail10414
                       >        trap            ;bbr branch taken
3a42 : 202561          >        jsr report_error
                       >
3a45 :                 >ok10414   
                       >        tst_a $33,0
3a45 : 08              >            php         ;save flags
3a46 : c933            >            cmp #$33     ;test result
                       >            trap_ne
3a48 : f003            >        beq skip0420
                       >        trap            ;failed not equal (non zero)
3a4a : 202561          >        jsr report_error
                       >
3a4d :                 >skip0420
                       >
3a4d : 68              >            pla         ;load status
3a4e : 48              >            pha
                       >            cmp_flag 0
3a4f : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3a51 : f003            >        beq skip0423
                       >        trap            ;failed not equal (non zero)
3a53 : 202561          >        jsr report_error
                       >
3a56 :                 >skip0423
                       >
3a56 : 28              >            plp         ;restore status
                       >
                       >        set_a $cc,$ff   ;with flags on
                       >            load_flag $ff   
3a57 : a9ff            >            lda #$ff                ;allow test to change I-flag (no mask)
                       >
3a59 : 48              >            pha         ;use stack to load status
3a5a : a9cc            >            lda #$cc     ;precharge accu
3a5c : 28              >            plp
                       >
3a5d : 3f5206          >        bbr 3,zpt,fail20414
3a60 : bf5206          >        bbs 3,zpt,ok20414
                       >        trap            ;bbs branch not taken
3a63 : 202561          >        jsr report_error
                       >
3a66 :                 >fail20414 
                       >        trap            ;bbr branch taken
3a66 : 202561          >        jsr report_error
                       >
3a69 :                 >ok20414   
                       >        tst_a $cc,$ff
3a69 : 08              >            php         ;save flags
3a6a : c9cc            >            cmp #$cc     ;test result
                       >            trap_ne
3a6c : f003            >        beq skip0430
                       >        trap            ;failed not equal (non zero)
3a6e : 202561          >        jsr report_error
                       >
3a71 :                 >skip0430
                       >
3a71 : 68              >            pla         ;load status
3a72 : 48              >            pha
                       >            cmp_flag $ff
3a73 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3a75 : f003            >        beq skip0433
                       >        trap            ;failed not equal (non zero)
3a77 : 202561          >        jsr report_error
                       >
3a7a :                 >skip0433
                       >
3a7a : 28              >            plp         ;restore status
                       >
3a7b : a552            >        lda zpt
3a7d : c908            >        cmp #(1<<3)
                       >        trap_ne         ;zp altered
3a7f : f003            >        beq skip0435
                       >        trap            ;failed not equal (non zero)
3a81 : 202561          >        jsr report_error
                       >
3a84 :                 >skip0435
                       >
3a84 : a9f7            >        lda #$ff-(1<<3) ;testing 1 bit off
3a86 : 8552            >        sta zpt
                       >        set_a $33,0     ;with flags off
                       >            load_flag 0     
3a88 : a900            >            lda #0                  ;allow test to change I-flag (no mask)
                       >
3a8a : 48              >            pha         ;use stack to load status
3a8b : a933            >            lda #$33     ;precharge accu
3a8d : 28              >            plp
                       >
3a8e : bf5206          >        bbs 3,zpt,fail30414
3a91 : 3f5206          >        bbr 3,zpt,ok30414
                       >        trap            ;bbr branch not taken
3a94 : 202561          >        jsr report_error
                       >
3a97 :                 >fail30414 
                       >        trap            ;bbs branch taken
3a97 : 202561          >        jsr report_error
                       >
3a9a :                 >ok30414   
                       >        tst_a $33,0
3a9a : 08              >            php         ;save flags
3a9b : c933            >            cmp #$33     ;test result
                       >            trap_ne
3a9d : f003            >        beq skip0442
                       >        trap            ;failed not equal (non zero)
3a9f : 202561          >        jsr report_error
                       >
3aa2 :                 >skip0442
                       >
3aa2 : 68              >            pla         ;load status
3aa3 : 48              >            pha
                       >            cmp_flag 0
3aa4 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3aa6 : f003            >        beq skip0445
                       >        trap            ;failed not equal (non zero)
3aa8 : 202561          >        jsr report_error
                       >
3aab :                 >skip0445
                       >
3aab : 28              >            plp         ;restore status
                       >
                       >        set_a $cc,$ff   ;with flags on
                       >            load_flag $ff   
3aac : a9ff            >            lda #$ff                ;allow test to change I-flag (no mask)
                       >
3aae : 48              >            pha         ;use stack to load status
3aaf : a9cc            >            lda #$cc     ;precharge accu
3ab1 : 28              >            plp
                       >
3ab2 : bf5206          >        bbs 3,zpt,fail40414
3ab5 : 3f5206          >        bbr 3,zpt,ok40414
                       >        trap            ;bbr branch not taken
3ab8 : 202561          >        jsr report_error
                       >
3abb :                 >fail40414 
                       >        trap            ;bbs branch taken
3abb : 202561          >        jsr report_error
                       >
3abe :                 >ok40414   
                       >        tst_a $cc,$ff
3abe : 08              >            php         ;save flags
3abf : c9cc            >            cmp #$cc     ;test result
                       >            trap_ne
3ac1 : f003            >        beq skip0452
                       >        trap            ;failed not equal (non zero)
3ac3 : 202561          >        jsr report_error
                       >
3ac6 :                 >skip0452
                       >
3ac6 : 68              >            pla         ;load status
3ac7 : 48              >            pha
                       >            cmp_flag $ff
3ac8 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3aca : f003            >        beq skip0455
                       >        trap            ;failed not equal (non zero)
3acc : 202561          >        jsr report_error
                       >
3acf :                 >skip0455
                       >
3acf : 28              >            plp         ;restore status
                       >
3ad0 : a552            >        lda zpt
3ad2 : c9f7            >        cmp #$ff-(1<<3)
                       >        trap_ne         ;zp altered
3ad4 : f003            >        beq skip0457
                       >        trap            ;failed not equal (non zero)
3ad6 : 202561          >        jsr report_error
                       >
3ad9 :                 >skip0457
                       >
                        
                                bbt 4
3ad9 : a910            >        lda #(1<<4)    ;testing 1 bit on
3adb : 8552            >        sta zpt
                       >        set_a $33,0     ;with flags off
                       >            load_flag 0     
3add : a900            >            lda #0                  ;allow test to change I-flag (no mask)
                       >
3adf : 48              >            pha         ;use stack to load status
3ae0 : a933            >            lda #$33     ;precharge accu
3ae2 : 28              >            plp
                       >
3ae3 : 4f5206          >        bbr 4,zpt,fail10459
3ae6 : cf5206          >        bbs 4,zpt,ok10459
                       >        trap            ;bbs branch not taken
3ae9 : 202561          >        jsr report_error
                       >
3aec :                 >fail10459
                       >        trap            ;bbr branch taken
3aec : 202561          >        jsr report_error
                       >
3aef :                 >ok10459   
                       >        tst_a $33,0
3aef : 08              >            php         ;save flags
3af0 : c933            >            cmp #$33     ;test result
                       >            trap_ne
3af2 : f003            >        beq skip0465
                       >        trap            ;failed not equal (non zero)
3af4 : 202561          >        jsr report_error
                       >
3af7 :                 >skip0465
                       >
3af7 : 68              >            pla         ;load status
3af8 : 48              >            pha
                       >            cmp_flag 0
3af9 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3afb : f003            >        beq skip0468
                       >        trap            ;failed not equal (non zero)
3afd : 202561          >        jsr report_error
                       >
3b00 :                 >skip0468
                       >
3b00 : 28              >            plp         ;restore status
                       >
                       >        set_a $cc,$ff   ;with flags on
                       >            load_flag $ff   
3b01 : a9ff            >            lda #$ff                ;allow test to change I-flag (no mask)
                       >
3b03 : 48              >            pha         ;use stack to load status
3b04 : a9cc            >            lda #$cc     ;precharge accu
3b06 : 28              >            plp
                       >
3b07 : 4f5206          >        bbr 4,zpt,fail20459
3b0a : cf5206          >        bbs 4,zpt,ok20459
                       >        trap            ;bbs branch not taken
3b0d : 202561          >        jsr report_error
                       >
3b10 :                 >fail20459 
                       >        trap            ;bbr branch taken
3b10 : 202561          >        jsr report_error
                       >
3b13 :                 >ok20459   
                       >        tst_a $cc,$ff
3b13 : 08              >            php         ;save flags
3b14 : c9cc            >            cmp #$cc     ;test result
                       >            trap_ne
3b16 : f003            >        beq skip0475
                       >        trap            ;failed not equal (non zero)
3b18 : 202561          >        jsr report_error
                       >
3b1b :                 >skip0475
                       >
3b1b : 68              >            pla         ;load status
3b1c : 48              >            pha
                       >            cmp_flag $ff
3b1d : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3b1f : f003            >        beq skip0478
                       >        trap            ;failed not equal (non zero)
3b21 : 202561          >        jsr report_error
                       >
3b24 :                 >skip0478
                       >
3b24 : 28              >            plp         ;restore status
                       >
3b25 : a552            >        lda zpt
3b27 : c910            >        cmp #(1<<4)
                       >        trap_ne         ;zp altered
3b29 : f003            >        beq skip0480
                       >        trap            ;failed not equal (non zero)
3b2b : 202561          >        jsr report_error
                       >
3b2e :                 >skip0480
                       >
3b2e : a9ef            >        lda #$ff-(1<<4) ;testing 1 bit off
3b30 : 8552            >        sta zpt
                       >        set_a $33,0     ;with flags off
                       >            load_flag 0     
3b32 : a900            >            lda #0                  ;allow test to change I-flag (no mask)
                       >
3b34 : 48              >            pha         ;use stack to load status
3b35 : a933            >            lda #$33     ;precharge accu
3b37 : 28              >            plp
                       >
3b38 : cf5206          >        bbs 4,zpt,fail30459
3b3b : 4f5206          >        bbr 4,zpt,ok30459
                       >        trap            ;bbr branch not taken
3b3e : 202561          >        jsr report_error
                       >
3b41 :                 >fail30459 
                       >        trap            ;bbs branch taken
3b41 : 202561          >        jsr report_error
                       >
3b44 :                 >ok30459   
                       >        tst_a $33,0
3b44 : 08              >            php         ;save flags
3b45 : c933            >            cmp #$33     ;test result
                       >            trap_ne
3b47 : f003            >        beq skip0487
                       >        trap            ;failed not equal (non zero)
3b49 : 202561          >        jsr report_error
                       >
3b4c :                 >skip0487
                       >
3b4c : 68              >            pla         ;load status
3b4d : 48              >            pha
                       >            cmp_flag 0
3b4e : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3b50 : f003            >        beq skip0490
                       >        trap            ;failed not equal (non zero)
3b52 : 202561          >        jsr report_error
                       >
3b55 :                 >skip0490
                       >
3b55 : 28              >            plp         ;restore status
                       >
                       >        set_a $cc,$ff   ;with flags on
                       >            load_flag $ff   
3b56 : a9ff            >            lda #$ff                ;allow test to change I-flag (no mask)
                       >
3b58 : 48              >            pha         ;use stack to load status
3b59 : a9cc            >            lda #$cc     ;precharge accu
3b5b : 28              >            plp
                       >
3b5c : cf5206          >        bbs 4,zpt,fail40459
3b5f : 4f5206          >        bbr 4,zpt,ok40459
                       >        trap            ;bbr branch not taken
3b62 : 202561          >        jsr report_error
                       >
3b65 :                 >fail40459 
                       >        trap            ;bbs branch taken
3b65 : 202561          >        jsr report_error
                       >
3b68 :                 >ok40459   
                       >        tst_a $cc,$ff
3b68 : 08              >            php         ;save flags
3b69 : c9cc            >            cmp #$cc     ;test result
                       >            trap_ne
3b6b : f003            >        beq skip0497
                       >        trap            ;failed not equal (non zero)
3b6d : 202561          >        jsr report_error
                       >
3b70 :                 >skip0497
                       >
3b70 : 68              >            pla         ;load status
3b71 : 48              >            pha
                       >            cmp_flag $ff
3b72 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3b74 : f003            >        beq skip0500
                       >        trap            ;failed not equal (non zero)
3b76 : 202561          >        jsr report_error
                       >
3b79 :                 >skip0500
                       >
3b79 : 28              >            plp         ;restore status
                       >
3b7a : a552            >        lda zpt
3b7c : c9ef            >        cmp #$ff-(1<<4)
                       >        trap_ne         ;zp altered
3b7e : f003            >        beq skip0502
                       >        trap            ;failed not equal (non zero)
3b80 : 202561          >        jsr report_error
                       >
3b83 :                 >skip0502
                       >
                        
                                bbt 5
3b83 : a920            >        lda #(1<<5)    ;testing 1 bit on
3b85 : 8552            >        sta zpt
                       >        set_a $33,0     ;with flags off
                       >            load_flag 0     
3b87 : a900            >            lda #0                  ;allow test to change I-flag (no mask)
                       >
3b89 : 48              >            pha         ;use stack to load status
3b8a : a933            >            lda #$33     ;precharge accu
3b8c : 28              >            plp
                       >
3b8d : 5f5206          >        bbr 5,zpt,fail10504
3b90 : df5206          >        bbs 5,zpt,ok10504
                       >        trap            ;bbs branch not taken
3b93 : 202561          >        jsr report_error
                       >
3b96 :                 >fail10504
                       >        trap            ;bbr branch taken
3b96 : 202561          >        jsr report_error
                       >
3b99 :                 >ok10504   
                       >        tst_a $33,0
3b99 : 08              >            php         ;save flags
3b9a : c933            >            cmp #$33     ;test result
                       >            trap_ne
3b9c : f003            >        beq skip0510
                       >        trap            ;failed not equal (non zero)
3b9e : 202561          >        jsr report_error
                       >
3ba1 :                 >skip0510
                       >
3ba1 : 68              >            pla         ;load status
3ba2 : 48              >            pha
                       >            cmp_flag 0
3ba3 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3ba5 : f003            >        beq skip0513
                       >        trap            ;failed not equal (non zero)
3ba7 : 202561          >        jsr report_error
                       >
3baa :                 >skip0513
                       >
3baa : 28              >            plp         ;restore status
                       >
                       >        set_a $cc,$ff   ;with flags on
                       >            load_flag $ff   
3bab : a9ff            >            lda #$ff                ;allow test to change I-flag (no mask)
                       >
3bad : 48              >            pha         ;use stack to load status
3bae : a9cc            >            lda #$cc     ;precharge accu
3bb0 : 28              >            plp
                       >
3bb1 : 5f5206          >        bbr 5,zpt,fail20504
3bb4 : df5206          >        bbs 5,zpt,ok20504
                       >        trap            ;bbs branch not taken
3bb7 : 202561          >        jsr report_error
                       >
3bba :                 >fail20504 
                       >        trap            ;bbr branch taken
3bba : 202561          >        jsr report_error
                       >
3bbd :                 >ok20504   
                       >        tst_a $cc,$ff
3bbd : 08              >            php         ;save flags
3bbe : c9cc            >            cmp #$cc     ;test result
                       >            trap_ne
3bc0 : f003            >        beq skip0520
                       >        trap            ;failed not equal (non zero)
3bc2 : 202561          >        jsr report_error
                       >
3bc5 :                 >skip0520
                       >
3bc5 : 68              >            pla         ;load status
3bc6 : 48              >            pha
                       >            cmp_flag $ff
3bc7 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3bc9 : f003            >        beq skip0523
                       >        trap            ;failed not equal (non zero)
3bcb : 202561          >        jsr report_error
                       >
3bce :                 >skip0523
                       >
3bce : 28              >            plp         ;restore status
                       >
3bcf : a552            >        lda zpt
3bd1 : c920            >        cmp #(1<<5)
                       >        trap_ne         ;zp altered
3bd3 : f003            >        beq skip0525
                       >        trap            ;failed not equal (non zero)
3bd5 : 202561          >        jsr report_error
                       >
3bd8 :                 >skip0525
                       >
3bd8 : a9df            >        lda #$ff-(1<<5) ;testing 1 bit off
3bda : 8552            >        sta zpt
                       >        set_a $33,0     ;with flags off
                       >            load_flag 0     
3bdc : a900            >            lda #0                  ;allow test to change I-flag (no mask)
                       >
3bde : 48              >            pha         ;use stack to load status
3bdf : a933            >            lda #$33     ;precharge accu
3be1 : 28              >            plp
                       >
3be2 : df5206          >        bbs 5,zpt,fail30504
3be5 : 5f5206          >        bbr 5,zpt,ok30504
                       >        trap            ;bbr branch not taken
3be8 : 202561          >        jsr report_error
                       >
3beb :                 >fail30504 
                       >        trap            ;bbs branch taken
3beb : 202561          >        jsr report_error
                       >
3bee :                 >ok30504   
                       >        tst_a $33,0
3bee : 08              >            php         ;save flags
3bef : c933            >            cmp #$33     ;test result
                       >            trap_ne
3bf1 : f003            >        beq skip0532
                       >        trap            ;failed not equal (non zero)
3bf3 : 202561          >        jsr report_error
                       >
3bf6 :                 >skip0532
                       >
3bf6 : 68              >            pla         ;load status
3bf7 : 48              >            pha
                       >            cmp_flag 0
3bf8 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3bfa : f003            >        beq skip0535
                       >        trap            ;failed not equal (non zero)
3bfc : 202561          >        jsr report_error
                       >
3bff :                 >skip0535
                       >
3bff : 28              >            plp         ;restore status
                       >
                       >        set_a $cc,$ff   ;with flags on
                       >            load_flag $ff   
3c00 : a9ff            >            lda #$ff                ;allow test to change I-flag (no mask)
                       >
3c02 : 48              >            pha         ;use stack to load status
3c03 : a9cc            >            lda #$cc     ;precharge accu
3c05 : 28              >            plp
                       >
3c06 : df5206          >        bbs 5,zpt,fail40504
3c09 : 5f5206          >        bbr 5,zpt,ok40504
                       >        trap            ;bbr branch not taken
3c0c : 202561          >        jsr report_error
                       >
3c0f :                 >fail40504 
                       >        trap            ;bbs branch taken
3c0f : 202561          >        jsr report_error
                       >
3c12 :                 >ok40504   
                       >        tst_a $cc,$ff
3c12 : 08              >            php         ;save flags
3c13 : c9cc            >            cmp #$cc     ;test result
                       >            trap_ne
3c15 : f003            >        beq skip0542
                       >        trap            ;failed not equal (non zero)
3c17 : 202561          >        jsr report_error
                       >
3c1a :                 >skip0542
                       >
3c1a : 68              >            pla         ;load status
3c1b : 48              >            pha
                       >            cmp_flag $ff
3c1c : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3c1e : f003            >        beq skip0545
                       >        trap            ;failed not equal (non zero)
3c20 : 202561          >        jsr report_error
                       >
3c23 :                 >skip0545
                       >
3c23 : 28              >            plp         ;restore status
                       >
3c24 : a552            >        lda zpt
3c26 : c9df            >        cmp #$ff-(1<<5)
                       >        trap_ne         ;zp altered
3c28 : f003            >        beq skip0547
                       >        trap            ;failed not equal (non zero)
3c2a : 202561          >        jsr report_error
                       >
3c2d :                 >skip0547
                       >
                        
                                bbt 6
3c2d : a940            >        lda #(1<<6)    ;testing 1 bit on
3c2f : 8552            >        sta zpt
                       >        set_a $33,0     ;with flags off
                       >            load_flag 0     
3c31 : a900            >            lda #0                  ;allow test to change I-flag (no mask)
                       >
3c33 : 48              >            pha         ;use stack to load status
3c34 : a933            >            lda #$33     ;precharge accu
3c36 : 28              >            plp
                       >
3c37 : 6f5206          >        bbr 6,zpt,fail10549
3c3a : ef5206          >        bbs 6,zpt,ok10549
                       >        trap            ;bbs branch not taken
3c3d : 202561          >        jsr report_error
                       >
3c40 :                 >fail10549
                       >        trap            ;bbr branch taken
3c40 : 202561          >        jsr report_error
                       >
3c43 :                 >ok10549   
                       >        tst_a $33,0
3c43 : 08              >            php         ;save flags
3c44 : c933            >            cmp #$33     ;test result
                       >            trap_ne
3c46 : f003            >        beq skip0555
                       >        trap            ;failed not equal (non zero)
3c48 : 202561          >        jsr report_error
                       >
3c4b :                 >skip0555
                       >
3c4b : 68              >            pla         ;load status
3c4c : 48              >            pha
                       >            cmp_flag 0
3c4d : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3c4f : f003            >        beq skip0558
                       >        trap            ;failed not equal (non zero)
3c51 : 202561          >        jsr report_error
                       >
3c54 :                 >skip0558
                       >
3c54 : 28              >            plp         ;restore status
                       >
                       >        set_a $cc,$ff   ;with flags on
                       >            load_flag $ff   
3c55 : a9ff            >            lda #$ff                ;allow test to change I-flag (no mask)
                       >
3c57 : 48              >            pha         ;use stack to load status
3c58 : a9cc            >            lda #$cc     ;precharge accu
3c5a : 28              >            plp
                       >
3c5b : 6f5206          >        bbr 6,zpt,fail20549
3c5e : ef5206          >        bbs 6,zpt,ok20549
                       >        trap            ;bbs branch not taken
3c61 : 202561          >        jsr report_error
                       >
3c64 :                 >fail20549 
                       >        trap            ;bbr branch taken
3c64 : 202561          >        jsr report_error
                       >
3c67 :                 >ok20549   
                       >        tst_a $cc,$ff
3c67 : 08              >            php         ;save flags
3c68 : c9cc            >            cmp #$cc     ;test result
                       >            trap_ne
3c6a : f003            >        beq skip0565
                       >        trap            ;failed not equal (non zero)
3c6c : 202561          >        jsr report_error
                       >
3c6f :                 >skip0565
                       >
3c6f : 68              >            pla         ;load status
3c70 : 48              >            pha
                       >            cmp_flag $ff
3c71 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3c73 : f003            >        beq skip0568
                       >        trap            ;failed not equal (non zero)
3c75 : 202561          >        jsr report_error
                       >
3c78 :                 >skip0568
                       >
3c78 : 28              >            plp         ;restore status
                       >
3c79 : a552            >        lda zpt
3c7b : c940            >        cmp #(1<<6)
                       >        trap_ne         ;zp altered
3c7d : f003            >        beq skip0570
                       >        trap            ;failed not equal (non zero)
3c7f : 202561          >        jsr report_error
                       >
3c82 :                 >skip0570
                       >
3c82 : a9bf            >        lda #$ff-(1<<6) ;testing 1 bit off
3c84 : 8552            >        sta zpt
                       >        set_a $33,0     ;with flags off
                       >            load_flag 0     
3c86 : a900            >            lda #0                  ;allow test to change I-flag (no mask)
                       >
3c88 : 48              >            pha         ;use stack to load status
3c89 : a933            >            lda #$33     ;precharge accu
3c8b : 28              >            plp
                       >
3c8c : ef5206          >        bbs 6,zpt,fail30549
3c8f : 6f5206          >        bbr 6,zpt,ok30549
                       >        trap            ;bbr branch not taken
3c92 : 202561          >        jsr report_error
                       >
3c95 :                 >fail30549 
                       >        trap            ;bbs branch taken
3c95 : 202561          >        jsr report_error
                       >
3c98 :                 >ok30549   
                       >        tst_a $33,0
3c98 : 08              >            php         ;save flags
3c99 : c933            >            cmp #$33     ;test result
                       >            trap_ne
3c9b : f003            >        beq skip0577
                       >        trap            ;failed not equal (non zero)
3c9d : 202561          >        jsr report_error
                       >
3ca0 :                 >skip0577
                       >
3ca0 : 68              >            pla         ;load status
3ca1 : 48              >            pha
                       >            cmp_flag 0
3ca2 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3ca4 : f003            >        beq skip0580
                       >        trap            ;failed not equal (non zero)
3ca6 : 202561          >        jsr report_error
                       >
3ca9 :                 >skip0580
                       >
3ca9 : 28              >            plp         ;restore status
                       >
                       >        set_a $cc,$ff   ;with flags on
                       >            load_flag $ff   
3caa : a9ff            >            lda #$ff                ;allow test to change I-flag (no mask)
                       >
3cac : 48              >            pha         ;use stack to load status
3cad : a9cc            >            lda #$cc     ;precharge accu
3caf : 28              >            plp
                       >
3cb0 : ef5206          >        bbs 6,zpt,fail40549
3cb3 : 6f5206          >        bbr 6,zpt,ok40549
                       >        trap            ;bbr branch not taken
3cb6 : 202561          >        jsr report_error
                       >
3cb9 :                 >fail40549 
                       >        trap            ;bbs branch taken
3cb9 : 202561          >        jsr report_error
                       >
3cbc :                 >ok40549   
                       >        tst_a $cc,$ff
3cbc : 08              >            php         ;save flags
3cbd : c9cc            >            cmp #$cc     ;test result
                       >            trap_ne
3cbf : f003            >        beq skip0587
                       >        trap            ;failed not equal (non zero)
3cc1 : 202561          >        jsr report_error
                       >
3cc4 :                 >skip0587
                       >
3cc4 : 68              >            pla         ;load status
3cc5 : 48              >            pha
                       >            cmp_flag $ff
3cc6 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3cc8 : f003            >        beq skip0590
                       >        trap            ;failed not equal (non zero)
3cca : 202561          >        jsr report_error
                       >
3ccd :                 >skip0590
                       >
3ccd : 28              >            plp         ;restore status
                       >
3cce : a552            >        lda zpt
3cd0 : c9bf            >        cmp #$ff-(1<<6)
                       >        trap_ne         ;zp altered
3cd2 : f003            >        beq skip0592
                       >        trap            ;failed not equal (non zero)
3cd4 : 202561          >        jsr report_error
                       >
3cd7 :                 >skip0592
                       >
                        
                                bbt 7
3cd7 : a980            >        lda #(1<<7)    ;testing 1 bit on
3cd9 : 8552            >        sta zpt
                       >        set_a $33,0     ;with flags off
                       >            load_flag 0     
3cdb : a900            >            lda #0                  ;allow test to change I-flag (no mask)
                       >
3cdd : 48              >            pha         ;use stack to load status
3cde : a933            >            lda #$33     ;precharge accu
3ce0 : 28              >            plp
                       >
3ce1 : 7f5206          >        bbr 7,zpt,fail10594
3ce4 : ff5206          >        bbs 7,zpt,ok10594
                       >        trap            ;bbs branch not taken
3ce7 : 202561          >        jsr report_error
                       >
3cea :                 >fail10594
                       >        trap            ;bbr branch taken
3cea : 202561          >        jsr report_error
                       >
3ced :                 >ok10594   
                       >        tst_a $33,0
3ced : 08              >            php         ;save flags
3cee : c933            >            cmp #$33     ;test result
                       >            trap_ne
3cf0 : f003            >        beq skip0600
                       >        trap            ;failed not equal (non zero)
3cf2 : 202561          >        jsr report_error
                       >
3cf5 :                 >skip0600
                       >
3cf5 : 68              >            pla         ;load status
3cf6 : 48              >            pha
                       >            cmp_flag 0
3cf7 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3cf9 : f003            >        beq skip0603
                       >        trap            ;failed not equal (non zero)
3cfb : 202561          >        jsr report_error
                       >
3cfe :                 >skip0603
                       >
3cfe : 28              >            plp         ;restore status
                       >
                       >        set_a $cc,$ff   ;with flags on
                       >            load_flag $ff   
3cff : a9ff            >            lda #$ff                ;allow test to change I-flag (no mask)
                       >
3d01 : 48              >            pha         ;use stack to load status
3d02 : a9cc            >            lda #$cc     ;precharge accu
3d04 : 28              >            plp
                       >
3d05 : 7f5206          >        bbr 7,zpt,fail20594
3d08 : ff5206          >        bbs 7,zpt,ok20594
                       >        trap            ;bbs branch not taken
3d0b : 202561          >        jsr report_error
                       >
3d0e :                 >fail20594 
                       >        trap            ;bbr branch taken
3d0e : 202561          >        jsr report_error
                       >
3d11 :                 >ok20594   
                       >        tst_a $cc,$ff
3d11 : 08              >            php         ;save flags
3d12 : c9cc            >            cmp #$cc     ;test result
                       >            trap_ne
3d14 : f003            >        beq skip0610
                       >        trap            ;failed not equal (non zero)
3d16 : 202561          >        jsr report_error
                       >
3d19 :                 >skip0610
                       >
3d19 : 68              >            pla         ;load status
3d1a : 48              >            pha
                       >            cmp_flag $ff
3d1b : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3d1d : f003            >        beq skip0613
                       >        trap            ;failed not equal (non zero)
3d1f : 202561          >        jsr report_error
                       >
3d22 :                 >skip0613
                       >
3d22 : 28              >            plp         ;restore status
                       >
3d23 : a552            >        lda zpt
3d25 : c980            >        cmp #(1<<7)
                       >        trap_ne         ;zp altered
3d27 : f003            >        beq skip0615
                       >        trap            ;failed not equal (non zero)
3d29 : 202561          >        jsr report_error
                       >
3d2c :                 >skip0615
                       >
3d2c : a97f            >        lda #$ff-(1<<7) ;testing 1 bit off
3d2e : 8552            >        sta zpt
                       >        set_a $33,0     ;with flags off
                       >            load_flag 0     
3d30 : a900            >            lda #0                  ;allow test to change I-flag (no mask)
                       >
3d32 : 48              >            pha         ;use stack to load status
3d33 : a933            >            lda #$33     ;precharge accu
3d35 : 28              >            plp
                       >
3d36 : ff5206          >        bbs 7,zpt,fail30594
3d39 : 7f5206          >        bbr 7,zpt,ok30594
                       >        trap            ;bbr branch not taken
3d3c : 202561          >        jsr report_error
                       >
3d3f :                 >fail30594 
                       >        trap            ;bbs branch taken
3d3f : 202561          >        jsr report_error
                       >
3d42 :                 >ok30594   
                       >        tst_a $33,0
3d42 : 08              >            php         ;save flags
3d43 : c933            >            cmp #$33     ;test result
                       >            trap_ne
3d45 : f003            >        beq skip0622
                       >        trap            ;failed not equal (non zero)
3d47 : 202561          >        jsr report_error
                       >
3d4a :                 >skip0622
                       >
3d4a : 68              >            pla         ;load status
3d4b : 48              >            pha
                       >            cmp_flag 0
3d4c : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3d4e : f003            >        beq skip0625
                       >        trap            ;failed not equal (non zero)
3d50 : 202561          >        jsr report_error
                       >
3d53 :                 >skip0625
                       >
3d53 : 28              >            plp         ;restore status
                       >
                       >        set_a $cc,$ff   ;with flags on
                       >            load_flag $ff   
3d54 : a9ff            >            lda #$ff                ;allow test to change I-flag (no mask)
                       >
3d56 : 48              >            pha         ;use stack to load status
3d57 : a9cc            >            lda #$cc     ;precharge accu
3d59 : 28              >            plp
                       >
3d5a : ff5206          >        bbs 7,zpt,fail40594
3d5d : 7f5206          >        bbr 7,zpt,ok40594
                       >        trap            ;bbr branch not taken
3d60 : 202561          >        jsr report_error
                       >
3d63 :                 >fail40594 
                       >        trap            ;bbs branch taken
3d63 : 202561          >        jsr report_error
                       >
3d66 :                 >ok40594   
                       >        tst_a $cc,$ff
3d66 : 08              >            php         ;save flags
3d67 : c9cc            >            cmp #$cc     ;test result
                       >            trap_ne
3d69 : f003            >        beq skip0632
                       >        trap            ;failed not equal (non zero)
3d6b : 202561          >        jsr report_error
                       >
3d6e :                 >skip0632
                       >
3d6e : 68              >            pla         ;load status
3d6f : 48              >            pha
                       >            cmp_flag $ff
3d70 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3d72 : f003            >        beq skip0635
                       >        trap            ;failed not equal (non zero)
3d74 : 202561          >        jsr report_error
                       >
3d77 :                 >skip0635
                       >
3d77 : 28              >            plp         ;restore status
                       >
3d78 : a552            >        lda zpt
3d7a : c97f            >        cmp #$ff-(1<<7)
                       >        trap_ne         ;zp altered
3d7c : f003            >        beq skip0637
                       >        trap            ;failed not equal (non zero)
3d7e : 202561          >        jsr report_error
                       >
3d81 :                 >skip0637
                       >
                        
3d81 : e011                     cpx #$11
                                trap_ne         ;x overwritten
3d83 : f003            >        beq skip0639
                       >        trap            ;failed not equal (non zero)
3d85 : 202561          >        jsr report_error
                       >
3d88 :                 >skip0639
                        
3d88 : c022                     cpy #$22
                                trap_ne         ;y overwritten
3d8a : f003            >        beq skip0641
                       >        trap            ;failed not equal (non zero)
3d8c : 202561          >        jsr report_error
                       >
3d8f :                 >skip0641
                        
                                next_test 
3d8f : ad0232          >            lda test_case   ;previous test
3d92 : c906            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
3d94 : f003            >        beq skip0644
                       >        trap            ;failed not equal (non zero)
3d96 : 202561          >        jsr report_error
                       >
3d99 :                 >skip0644
                       >
0007 =                 >test_num = test_num + 1
3d99 : a907            >            lda #test_num   ;*** next tests' number
3d9b : 8d0232          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        bbrc    macro           ;\1 = bitnum
                                bbr \1,zpt,skip\?
                                eor #(1<<\1)       
                        skip\?
                                endm
                        bbsc    macro           ;\1 = bitnum
                                bbs \1,zpt,skip\?
                                eor #(1<<\1)       
                        skip\?
                                endm
                        
3d9e : a900                     lda #0          ;combined bit test
3da0 : 8552                     sta zpt
3da2 : a900             bbcl    lda #0
                                bbrc 0
3da4 : 0f5202          >        bbr 0,zpt,skip0646
3da7 : 4901            >        eor #(1<<0)       
3da9 :                 >skip0646
                        
                                bbrc 1
3da9 : 1f5202          >        bbr 1,zpt,skip0647
3dac : 4902            >        eor #(1<<1)       
3dae :                 >skip0647
                        
                                bbrc 2
3dae : 2f5202          >        bbr 2,zpt,skip0648
3db1 : 4904            >        eor #(1<<2)       
3db3 :                 >skip0648
                        
                                bbrc 3
3db3 : 3f5202          >        bbr 3,zpt,skip0649
3db6 : 4908            >        eor #(1<<3)       
3db8 :                 >skip0649
                        
                                bbrc 4
3db8 : 4f5202          >        bbr 4,zpt,skip0650
3dbb : 4910            >        eor #(1<<4)       
3dbd :                 >skip0650
                        
                                bbrc 5
3dbd : 5f5202          >        bbr 5,zpt,skip0651
3dc0 : 4920            >        eor #(1<<5)       
3dc2 :                 >skip0651
                        
                                bbrc 6
3dc2 : 6f5202          >        bbr 6,zpt,skip0652
3dc5 : 4940            >        eor #(1<<6)       
3dc7 :                 >skip0652
                        
                                bbrc 7
3dc7 : 7f5202          >        bbr 7,zpt,skip0653
3dca : 4980            >        eor #(1<<7)       
3dcc :                 >skip0653
                        
3dcc : 4552                     eor zpt
                                trap_ne         ;failed bbr bitnum in accu       
3dce : f003            >        beq skip0654
                       >        trap            ;failed not equal (non zero)
3dd0 : 202561          >        jsr report_error
                       >
3dd3 :                 >skip0654
                        
3dd3 : a9ff                     lda #$ff
                                bbsc 0
3dd5 : 8f5202          >        bbs 0,zpt,skip0656
3dd8 : 4901            >        eor #(1<<0)       
3dda :                 >skip0656
                        
                                bbsc 1
3dda : 9f5202          >        bbs 1,zpt,skip0657
3ddd : 4902            >        eor #(1<<1)       
3ddf :                 >skip0657
                        
                                bbsc 2
3ddf : af5202          >        bbs 2,zpt,skip0658
3de2 : 4904            >        eor #(1<<2)       
3de4 :                 >skip0658
                        
                                bbsc 3
3de4 : bf5202          >        bbs 3,zpt,skip0659
3de7 : 4908            >        eor #(1<<3)       
3de9 :                 >skip0659
                        
                                bbsc 4
3de9 : cf5202          >        bbs 4,zpt,skip0660
3dec : 4910            >        eor #(1<<4)       
3dee :                 >skip0660
                        
                                bbsc 5
3dee : df5202          >        bbs 5,zpt,skip0661
3df1 : 4920            >        eor #(1<<5)       
3df3 :                 >skip0661
                        
                                bbsc 6
3df3 : ef5202          >        bbs 6,zpt,skip0662
3df6 : 4940            >        eor #(1<<6)       
3df8 :                 >skip0662
                        
                                bbsc 7
3df8 : ff5202          >        bbs 7,zpt,skip0663
3dfb : 4980            >        eor #(1<<7)       
3dfd :                 >skip0663
                        
3dfd : 4552                     eor zpt
                                trap_ne         ;failed bbs bitnum in accu       
3dff : f003            >        beq skip0664
                       >        trap            ;failed not equal (non zero)
3e01 : 202561          >        jsr report_error
                       >
3e04 :                 >skip0664
                        
3e04 : e652                     inc zpt
3e06 : d09a                     bne bbcl
                                next_test            
3e08 : ad0232          >            lda test_case   ;previous test
3e0b : c907            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
3e0d : f003            >        beq skip0667
                       >        trap            ;failed not equal (non zero)
3e0f : 202561          >        jsr report_error
                       >
3e12 :                 >skip0667
                       >
0008 =                 >test_num = test_num + 1
3e12 : a908            >            lda #test_num   ;*** next tests' number
3e14 : 8d0232          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                            endif
                            
                        ; testing NOP
                        
                        nop_test    macro       ;\1 = opcode, \2 = # of bytes
                                    ldy #$42
                                    ldx #4-\2
                                    db  \1          ;test nop length
                                if \2 = 1
                                    dex
                                    dex
                                endif
                                if \2 = 2
                                    iny
                                    dex
                                endif
                                if \2 = 3
                                    iny
                                    iny
                                endif
                                    dex
                                    trap_ne         ;wrong number of bytes
                                    set_a $ff-\1,0
                                    db  \1          ;test nop integrity - flags off
                                    nop
                                    nop
                                    tst_a $ff-\1,0
                                    set_a $aa-\1,$ff
                                    db  \1          ;test nop integrity - flags on
                                    nop
                                    nop
                                    tst_a $aa-\1,$ff
                                    cpy #$42
                                    trap_ne         ;y changed
                                    cpx #0
                                    trap_ne         ;x changed
                                    endm
                        
                            if skip_nop = 0
                                nop_test $02,2
3e17 : a042            >            ldy #$42
3e19 : a202            >            ldx #4-2
3e1b : 02              >            db  $02          ;test nop length
                       >        if 2 = 1
                       >            dex
                       >            dex
                       >        endif
                       >        if 2 = 2
3e1c : c8              >            iny
3e1d : ca              >            dex
                       >        endif
                       >        if 2 = 3
                       >            iny
                       >            iny
                       >        endif
3e1e : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
3e1f : f003            >        beq skip0670
                       >        trap            ;failed not equal (non zero)
3e21 : 202561          >        jsr report_error
                       >
3e24 :                 >skip0670
                       >
                       >            set_a $ff-$02,0
                       >            load_flag 0
3e24 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3e26 : 48              >            pha         ;use stack to load status
3e27 : a9fd            >            lda #$ff-$02     ;precharge accu
3e29 : 28              >            plp
                       >
3e2a : 02              >            db  $02          ;test nop integrity - flags off
3e2b : ea              >            nop
3e2c : ea              >            nop
                       >            tst_a $ff-$02,0
3e2d : 08              >            php         ;save flags
3e2e : c9fd            >            cmp #$ff-$02     ;test result
                       >            trap_ne
3e30 : f003            >        beq skip0675
                       >        trap            ;failed not equal (non zero)
3e32 : 202561          >        jsr report_error
                       >
3e35 :                 >skip0675
                       >
3e35 : 68              >            pla         ;load status
3e36 : 48              >            pha
                       >            cmp_flag 0
3e37 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3e39 : f003            >        beq skip0678
                       >        trap            ;failed not equal (non zero)
3e3b : 202561          >        jsr report_error
                       >
3e3e :                 >skip0678
                       >
3e3e : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$02,$ff
                       >            load_flag $ff
3e3f : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3e41 : 48              >            pha         ;use stack to load status
3e42 : a9a8            >            lda #$aa-$02     ;precharge accu
3e44 : 28              >            plp
                       >
3e45 : 02              >            db  $02          ;test nop integrity - flags on
3e46 : ea              >            nop
3e47 : ea              >            nop
                       >            tst_a $aa-$02,$ff
3e48 : 08              >            php         ;save flags
3e49 : c9a8            >            cmp #$aa-$02     ;test result
                       >            trap_ne
3e4b : f003            >        beq skip0683
                       >        trap            ;failed not equal (non zero)
3e4d : 202561          >        jsr report_error
                       >
3e50 :                 >skip0683
                       >
3e50 : 68              >            pla         ;load status
3e51 : 48              >            pha
                       >            cmp_flag $ff
3e52 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3e54 : f003            >        beq skip0686
                       >        trap            ;failed not equal (non zero)
3e56 : 202561          >        jsr report_error
                       >
3e59 :                 >skip0686
                       >
3e59 : 28              >            plp         ;restore status
                       >
3e5a : c042            >            cpy #$42
                       >            trap_ne         ;y changed
3e5c : f003            >        beq skip0688
                       >        trap            ;failed not equal (non zero)
3e5e : 202561          >        jsr report_error
                       >
3e61 :                 >skip0688
                       >
3e61 : e000            >            cpx #0
                       >            trap_ne         ;x changed
3e63 : f003            >        beq skip0690
                       >        trap            ;failed not equal (non zero)
3e65 : 202561          >        jsr report_error
                       >
3e68 :                 >skip0690
                       >
                        
                                nop_test $22,2
3e68 : a042            >            ldy #$42
3e6a : a202            >            ldx #4-2
3e6c : 22              >            db  $22          ;test nop length
                       >        if 2 = 1
                       >            dex
                       >            dex
                       >        endif
                       >        if 2 = 2
3e6d : c8              >            iny
3e6e : ca              >            dex
                       >        endif
                       >        if 2 = 3
                       >            iny
                       >            iny
                       >        endif
3e6f : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
3e70 : f003            >        beq skip0693
                       >        trap            ;failed not equal (non zero)
3e72 : 202561          >        jsr report_error
                       >
3e75 :                 >skip0693
                       >
                       >            set_a $ff-$22,0
                       >            load_flag 0
3e75 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3e77 : 48              >            pha         ;use stack to load status
3e78 : a9dd            >            lda #$ff-$22     ;precharge accu
3e7a : 28              >            plp
                       >
3e7b : 22              >            db  $22          ;test nop integrity - flags off
3e7c : ea              >            nop
3e7d : ea              >            nop
                       >            tst_a $ff-$22,0
3e7e : 08              >            php         ;save flags
3e7f : c9dd            >            cmp #$ff-$22     ;test result
                       >            trap_ne
3e81 : f003            >        beq skip0698
                       >        trap            ;failed not equal (non zero)
3e83 : 202561          >        jsr report_error
                       >
3e86 :                 >skip0698
                       >
3e86 : 68              >            pla         ;load status
3e87 : 48              >            pha
                       >            cmp_flag 0
3e88 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3e8a : f003            >        beq skip0701
                       >        trap            ;failed not equal (non zero)
3e8c : 202561          >        jsr report_error
                       >
3e8f :                 >skip0701
                       >
3e8f : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$22,$ff
                       >            load_flag $ff
3e90 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3e92 : 48              >            pha         ;use stack to load status
3e93 : a988            >            lda #$aa-$22     ;precharge accu
3e95 : 28              >            plp
                       >
3e96 : 22              >            db  $22          ;test nop integrity - flags on
3e97 : ea              >            nop
3e98 : ea              >            nop
                       >            tst_a $aa-$22,$ff
3e99 : 08              >            php         ;save flags
3e9a : c988            >            cmp #$aa-$22     ;test result
                       >            trap_ne
3e9c : f003            >        beq skip0706
                       >        trap            ;failed not equal (non zero)
3e9e : 202561          >        jsr report_error
                       >
3ea1 :                 >skip0706
                       >
3ea1 : 68              >            pla         ;load status
3ea2 : 48              >            pha
                       >            cmp_flag $ff
3ea3 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3ea5 : f003            >        beq skip0709
                       >        trap            ;failed not equal (non zero)
3ea7 : 202561          >        jsr report_error
                       >
3eaa :                 >skip0709
                       >
3eaa : 28              >            plp         ;restore status
                       >
3eab : c042            >            cpy #$42
                       >            trap_ne         ;y changed
3ead : f003            >        beq skip0711
                       >        trap            ;failed not equal (non zero)
3eaf : 202561          >        jsr report_error
                       >
3eb2 :                 >skip0711
                       >
3eb2 : e000            >            cpx #0
                       >            trap_ne         ;x changed
3eb4 : f003            >        beq skip0713
                       >        trap            ;failed not equal (non zero)
3eb6 : 202561          >        jsr report_error
                       >
3eb9 :                 >skip0713
                       >
                        
                                nop_test $42,2
3eb9 : a042            >            ldy #$42
3ebb : a202            >            ldx #4-2
3ebd : 42              >            db  $42          ;test nop length
                       >        if 2 = 1
                       >            dex
                       >            dex
                       >        endif
                       >        if 2 = 2
3ebe : c8              >            iny
3ebf : ca              >            dex
                       >        endif
                       >        if 2 = 3
                       >            iny
                       >            iny
                       >        endif
3ec0 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
3ec1 : f003            >        beq skip0716
                       >        trap            ;failed not equal (non zero)
3ec3 : 202561          >        jsr report_error
                       >
3ec6 :                 >skip0716
                       >
                       >            set_a $ff-$42,0
                       >            load_flag 0
3ec6 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3ec8 : 48              >            pha         ;use stack to load status
3ec9 : a9bd            >            lda #$ff-$42     ;precharge accu
3ecb : 28              >            plp
                       >
3ecc : 42              >            db  $42          ;test nop integrity - flags off
3ecd : ea              >            nop
3ece : ea              >            nop
                       >            tst_a $ff-$42,0
3ecf : 08              >            php         ;save flags
3ed0 : c9bd            >            cmp #$ff-$42     ;test result
                       >            trap_ne
3ed2 : f003            >        beq skip0721
                       >        trap            ;failed not equal (non zero)
3ed4 : 202561          >        jsr report_error
                       >
3ed7 :                 >skip0721
                       >
3ed7 : 68              >            pla         ;load status
3ed8 : 48              >            pha
                       >            cmp_flag 0
3ed9 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3edb : f003            >        beq skip0724
                       >        trap            ;failed not equal (non zero)
3edd : 202561          >        jsr report_error
                       >
3ee0 :                 >skip0724
                       >
3ee0 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$42,$ff
                       >            load_flag $ff
3ee1 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3ee3 : 48              >            pha         ;use stack to load status
3ee4 : a968            >            lda #$aa-$42     ;precharge accu
3ee6 : 28              >            plp
                       >
3ee7 : 42              >            db  $42          ;test nop integrity - flags on
3ee8 : ea              >            nop
3ee9 : ea              >            nop
                       >            tst_a $aa-$42,$ff
3eea : 08              >            php         ;save flags
3eeb : c968            >            cmp #$aa-$42     ;test result
                       >            trap_ne
3eed : f003            >        beq skip0729
                       >        trap            ;failed not equal (non zero)
3eef : 202561          >        jsr report_error
                       >
3ef2 :                 >skip0729
                       >
3ef2 : 68              >            pla         ;load status
3ef3 : 48              >            pha
                       >            cmp_flag $ff
3ef4 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3ef6 : f003            >        beq skip0732
                       >        trap            ;failed not equal (non zero)
3ef8 : 202561          >        jsr report_error
                       >
3efb :                 >skip0732
                       >
3efb : 28              >            plp         ;restore status
                       >
3efc : c042            >            cpy #$42
                       >            trap_ne         ;y changed
3efe : f003            >        beq skip0734
                       >        trap            ;failed not equal (non zero)
3f00 : 202561          >        jsr report_error
                       >
3f03 :                 >skip0734
                       >
3f03 : e000            >            cpx #0
                       >            trap_ne         ;x changed
3f05 : f003            >        beq skip0736
                       >        trap            ;failed not equal (non zero)
3f07 : 202561          >        jsr report_error
                       >
3f0a :                 >skip0736
                       >
                        
                                nop_test $62,2
3f0a : a042            >            ldy #$42
3f0c : a202            >            ldx #4-2
3f0e : 62              >            db  $62          ;test nop length
                       >        if 2 = 1
                       >            dex
                       >            dex
                       >        endif
                       >        if 2 = 2
3f0f : c8              >            iny
3f10 : ca              >            dex
                       >        endif
                       >        if 2 = 3
                       >            iny
                       >            iny
                       >        endif
3f11 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
3f12 : f003            >        beq skip0739
                       >        trap            ;failed not equal (non zero)
3f14 : 202561          >        jsr report_error
                       >
3f17 :                 >skip0739
                       >
                       >            set_a $ff-$62,0
                       >            load_flag 0
3f17 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3f19 : 48              >            pha         ;use stack to load status
3f1a : a99d            >            lda #$ff-$62     ;precharge accu
3f1c : 28              >            plp
                       >
3f1d : 62              >            db  $62          ;test nop integrity - flags off
3f1e : ea              >            nop
3f1f : ea              >            nop
                       >            tst_a $ff-$62,0
3f20 : 08              >            php         ;save flags
3f21 : c99d            >            cmp #$ff-$62     ;test result
                       >            trap_ne
3f23 : f003            >        beq skip0744
                       >        trap            ;failed not equal (non zero)
3f25 : 202561          >        jsr report_error
                       >
3f28 :                 >skip0744
                       >
3f28 : 68              >            pla         ;load status
3f29 : 48              >            pha
                       >            cmp_flag 0
3f2a : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3f2c : f003            >        beq skip0747
                       >        trap            ;failed not equal (non zero)
3f2e : 202561          >        jsr report_error
                       >
3f31 :                 >skip0747
                       >
3f31 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$62,$ff
                       >            load_flag $ff
3f32 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3f34 : 48              >            pha         ;use stack to load status
3f35 : a948            >            lda #$aa-$62     ;precharge accu
3f37 : 28              >            plp
                       >
3f38 : 62              >            db  $62          ;test nop integrity - flags on
3f39 : ea              >            nop
3f3a : ea              >            nop
                       >            tst_a $aa-$62,$ff
3f3b : 08              >            php         ;save flags
3f3c : c948            >            cmp #$aa-$62     ;test result
                       >            trap_ne
3f3e : f003            >        beq skip0752
                       >        trap            ;failed not equal (non zero)
3f40 : 202561          >        jsr report_error
                       >
3f43 :                 >skip0752
                       >
3f43 : 68              >            pla         ;load status
3f44 : 48              >            pha
                       >            cmp_flag $ff
3f45 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3f47 : f003            >        beq skip0755
                       >        trap            ;failed not equal (non zero)
3f49 : 202561          >        jsr report_error
                       >
3f4c :                 >skip0755
                       >
3f4c : 28              >            plp         ;restore status
                       >
3f4d : c042            >            cpy #$42
                       >            trap_ne         ;y changed
3f4f : f003            >        beq skip0757
                       >        trap            ;failed not equal (non zero)
3f51 : 202561          >        jsr report_error
                       >
3f54 :                 >skip0757
                       >
3f54 : e000            >            cpx #0
                       >            trap_ne         ;x changed
3f56 : f003            >        beq skip0759
                       >        trap            ;failed not equal (non zero)
3f58 : 202561          >        jsr report_error
                       >
3f5b :                 >skip0759
                       >
                        
                                nop_test $82,2
3f5b : a042            >            ldy #$42
3f5d : a202            >            ldx #4-2
3f5f : 82              >            db  $82          ;test nop length
                       >        if 2 = 1
                       >            dex
                       >            dex
                       >        endif
                       >        if 2 = 2
3f60 : c8              >            iny
3f61 : ca              >            dex
                       >        endif
                       >        if 2 = 3
                       >            iny
                       >            iny
                       >        endif
3f62 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
3f63 : f003            >        beq skip0762
                       >        trap            ;failed not equal (non zero)
3f65 : 202561          >        jsr report_error
                       >
3f68 :                 >skip0762
                       >
                       >            set_a $ff-$82,0
                       >            load_flag 0
3f68 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3f6a : 48              >            pha         ;use stack to load status
3f6b : a97d            >            lda #$ff-$82     ;precharge accu
3f6d : 28              >            plp
                       >
3f6e : 82              >            db  $82          ;test nop integrity - flags off
3f6f : ea              >            nop
3f70 : ea              >            nop
                       >            tst_a $ff-$82,0
3f71 : 08              >            php         ;save flags
3f72 : c97d            >            cmp #$ff-$82     ;test result
                       >            trap_ne
3f74 : f003            >        beq skip0767
                       >        trap            ;failed not equal (non zero)
3f76 : 202561          >        jsr report_error
                       >
3f79 :                 >skip0767
                       >
3f79 : 68              >            pla         ;load status
3f7a : 48              >            pha
                       >            cmp_flag 0
3f7b : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3f7d : f003            >        beq skip0770
                       >        trap            ;failed not equal (non zero)
3f7f : 202561          >        jsr report_error
                       >
3f82 :                 >skip0770
                       >
3f82 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$82,$ff
                       >            load_flag $ff
3f83 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3f85 : 48              >            pha         ;use stack to load status
3f86 : a928            >            lda #$aa-$82     ;precharge accu
3f88 : 28              >            plp
                       >
3f89 : 82              >            db  $82          ;test nop integrity - flags on
3f8a : ea              >            nop
3f8b : ea              >            nop
                       >            tst_a $aa-$82,$ff
3f8c : 08              >            php         ;save flags
3f8d : c928            >            cmp #$aa-$82     ;test result
                       >            trap_ne
3f8f : f003            >        beq skip0775
                       >        trap            ;failed not equal (non zero)
3f91 : 202561          >        jsr report_error
                       >
3f94 :                 >skip0775
                       >
3f94 : 68              >            pla         ;load status
3f95 : 48              >            pha
                       >            cmp_flag $ff
3f96 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3f98 : f003            >        beq skip0778
                       >        trap            ;failed not equal (non zero)
3f9a : 202561          >        jsr report_error
                       >
3f9d :                 >skip0778
                       >
3f9d : 28              >            plp         ;restore status
                       >
3f9e : c042            >            cpy #$42
                       >            trap_ne         ;y changed
3fa0 : f003            >        beq skip0780
                       >        trap            ;failed not equal (non zero)
3fa2 : 202561          >        jsr report_error
                       >
3fa5 :                 >skip0780
                       >
3fa5 : e000            >            cpx #0
                       >            trap_ne         ;x changed
3fa7 : f003            >        beq skip0782
                       >        trap            ;failed not equal (non zero)
3fa9 : 202561          >        jsr report_error
                       >
3fac :                 >skip0782
                       >
                        
                                nop_test $c2,2
3fac : a042            >            ldy #$42
3fae : a202            >            ldx #4-2
3fb0 : c2              >            db  $c2          ;test nop length
                       >        if 2 = 1
                       >            dex
                       >            dex
                       >        endif
                       >        if 2 = 2
3fb1 : c8              >            iny
3fb2 : ca              >            dex
                       >        endif
                       >        if 2 = 3
                       >            iny
                       >            iny
                       >        endif
3fb3 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
3fb4 : f003            >        beq skip0785
                       >        trap            ;failed not equal (non zero)
3fb6 : 202561          >        jsr report_error
                       >
3fb9 :                 >skip0785
                       >
                       >            set_a $ff-$c2,0
                       >            load_flag 0
3fb9 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3fbb : 48              >            pha         ;use stack to load status
3fbc : a93d            >            lda #$ff-$c2     ;precharge accu
3fbe : 28              >            plp
                       >
3fbf : c2              >            db  $c2          ;test nop integrity - flags off
3fc0 : ea              >            nop
3fc1 : ea              >            nop
                       >            tst_a $ff-$c2,0
3fc2 : 08              >            php         ;save flags
3fc3 : c93d            >            cmp #$ff-$c2     ;test result
                       >            trap_ne
3fc5 : f003            >        beq skip0790
                       >        trap            ;failed not equal (non zero)
3fc7 : 202561          >        jsr report_error
                       >
3fca :                 >skip0790
                       >
3fca : 68              >            pla         ;load status
3fcb : 48              >            pha
                       >            cmp_flag 0
3fcc : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3fce : f003            >        beq skip0793
                       >        trap            ;failed not equal (non zero)
3fd0 : 202561          >        jsr report_error
                       >
3fd3 :                 >skip0793
                       >
3fd3 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$c2,$ff
                       >            load_flag $ff
3fd4 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3fd6 : 48              >            pha         ;use stack to load status
3fd7 : a9e8            >            lda #$aa-$c2     ;precharge accu
3fd9 : 28              >            plp
                       >
3fda : c2              >            db  $c2          ;test nop integrity - flags on
3fdb : ea              >            nop
3fdc : ea              >            nop
                       >            tst_a $aa-$c2,$ff
3fdd : 08              >            php         ;save flags
3fde : c9e8            >            cmp #$aa-$c2     ;test result
                       >            trap_ne
3fe0 : f003            >        beq skip0798
                       >        trap            ;failed not equal (non zero)
3fe2 : 202561          >        jsr report_error
                       >
3fe5 :                 >skip0798
                       >
3fe5 : 68              >            pla         ;load status
3fe6 : 48              >            pha
                       >            cmp_flag $ff
3fe7 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3fe9 : f003            >        beq skip0801
                       >        trap            ;failed not equal (non zero)
3feb : 202561          >        jsr report_error
                       >
3fee :                 >skip0801
                       >
3fee : 28              >            plp         ;restore status
                       >
3fef : c042            >            cpy #$42
                       >            trap_ne         ;y changed
3ff1 : f003            >        beq skip0803
                       >        trap            ;failed not equal (non zero)
3ff3 : 202561          >        jsr report_error
                       >
3ff6 :                 >skip0803
                       >
3ff6 : e000            >            cpx #0
                       >            trap_ne         ;x changed
3ff8 : f003            >        beq skip0805
                       >        trap            ;failed not equal (non zero)
3ffa : 202561          >        jsr report_error
                       >
3ffd :                 >skip0805
                       >
                        
                                nop_test $e2,2
3ffd : a042            >            ldy #$42
3fff : a202            >            ldx #4-2
4001 : e2              >            db  $e2          ;test nop length
                       >        if 2 = 1
                       >            dex
                       >            dex
                       >        endif
                       >        if 2 = 2
4002 : c8              >            iny
4003 : ca              >            dex
                       >        endif
                       >        if 2 = 3
                       >            iny
                       >            iny
                       >        endif
4004 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
4005 : f003            >        beq skip0808
                       >        trap            ;failed not equal (non zero)
4007 : 202561          >        jsr report_error
                       >
400a :                 >skip0808
                       >
                       >            set_a $ff-$e2,0
                       >            load_flag 0
400a : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
400c : 48              >            pha         ;use stack to load status
400d : a91d            >            lda #$ff-$e2     ;precharge accu
400f : 28              >            plp
                       >
4010 : e2              >            db  $e2          ;test nop integrity - flags off
4011 : ea              >            nop
4012 : ea              >            nop
                       >            tst_a $ff-$e2,0
4013 : 08              >            php         ;save flags
4014 : c91d            >            cmp #$ff-$e2     ;test result
                       >            trap_ne
4016 : f003            >        beq skip0813
                       >        trap            ;failed not equal (non zero)
4018 : 202561          >        jsr report_error
                       >
401b :                 >skip0813
                       >
401b : 68              >            pla         ;load status
401c : 48              >            pha
                       >            cmp_flag 0
401d : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
401f : f003            >        beq skip0816
                       >        trap            ;failed not equal (non zero)
4021 : 202561          >        jsr report_error
                       >
4024 :                 >skip0816
                       >
4024 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$e2,$ff
                       >            load_flag $ff
4025 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4027 : 48              >            pha         ;use stack to load status
4028 : a9c8            >            lda #$aa-$e2     ;precharge accu
402a : 28              >            plp
                       >
402b : e2              >            db  $e2          ;test nop integrity - flags on
402c : ea              >            nop
402d : ea              >            nop
                       >            tst_a $aa-$e2,$ff
402e : 08              >            php         ;save flags
402f : c9c8            >            cmp #$aa-$e2     ;test result
                       >            trap_ne
4031 : f003            >        beq skip0821
                       >        trap            ;failed not equal (non zero)
4033 : 202561          >        jsr report_error
                       >
4036 :                 >skip0821
                       >
4036 : 68              >            pla         ;load status
4037 : 48              >            pha
                       >            cmp_flag $ff
4038 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
403a : f003            >        beq skip0824
                       >        trap            ;failed not equal (non zero)
403c : 202561          >        jsr report_error
                       >
403f :                 >skip0824
                       >
403f : 28              >            plp         ;restore status
                       >
4040 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
4042 : f003            >        beq skip0826
                       >        trap            ;failed not equal (non zero)
4044 : 202561          >        jsr report_error
                       >
4047 :                 >skip0826
                       >
4047 : e000            >            cpx #0
                       >            trap_ne         ;x changed
4049 : f003            >        beq skip0828
                       >        trap            ;failed not equal (non zero)
404b : 202561          >        jsr report_error
                       >
404e :                 >skip0828
                       >
                        
                                nop_test $44,2
404e : a042            >            ldy #$42
4050 : a202            >            ldx #4-2
4052 : 44              >            db  $44          ;test nop length
                       >        if 2 = 1
                       >            dex
                       >            dex
                       >        endif
                       >        if 2 = 2
4053 : c8              >            iny
4054 : ca              >            dex
                       >        endif
                       >        if 2 = 3
                       >            iny
                       >            iny
                       >        endif
4055 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
4056 : f003            >        beq skip0831
                       >        trap            ;failed not equal (non zero)
4058 : 202561          >        jsr report_error
                       >
405b :                 >skip0831
                       >
                       >            set_a $ff-$44,0
                       >            load_flag 0
405b : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
405d : 48              >            pha         ;use stack to load status
405e : a9bb            >            lda #$ff-$44     ;precharge accu
4060 : 28              >            plp
                       >
4061 : 44              >            db  $44          ;test nop integrity - flags off
4062 : ea              >            nop
4063 : ea              >            nop
                       >            tst_a $ff-$44,0
4064 : 08              >            php         ;save flags
4065 : c9bb            >            cmp #$ff-$44     ;test result
                       >            trap_ne
4067 : f003            >        beq skip0836
                       >        trap            ;failed not equal (non zero)
4069 : 202561          >        jsr report_error
                       >
406c :                 >skip0836
                       >
406c : 68              >            pla         ;load status
406d : 48              >            pha
                       >            cmp_flag 0
406e : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4070 : f003            >        beq skip0839
                       >        trap            ;failed not equal (non zero)
4072 : 202561          >        jsr report_error
                       >
4075 :                 >skip0839
                       >
4075 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$44,$ff
                       >            load_flag $ff
4076 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4078 : 48              >            pha         ;use stack to load status
4079 : a966            >            lda #$aa-$44     ;precharge accu
407b : 28              >            plp
                       >
407c : 44              >            db  $44          ;test nop integrity - flags on
407d : ea              >            nop
407e : ea              >            nop
                       >            tst_a $aa-$44,$ff
407f : 08              >            php         ;save flags
4080 : c966            >            cmp #$aa-$44     ;test result
                       >            trap_ne
4082 : f003            >        beq skip0844
                       >        trap            ;failed not equal (non zero)
4084 : 202561          >        jsr report_error
                       >
4087 :                 >skip0844
                       >
4087 : 68              >            pla         ;load status
4088 : 48              >            pha
                       >            cmp_flag $ff
4089 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
408b : f003            >        beq skip0847
                       >        trap            ;failed not equal (non zero)
408d : 202561          >        jsr report_error
                       >
4090 :                 >skip0847
                       >
4090 : 28              >            plp         ;restore status
                       >
4091 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
4093 : f003            >        beq skip0849
                       >        trap            ;failed not equal (non zero)
4095 : 202561          >        jsr report_error
                       >
4098 :                 >skip0849
                       >
4098 : e000            >            cpx #0
                       >            trap_ne         ;x changed
409a : f003            >        beq skip0851
                       >        trap            ;failed not equal (non zero)
409c : 202561          >        jsr report_error
                       >
409f :                 >skip0851
                       >
                        
                                nop_test $54,2
409f : a042            >            ldy #$42
40a1 : a202            >            ldx #4-2
40a3 : 54              >            db  $54          ;test nop length
                       >        if 2 = 1
                       >            dex
                       >            dex
                       >        endif
                       >        if 2 = 2
40a4 : c8              >            iny
40a5 : ca              >            dex
                       >        endif
                       >        if 2 = 3
                       >            iny
                       >            iny
                       >        endif
40a6 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
40a7 : f003            >        beq skip0854
                       >        trap            ;failed not equal (non zero)
40a9 : 202561          >        jsr report_error
                       >
40ac :                 >skip0854
                       >
                       >            set_a $ff-$54,0
                       >            load_flag 0
40ac : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
40ae : 48              >            pha         ;use stack to load status
40af : a9ab            >            lda #$ff-$54     ;precharge accu
40b1 : 28              >            plp
                       >
40b2 : 54              >            db  $54          ;test nop integrity - flags off
40b3 : ea              >            nop
40b4 : ea              >            nop
                       >            tst_a $ff-$54,0
40b5 : 08              >            php         ;save flags
40b6 : c9ab            >            cmp #$ff-$54     ;test result
                       >            trap_ne
40b8 : f003            >        beq skip0859
                       >        trap            ;failed not equal (non zero)
40ba : 202561          >        jsr report_error
                       >
40bd :                 >skip0859
                       >
40bd : 68              >            pla         ;load status
40be : 48              >            pha
                       >            cmp_flag 0
40bf : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
40c1 : f003            >        beq skip0862
                       >        trap            ;failed not equal (non zero)
40c3 : 202561          >        jsr report_error
                       >
40c6 :                 >skip0862
                       >
40c6 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$54,$ff
                       >            load_flag $ff
40c7 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
40c9 : 48              >            pha         ;use stack to load status
40ca : a956            >            lda #$aa-$54     ;precharge accu
40cc : 28              >            plp
                       >
40cd : 54              >            db  $54          ;test nop integrity - flags on
40ce : ea              >            nop
40cf : ea              >            nop
                       >            tst_a $aa-$54,$ff
40d0 : 08              >            php         ;save flags
40d1 : c956            >            cmp #$aa-$54     ;test result
                       >            trap_ne
40d3 : f003            >        beq skip0867
                       >        trap            ;failed not equal (non zero)
40d5 : 202561          >        jsr report_error
                       >
40d8 :                 >skip0867
                       >
40d8 : 68              >            pla         ;load status
40d9 : 48              >            pha
                       >            cmp_flag $ff
40da : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
40dc : f003            >        beq skip0870
                       >        trap            ;failed not equal (non zero)
40de : 202561          >        jsr report_error
                       >
40e1 :                 >skip0870
                       >
40e1 : 28              >            plp         ;restore status
                       >
40e2 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
40e4 : f003            >        beq skip0872
                       >        trap            ;failed not equal (non zero)
40e6 : 202561          >        jsr report_error
                       >
40e9 :                 >skip0872
                       >
40e9 : e000            >            cpx #0
                       >            trap_ne         ;x changed
40eb : f003            >        beq skip0874
                       >        trap            ;failed not equal (non zero)
40ed : 202561          >        jsr report_error
                       >
40f0 :                 >skip0874
                       >
                        
                                nop_test $d4,2
40f0 : a042            >            ldy #$42
40f2 : a202            >            ldx #4-2
40f4 : d4              >            db  $d4          ;test nop length
                       >        if 2 = 1
                       >            dex
                       >            dex
                       >        endif
                       >        if 2 = 2
40f5 : c8              >            iny
40f6 : ca              >            dex
                       >        endif
                       >        if 2 = 3
                       >            iny
                       >            iny
                       >        endif
40f7 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
40f8 : f003            >        beq skip0877
                       >        trap            ;failed not equal (non zero)
40fa : 202561          >        jsr report_error
                       >
40fd :                 >skip0877
                       >
                       >            set_a $ff-$d4,0
                       >            load_flag 0
40fd : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
40ff : 48              >            pha         ;use stack to load status
4100 : a92b            >            lda #$ff-$d4     ;precharge accu
4102 : 28              >            plp
                       >
4103 : d4              >            db  $d4          ;test nop integrity - flags off
4104 : ea              >            nop
4105 : ea              >            nop
                       >            tst_a $ff-$d4,0
4106 : 08              >            php         ;save flags
4107 : c92b            >            cmp #$ff-$d4     ;test result
                       >            trap_ne
4109 : f003            >        beq skip0882
                       >        trap            ;failed not equal (non zero)
410b : 202561          >        jsr report_error
                       >
410e :                 >skip0882
                       >
410e : 68              >            pla         ;load status
410f : 48              >            pha
                       >            cmp_flag 0
4110 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4112 : f003            >        beq skip0885
                       >        trap            ;failed not equal (non zero)
4114 : 202561          >        jsr report_error
                       >
4117 :                 >skip0885
                       >
4117 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$d4,$ff
                       >            load_flag $ff
4118 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
411a : 48              >            pha         ;use stack to load status
411b : a9d6            >            lda #$aa-$d4     ;precharge accu
411d : 28              >            plp
                       >
411e : d4              >            db  $d4          ;test nop integrity - flags on
411f : ea              >            nop
4120 : ea              >            nop
                       >            tst_a $aa-$d4,$ff
4121 : 08              >            php         ;save flags
4122 : c9d6            >            cmp #$aa-$d4     ;test result
                       >            trap_ne
4124 : f003            >        beq skip0890
                       >        trap            ;failed not equal (non zero)
4126 : 202561          >        jsr report_error
                       >
4129 :                 >skip0890
                       >
4129 : 68              >            pla         ;load status
412a : 48              >            pha
                       >            cmp_flag $ff
412b : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
412d : f003            >        beq skip0893
                       >        trap            ;failed not equal (non zero)
412f : 202561          >        jsr report_error
                       >
4132 :                 >skip0893
                       >
4132 : 28              >            plp         ;restore status
                       >
4133 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
4135 : f003            >        beq skip0895
                       >        trap            ;failed not equal (non zero)
4137 : 202561          >        jsr report_error
                       >
413a :                 >skip0895
                       >
413a : e000            >            cpx #0
                       >            trap_ne         ;x changed
413c : f003            >        beq skip0897
                       >        trap            ;failed not equal (non zero)
413e : 202561          >        jsr report_error
                       >
4141 :                 >skip0897
                       >
                        
                                nop_test $f4,2
4141 : a042            >            ldy #$42
4143 : a202            >            ldx #4-2
4145 : f4              >            db  $f4          ;test nop length
                       >        if 2 = 1
                       >            dex
                       >            dex
                       >        endif
                       >        if 2 = 2
4146 : c8              >            iny
4147 : ca              >            dex
                       >        endif
                       >        if 2 = 3
                       >            iny
                       >            iny
                       >        endif
4148 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
4149 : f003            >        beq skip0900
                       >        trap            ;failed not equal (non zero)
414b : 202561          >        jsr report_error
                       >
414e :                 >skip0900
                       >
                       >            set_a $ff-$f4,0
                       >            load_flag 0
414e : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4150 : 48              >            pha         ;use stack to load status
4151 : a90b            >            lda #$ff-$f4     ;precharge accu
4153 : 28              >            plp
                       >
4154 : f4              >            db  $f4          ;test nop integrity - flags off
4155 : ea              >            nop
4156 : ea              >            nop
                       >            tst_a $ff-$f4,0
4157 : 08              >            php         ;save flags
4158 : c90b            >            cmp #$ff-$f4     ;test result
                       >            trap_ne
415a : f003            >        beq skip0905
                       >        trap            ;failed not equal (non zero)
415c : 202561          >        jsr report_error
                       >
415f :                 >skip0905
                       >
415f : 68              >            pla         ;load status
4160 : 48              >            pha
                       >            cmp_flag 0
4161 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4163 : f003            >        beq skip0908
                       >        trap            ;failed not equal (non zero)
4165 : 202561          >        jsr report_error
                       >
4168 :                 >skip0908
                       >
4168 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$f4,$ff
                       >            load_flag $ff
4169 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
416b : 48              >            pha         ;use stack to load status
416c : a9b6            >            lda #$aa-$f4     ;precharge accu
416e : 28              >            plp
                       >
416f : f4              >            db  $f4          ;test nop integrity - flags on
4170 : ea              >            nop
4171 : ea              >            nop
                       >            tst_a $aa-$f4,$ff
4172 : 08              >            php         ;save flags
4173 : c9b6            >            cmp #$aa-$f4     ;test result
                       >            trap_ne
4175 : f003            >        beq skip0913
                       >        trap            ;failed not equal (non zero)
4177 : 202561          >        jsr report_error
                       >
417a :                 >skip0913
                       >
417a : 68              >            pla         ;load status
417b : 48              >            pha
                       >            cmp_flag $ff
417c : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
417e : f003            >        beq skip0916
                       >        trap            ;failed not equal (non zero)
4180 : 202561          >        jsr report_error
                       >
4183 :                 >skip0916
                       >
4183 : 28              >            plp         ;restore status
                       >
4184 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
4186 : f003            >        beq skip0918
                       >        trap            ;failed not equal (non zero)
4188 : 202561          >        jsr report_error
                       >
418b :                 >skip0918
                       >
418b : e000            >            cpx #0
                       >            trap_ne         ;x changed
418d : f003            >        beq skip0920
                       >        trap            ;failed not equal (non zero)
418f : 202561          >        jsr report_error
                       >
4192 :                 >skip0920
                       >
                        
                                nop_test $5c,3
4192 : a042            >            ldy #$42
4194 : a201            >            ldx #4-3
4196 : 5c              >            db  $5c          ;test nop length
                       >        if 3 = 1
                       >            dex
                       >            dex
                       >        endif
                       >        if 3 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 3 = 3
4197 : c8              >            iny
4198 : c8              >            iny
                       >        endif
4199 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
419a : f003            >        beq skip0923
                       >        trap            ;failed not equal (non zero)
419c : 202561          >        jsr report_error
                       >
419f :                 >skip0923
                       >
                       >            set_a $ff-$5c,0
                       >            load_flag 0
419f : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
41a1 : 48              >            pha         ;use stack to load status
41a2 : a9a3            >            lda #$ff-$5c     ;precharge accu
41a4 : 28              >            plp
                       >
41a5 : 5c              >            db  $5c          ;test nop integrity - flags off
41a6 : ea              >            nop
41a7 : ea              >            nop
                       >            tst_a $ff-$5c,0
41a8 : 08              >            php         ;save flags
41a9 : c9a3            >            cmp #$ff-$5c     ;test result
                       >            trap_ne
41ab : f003            >        beq skip0928
                       >        trap            ;failed not equal (non zero)
41ad : 202561          >        jsr report_error
                       >
41b0 :                 >skip0928
                       >
41b0 : 68              >            pla         ;load status
41b1 : 48              >            pha
                       >            cmp_flag 0
41b2 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
41b4 : f003            >        beq skip0931
                       >        trap            ;failed not equal (non zero)
41b6 : 202561          >        jsr report_error
                       >
41b9 :                 >skip0931
                       >
41b9 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$5c,$ff
                       >            load_flag $ff
41ba : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
41bc : 48              >            pha         ;use stack to load status
41bd : a94e            >            lda #$aa-$5c     ;precharge accu
41bf : 28              >            plp
                       >
41c0 : 5c              >            db  $5c          ;test nop integrity - flags on
41c1 : ea              >            nop
41c2 : ea              >            nop
                       >            tst_a $aa-$5c,$ff
41c3 : 08              >            php         ;save flags
41c4 : c94e            >            cmp #$aa-$5c     ;test result
                       >            trap_ne
41c6 : f003            >        beq skip0936
                       >        trap            ;failed not equal (non zero)
41c8 : 202561          >        jsr report_error
                       >
41cb :                 >skip0936
                       >
41cb : 68              >            pla         ;load status
41cc : 48              >            pha
                       >            cmp_flag $ff
41cd : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
41cf : f003            >        beq skip0939
                       >        trap            ;failed not equal (non zero)
41d1 : 202561          >        jsr report_error
                       >
41d4 :                 >skip0939
                       >
41d4 : 28              >            plp         ;restore status
                       >
41d5 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
41d7 : f003            >        beq skip0941
                       >        trap            ;failed not equal (non zero)
41d9 : 202561          >        jsr report_error
                       >
41dc :                 >skip0941
                       >
41dc : e000            >            cpx #0
                       >            trap_ne         ;x changed
41de : f003            >        beq skip0943
                       >        trap            ;failed not equal (non zero)
41e0 : 202561          >        jsr report_error
                       >
41e3 :                 >skip0943
                       >
                        
                                nop_test $dc,3
41e3 : a042            >            ldy #$42
41e5 : a201            >            ldx #4-3
41e7 : dc              >            db  $dc          ;test nop length
                       >        if 3 = 1
                       >            dex
                       >            dex
                       >        endif
                       >        if 3 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 3 = 3
41e8 : c8              >            iny
41e9 : c8              >            iny
                       >        endif
41ea : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
41eb : f003            >        beq skip0946
                       >        trap            ;failed not equal (non zero)
41ed : 202561          >        jsr report_error
                       >
41f0 :                 >skip0946
                       >
                       >            set_a $ff-$dc,0
                       >            load_flag 0
41f0 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
41f2 : 48              >            pha         ;use stack to load status
41f3 : a923            >            lda #$ff-$dc     ;precharge accu
41f5 : 28              >            plp
                       >
41f6 : dc              >            db  $dc          ;test nop integrity - flags off
41f7 : ea              >            nop
41f8 : ea              >            nop
                       >            tst_a $ff-$dc,0
41f9 : 08              >            php         ;save flags
41fa : c923            >            cmp #$ff-$dc     ;test result
                       >            trap_ne
41fc : f003            >        beq skip0951
                       >        trap            ;failed not equal (non zero)
41fe : 202561          >        jsr report_error
                       >
4201 :                 >skip0951
                       >
4201 : 68              >            pla         ;load status
4202 : 48              >            pha
                       >            cmp_flag 0
4203 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4205 : f003            >        beq skip0954
                       >        trap            ;failed not equal (non zero)
4207 : 202561          >        jsr report_error
                       >
420a :                 >skip0954
                       >
420a : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$dc,$ff
                       >            load_flag $ff
420b : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
420d : 48              >            pha         ;use stack to load status
420e : a9ce            >            lda #$aa-$dc     ;precharge accu
4210 : 28              >            plp
                       >
4211 : dc              >            db  $dc          ;test nop integrity - flags on
4212 : ea              >            nop
4213 : ea              >            nop
                       >            tst_a $aa-$dc,$ff
4214 : 08              >            php         ;save flags
4215 : c9ce            >            cmp #$aa-$dc     ;test result
                       >            trap_ne
4217 : f003            >        beq skip0959
                       >        trap            ;failed not equal (non zero)
4219 : 202561          >        jsr report_error
                       >
421c :                 >skip0959
                       >
421c : 68              >            pla         ;load status
421d : 48              >            pha
                       >            cmp_flag $ff
421e : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4220 : f003            >        beq skip0962
                       >        trap            ;failed not equal (non zero)
4222 : 202561          >        jsr report_error
                       >
4225 :                 >skip0962
                       >
4225 : 28              >            plp         ;restore status
                       >
4226 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
4228 : f003            >        beq skip0964
                       >        trap            ;failed not equal (non zero)
422a : 202561          >        jsr report_error
                       >
422d :                 >skip0964
                       >
422d : e000            >            cpx #0
                       >            trap_ne         ;x changed
422f : f003            >        beq skip0966
                       >        trap            ;failed not equal (non zero)
4231 : 202561          >        jsr report_error
                       >
4234 :                 >skip0966
                       >
                        
                                nop_test $fc,3
4234 : a042            >            ldy #$42
4236 : a201            >            ldx #4-3
4238 : fc              >            db  $fc          ;test nop length
                       >        if 3 = 1
                       >            dex
                       >            dex
                       >        endif
                       >        if 3 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 3 = 3
4239 : c8              >            iny
423a : c8              >            iny
                       >        endif
423b : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
423c : f003            >        beq skip0969
                       >        trap            ;failed not equal (non zero)
423e : 202561          >        jsr report_error
                       >
4241 :                 >skip0969
                       >
                       >            set_a $ff-$fc,0
                       >            load_flag 0
4241 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4243 : 48              >            pha         ;use stack to load status
4244 : a903            >            lda #$ff-$fc     ;precharge accu
4246 : 28              >            plp
                       >
4247 : fc              >            db  $fc          ;test nop integrity - flags off
4248 : ea              >            nop
4249 : ea              >            nop
                       >            tst_a $ff-$fc,0
424a : 08              >            php         ;save flags
424b : c903            >            cmp #$ff-$fc     ;test result
                       >            trap_ne
424d : f003            >        beq skip0974
                       >        trap            ;failed not equal (non zero)
424f : 202561          >        jsr report_error
                       >
4252 :                 >skip0974
                       >
4252 : 68              >            pla         ;load status
4253 : 48              >            pha
                       >            cmp_flag 0
4254 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4256 : f003            >        beq skip0977
                       >        trap            ;failed not equal (non zero)
4258 : 202561          >        jsr report_error
                       >
425b :                 >skip0977
                       >
425b : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$fc,$ff
                       >            load_flag $ff
425c : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
425e : 48              >            pha         ;use stack to load status
425f : a9ae            >            lda #$aa-$fc     ;precharge accu
4261 : 28              >            plp
                       >
4262 : fc              >            db  $fc          ;test nop integrity - flags on
4263 : ea              >            nop
4264 : ea              >            nop
                       >            tst_a $aa-$fc,$ff
4265 : 08              >            php         ;save flags
4266 : c9ae            >            cmp #$aa-$fc     ;test result
                       >            trap_ne
4268 : f003            >        beq skip0982
                       >        trap            ;failed not equal (non zero)
426a : 202561          >        jsr report_error
                       >
426d :                 >skip0982
                       >
426d : 68              >            pla         ;load status
426e : 48              >            pha
                       >            cmp_flag $ff
426f : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4271 : f003            >        beq skip0985
                       >        trap            ;failed not equal (non zero)
4273 : 202561          >        jsr report_error
                       >
4276 :                 >skip0985
                       >
4276 : 28              >            plp         ;restore status
                       >
4277 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
4279 : f003            >        beq skip0987
                       >        trap            ;failed not equal (non zero)
427b : 202561          >        jsr report_error
                       >
427e :                 >skip0987
                       >
427e : e000            >            cpx #0
                       >            trap_ne         ;x changed
4280 : f003            >        beq skip0989
                       >        trap            ;failed not equal (non zero)
4282 : 202561          >        jsr report_error
                       >
4285 :                 >skip0989
                       >
                        
                                nop_test $03,1
4285 : a042            >            ldy #$42
4287 : a203            >            ldx #4-1
4289 : 03              >            db  $03          ;test nop length
                       >        if 1 = 1
428a : ca              >            dex
428b : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
428c : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
428d : f003            >        beq skip0992
                       >        trap            ;failed not equal (non zero)
428f : 202561          >        jsr report_error
                       >
4292 :                 >skip0992
                       >
                       >            set_a $ff-$03,0
                       >            load_flag 0
4292 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4294 : 48              >            pha         ;use stack to load status
4295 : a9fc            >            lda #$ff-$03     ;precharge accu
4297 : 28              >            plp
                       >
4298 : 03              >            db  $03          ;test nop integrity - flags off
4299 : ea              >            nop
429a : ea              >            nop
                       >            tst_a $ff-$03,0
429b : 08              >            php         ;save flags
429c : c9fc            >            cmp #$ff-$03     ;test result
                       >            trap_ne
429e : f003            >        beq skip0997
                       >        trap            ;failed not equal (non zero)
42a0 : 202561          >        jsr report_error
                       >
42a3 :                 >skip0997
                       >
42a3 : 68              >            pla         ;load status
42a4 : 48              >            pha
                       >            cmp_flag 0
42a5 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
42a7 : f003            >        beq skip1000
                       >        trap            ;failed not equal (non zero)
42a9 : 202561          >        jsr report_error
                       >
42ac :                 >skip1000
                       >
42ac : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$03,$ff
                       >            load_flag $ff
42ad : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
42af : 48              >            pha         ;use stack to load status
42b0 : a9a7            >            lda #$aa-$03     ;precharge accu
42b2 : 28              >            plp
                       >
42b3 : 03              >            db  $03          ;test nop integrity - flags on
42b4 : ea              >            nop
42b5 : ea              >            nop
                       >            tst_a $aa-$03,$ff
42b6 : 08              >            php         ;save flags
42b7 : c9a7            >            cmp #$aa-$03     ;test result
                       >            trap_ne
42b9 : f003            >        beq skip1005
                       >        trap            ;failed not equal (non zero)
42bb : 202561          >        jsr report_error
                       >
42be :                 >skip1005
                       >
42be : 68              >            pla         ;load status
42bf : 48              >            pha
                       >            cmp_flag $ff
42c0 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
42c2 : f003            >        beq skip1008
                       >        trap            ;failed not equal (non zero)
42c4 : 202561          >        jsr report_error
                       >
42c7 :                 >skip1008
                       >
42c7 : 28              >            plp         ;restore status
                       >
42c8 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
42ca : f003            >        beq skip1010
                       >        trap            ;failed not equal (non zero)
42cc : 202561          >        jsr report_error
                       >
42cf :                 >skip1010
                       >
42cf : e000            >            cpx #0
                       >            trap_ne         ;x changed
42d1 : f003            >        beq skip1012
                       >        trap            ;failed not equal (non zero)
42d3 : 202561          >        jsr report_error
                       >
42d6 :                 >skip1012
                       >
                        
                                nop_test $13,1
42d6 : a042            >            ldy #$42
42d8 : a203            >            ldx #4-1
42da : 13              >            db  $13          ;test nop length
                       >        if 1 = 1
42db : ca              >            dex
42dc : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
42dd : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
42de : f003            >        beq skip1015
                       >        trap            ;failed not equal (non zero)
42e0 : 202561          >        jsr report_error
                       >
42e3 :                 >skip1015
                       >
                       >            set_a $ff-$13,0
                       >            load_flag 0
42e3 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
42e5 : 48              >            pha         ;use stack to load status
42e6 : a9ec            >            lda #$ff-$13     ;precharge accu
42e8 : 28              >            plp
                       >
42e9 : 13              >            db  $13          ;test nop integrity - flags off
42ea : ea              >            nop
42eb : ea              >            nop
                       >            tst_a $ff-$13,0
42ec : 08              >            php         ;save flags
42ed : c9ec            >            cmp #$ff-$13     ;test result
                       >            trap_ne
42ef : f003            >        beq skip1020
                       >        trap            ;failed not equal (non zero)
42f1 : 202561          >        jsr report_error
                       >
42f4 :                 >skip1020
                       >
42f4 : 68              >            pla         ;load status
42f5 : 48              >            pha
                       >            cmp_flag 0
42f6 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
42f8 : f003            >        beq skip1023
                       >        trap            ;failed not equal (non zero)
42fa : 202561          >        jsr report_error
                       >
42fd :                 >skip1023
                       >
42fd : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$13,$ff
                       >            load_flag $ff
42fe : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4300 : 48              >            pha         ;use stack to load status
4301 : a997            >            lda #$aa-$13     ;precharge accu
4303 : 28              >            plp
                       >
4304 : 13              >            db  $13          ;test nop integrity - flags on
4305 : ea              >            nop
4306 : ea              >            nop
                       >            tst_a $aa-$13,$ff
4307 : 08              >            php         ;save flags
4308 : c997            >            cmp #$aa-$13     ;test result
                       >            trap_ne
430a : f003            >        beq skip1028
                       >        trap            ;failed not equal (non zero)
430c : 202561          >        jsr report_error
                       >
430f :                 >skip1028
                       >
430f : 68              >            pla         ;load status
4310 : 48              >            pha
                       >            cmp_flag $ff
4311 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4313 : f003            >        beq skip1031
                       >        trap            ;failed not equal (non zero)
4315 : 202561          >        jsr report_error
                       >
4318 :                 >skip1031
                       >
4318 : 28              >            plp         ;restore status
                       >
4319 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
431b : f003            >        beq skip1033
                       >        trap            ;failed not equal (non zero)
431d : 202561          >        jsr report_error
                       >
4320 :                 >skip1033
                       >
4320 : e000            >            cpx #0
                       >            trap_ne         ;x changed
4322 : f003            >        beq skip1035
                       >        trap            ;failed not equal (non zero)
4324 : 202561          >        jsr report_error
                       >
4327 :                 >skip1035
                       >
                        
                                nop_test $23,1
4327 : a042            >            ldy #$42
4329 : a203            >            ldx #4-1
432b : 23              >            db  $23          ;test nop length
                       >        if 1 = 1
432c : ca              >            dex
432d : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
432e : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
432f : f003            >        beq skip1038
                       >        trap            ;failed not equal (non zero)
4331 : 202561          >        jsr report_error
                       >
4334 :                 >skip1038
                       >
                       >            set_a $ff-$23,0
                       >            load_flag 0
4334 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4336 : 48              >            pha         ;use stack to load status
4337 : a9dc            >            lda #$ff-$23     ;precharge accu
4339 : 28              >            plp
                       >
433a : 23              >            db  $23          ;test nop integrity - flags off
433b : ea              >            nop
433c : ea              >            nop
                       >            tst_a $ff-$23,0
433d : 08              >            php         ;save flags
433e : c9dc            >            cmp #$ff-$23     ;test result
                       >            trap_ne
4340 : f003            >        beq skip1043
                       >        trap            ;failed not equal (non zero)
4342 : 202561          >        jsr report_error
                       >
4345 :                 >skip1043
                       >
4345 : 68              >            pla         ;load status
4346 : 48              >            pha
                       >            cmp_flag 0
4347 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4349 : f003            >        beq skip1046
                       >        trap            ;failed not equal (non zero)
434b : 202561          >        jsr report_error
                       >
434e :                 >skip1046
                       >
434e : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$23,$ff
                       >            load_flag $ff
434f : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4351 : 48              >            pha         ;use stack to load status
4352 : a987            >            lda #$aa-$23     ;precharge accu
4354 : 28              >            plp
                       >
4355 : 23              >            db  $23          ;test nop integrity - flags on
4356 : ea              >            nop
4357 : ea              >            nop
                       >            tst_a $aa-$23,$ff
4358 : 08              >            php         ;save flags
4359 : c987            >            cmp #$aa-$23     ;test result
                       >            trap_ne
435b : f003            >        beq skip1051
                       >        trap            ;failed not equal (non zero)
435d : 202561          >        jsr report_error
                       >
4360 :                 >skip1051
                       >
4360 : 68              >            pla         ;load status
4361 : 48              >            pha
                       >            cmp_flag $ff
4362 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4364 : f003            >        beq skip1054
                       >        trap            ;failed not equal (non zero)
4366 : 202561          >        jsr report_error
                       >
4369 :                 >skip1054
                       >
4369 : 28              >            plp         ;restore status
                       >
436a : c042            >            cpy #$42
                       >            trap_ne         ;y changed
436c : f003            >        beq skip1056
                       >        trap            ;failed not equal (non zero)
436e : 202561          >        jsr report_error
                       >
4371 :                 >skip1056
                       >
4371 : e000            >            cpx #0
                       >            trap_ne         ;x changed
4373 : f003            >        beq skip1058
                       >        trap            ;failed not equal (non zero)
4375 : 202561          >        jsr report_error
                       >
4378 :                 >skip1058
                       >
                        
                                nop_test $33,1
4378 : a042            >            ldy #$42
437a : a203            >            ldx #4-1
437c : 33              >            db  $33          ;test nop length
                       >        if 1 = 1
437d : ca              >            dex
437e : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
437f : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
4380 : f003            >        beq skip1061
                       >        trap            ;failed not equal (non zero)
4382 : 202561          >        jsr report_error
                       >
4385 :                 >skip1061
                       >
                       >            set_a $ff-$33,0
                       >            load_flag 0
4385 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4387 : 48              >            pha         ;use stack to load status
4388 : a9cc            >            lda #$ff-$33     ;precharge accu
438a : 28              >            plp
                       >
438b : 33              >            db  $33          ;test nop integrity - flags off
438c : ea              >            nop
438d : ea              >            nop
                       >            tst_a $ff-$33,0
438e : 08              >            php         ;save flags
438f : c9cc            >            cmp #$ff-$33     ;test result
                       >            trap_ne
4391 : f003            >        beq skip1066
                       >        trap            ;failed not equal (non zero)
4393 : 202561          >        jsr report_error
                       >
4396 :                 >skip1066
                       >
4396 : 68              >            pla         ;load status
4397 : 48              >            pha
                       >            cmp_flag 0
4398 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
439a : f003            >        beq skip1069
                       >        trap            ;failed not equal (non zero)
439c : 202561          >        jsr report_error
                       >
439f :                 >skip1069
                       >
439f : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$33,$ff
                       >            load_flag $ff
43a0 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
43a2 : 48              >            pha         ;use stack to load status
43a3 : a977            >            lda #$aa-$33     ;precharge accu
43a5 : 28              >            plp
                       >
43a6 : 33              >            db  $33          ;test nop integrity - flags on
43a7 : ea              >            nop
43a8 : ea              >            nop
                       >            tst_a $aa-$33,$ff
43a9 : 08              >            php         ;save flags
43aa : c977            >            cmp #$aa-$33     ;test result
                       >            trap_ne
43ac : f003            >        beq skip1074
                       >        trap            ;failed not equal (non zero)
43ae : 202561          >        jsr report_error
                       >
43b1 :                 >skip1074
                       >
43b1 : 68              >            pla         ;load status
43b2 : 48              >            pha
                       >            cmp_flag $ff
43b3 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
43b5 : f003            >        beq skip1077
                       >        trap            ;failed not equal (non zero)
43b7 : 202561          >        jsr report_error
                       >
43ba :                 >skip1077
                       >
43ba : 28              >            plp         ;restore status
                       >
43bb : c042            >            cpy #$42
                       >            trap_ne         ;y changed
43bd : f003            >        beq skip1079
                       >        trap            ;failed not equal (non zero)
43bf : 202561          >        jsr report_error
                       >
43c2 :                 >skip1079
                       >
43c2 : e000            >            cpx #0
                       >            trap_ne         ;x changed
43c4 : f003            >        beq skip1081
                       >        trap            ;failed not equal (non zero)
43c6 : 202561          >        jsr report_error
                       >
43c9 :                 >skip1081
                       >
                        
                                nop_test $43,1
43c9 : a042            >            ldy #$42
43cb : a203            >            ldx #4-1
43cd : 43              >            db  $43          ;test nop length
                       >        if 1 = 1
43ce : ca              >            dex
43cf : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
43d0 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
43d1 : f003            >        beq skip1084
                       >        trap            ;failed not equal (non zero)
43d3 : 202561          >        jsr report_error
                       >
43d6 :                 >skip1084
                       >
                       >            set_a $ff-$43,0
                       >            load_flag 0
43d6 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
43d8 : 48              >            pha         ;use stack to load status
43d9 : a9bc            >            lda #$ff-$43     ;precharge accu
43db : 28              >            plp
                       >
43dc : 43              >            db  $43          ;test nop integrity - flags off
43dd : ea              >            nop
43de : ea              >            nop
                       >            tst_a $ff-$43,0
43df : 08              >            php         ;save flags
43e0 : c9bc            >            cmp #$ff-$43     ;test result
                       >            trap_ne
43e2 : f003            >        beq skip1089
                       >        trap            ;failed not equal (non zero)
43e4 : 202561          >        jsr report_error
                       >
43e7 :                 >skip1089
                       >
43e7 : 68              >            pla         ;load status
43e8 : 48              >            pha
                       >            cmp_flag 0
43e9 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
43eb : f003            >        beq skip1092
                       >        trap            ;failed not equal (non zero)
43ed : 202561          >        jsr report_error
                       >
43f0 :                 >skip1092
                       >
43f0 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$43,$ff
                       >            load_flag $ff
43f1 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
43f3 : 48              >            pha         ;use stack to load status
43f4 : a967            >            lda #$aa-$43     ;precharge accu
43f6 : 28              >            plp
                       >
43f7 : 43              >            db  $43          ;test nop integrity - flags on
43f8 : ea              >            nop
43f9 : ea              >            nop
                       >            tst_a $aa-$43,$ff
43fa : 08              >            php         ;save flags
43fb : c967            >            cmp #$aa-$43     ;test result
                       >            trap_ne
43fd : f003            >        beq skip1097
                       >        trap            ;failed not equal (non zero)
43ff : 202561          >        jsr report_error
                       >
4402 :                 >skip1097
                       >
4402 : 68              >            pla         ;load status
4403 : 48              >            pha
                       >            cmp_flag $ff
4404 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4406 : f003            >        beq skip1100
                       >        trap            ;failed not equal (non zero)
4408 : 202561          >        jsr report_error
                       >
440b :                 >skip1100
                       >
440b : 28              >            plp         ;restore status
                       >
440c : c042            >            cpy #$42
                       >            trap_ne         ;y changed
440e : f003            >        beq skip1102
                       >        trap            ;failed not equal (non zero)
4410 : 202561          >        jsr report_error
                       >
4413 :                 >skip1102
                       >
4413 : e000            >            cpx #0
                       >            trap_ne         ;x changed
4415 : f003            >        beq skip1104
                       >        trap            ;failed not equal (non zero)
4417 : 202561          >        jsr report_error
                       >
441a :                 >skip1104
                       >
                        
                                nop_test $53,1
441a : a042            >            ldy #$42
441c : a203            >            ldx #4-1
441e : 53              >            db  $53          ;test nop length
                       >        if 1 = 1
441f : ca              >            dex
4420 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
4421 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
4422 : f003            >        beq skip1107
                       >        trap            ;failed not equal (non zero)
4424 : 202561          >        jsr report_error
                       >
4427 :                 >skip1107
                       >
                       >            set_a $ff-$53,0
                       >            load_flag 0
4427 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4429 : 48              >            pha         ;use stack to load status
442a : a9ac            >            lda #$ff-$53     ;precharge accu
442c : 28              >            plp
                       >
442d : 53              >            db  $53          ;test nop integrity - flags off
442e : ea              >            nop
442f : ea              >            nop
                       >            tst_a $ff-$53,0
4430 : 08              >            php         ;save flags
4431 : c9ac            >            cmp #$ff-$53     ;test result
                       >            trap_ne
4433 : f003            >        beq skip1112
                       >        trap            ;failed not equal (non zero)
4435 : 202561          >        jsr report_error
                       >
4438 :                 >skip1112
                       >
4438 : 68              >            pla         ;load status
4439 : 48              >            pha
                       >            cmp_flag 0
443a : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
443c : f003            >        beq skip1115
                       >        trap            ;failed not equal (non zero)
443e : 202561          >        jsr report_error
                       >
4441 :                 >skip1115
                       >
4441 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$53,$ff
                       >            load_flag $ff
4442 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4444 : 48              >            pha         ;use stack to load status
4445 : a957            >            lda #$aa-$53     ;precharge accu
4447 : 28              >            plp
                       >
4448 : 53              >            db  $53          ;test nop integrity - flags on
4449 : ea              >            nop
444a : ea              >            nop
                       >            tst_a $aa-$53,$ff
444b : 08              >            php         ;save flags
444c : c957            >            cmp #$aa-$53     ;test result
                       >            trap_ne
444e : f003            >        beq skip1120
                       >        trap            ;failed not equal (non zero)
4450 : 202561          >        jsr report_error
                       >
4453 :                 >skip1120
                       >
4453 : 68              >            pla         ;load status
4454 : 48              >            pha
                       >            cmp_flag $ff
4455 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4457 : f003            >        beq skip1123
                       >        trap            ;failed not equal (non zero)
4459 : 202561          >        jsr report_error
                       >
445c :                 >skip1123
                       >
445c : 28              >            plp         ;restore status
                       >
445d : c042            >            cpy #$42
                       >            trap_ne         ;y changed
445f : f003            >        beq skip1125
                       >        trap            ;failed not equal (non zero)
4461 : 202561          >        jsr report_error
                       >
4464 :                 >skip1125
                       >
4464 : e000            >            cpx #0
                       >            trap_ne         ;x changed
4466 : f003            >        beq skip1127
                       >        trap            ;failed not equal (non zero)
4468 : 202561          >        jsr report_error
                       >
446b :                 >skip1127
                       >
                        
                                nop_test $63,1
446b : a042            >            ldy #$42
446d : a203            >            ldx #4-1
446f : 63              >            db  $63          ;test nop length
                       >        if 1 = 1
4470 : ca              >            dex
4471 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
4472 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
4473 : f003            >        beq skip1130
                       >        trap            ;failed not equal (non zero)
4475 : 202561          >        jsr report_error
                       >
4478 :                 >skip1130
                       >
                       >            set_a $ff-$63,0
                       >            load_flag 0
4478 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
447a : 48              >            pha         ;use stack to load status
447b : a99c            >            lda #$ff-$63     ;precharge accu
447d : 28              >            plp
                       >
447e : 63              >            db  $63          ;test nop integrity - flags off
447f : ea              >            nop
4480 : ea              >            nop
                       >            tst_a $ff-$63,0
4481 : 08              >            php         ;save flags
4482 : c99c            >            cmp #$ff-$63     ;test result
                       >            trap_ne
4484 : f003            >        beq skip1135
                       >        trap            ;failed not equal (non zero)
4486 : 202561          >        jsr report_error
                       >
4489 :                 >skip1135
                       >
4489 : 68              >            pla         ;load status
448a : 48              >            pha
                       >            cmp_flag 0
448b : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
448d : f003            >        beq skip1138
                       >        trap            ;failed not equal (non zero)
448f : 202561          >        jsr report_error
                       >
4492 :                 >skip1138
                       >
4492 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$63,$ff
                       >            load_flag $ff
4493 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4495 : 48              >            pha         ;use stack to load status
4496 : a947            >            lda #$aa-$63     ;precharge accu
4498 : 28              >            plp
                       >
4499 : 63              >            db  $63          ;test nop integrity - flags on
449a : ea              >            nop
449b : ea              >            nop
                       >            tst_a $aa-$63,$ff
449c : 08              >            php         ;save flags
449d : c947            >            cmp #$aa-$63     ;test result
                       >            trap_ne
449f : f003            >        beq skip1143
                       >        trap            ;failed not equal (non zero)
44a1 : 202561          >        jsr report_error
                       >
44a4 :                 >skip1143
                       >
44a4 : 68              >            pla         ;load status
44a5 : 48              >            pha
                       >            cmp_flag $ff
44a6 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
44a8 : f003            >        beq skip1146
                       >        trap            ;failed not equal (non zero)
44aa : 202561          >        jsr report_error
                       >
44ad :                 >skip1146
                       >
44ad : 28              >            plp         ;restore status
                       >
44ae : c042            >            cpy #$42
                       >            trap_ne         ;y changed
44b0 : f003            >        beq skip1148
                       >        trap            ;failed not equal (non zero)
44b2 : 202561          >        jsr report_error
                       >
44b5 :                 >skip1148
                       >
44b5 : e000            >            cpx #0
                       >            trap_ne         ;x changed
44b7 : f003            >        beq skip1150
                       >        trap            ;failed not equal (non zero)
44b9 : 202561          >        jsr report_error
                       >
44bc :                 >skip1150
                       >
                        
                                nop_test $73,1
44bc : a042            >            ldy #$42
44be : a203            >            ldx #4-1
44c0 : 73              >            db  $73          ;test nop length
                       >        if 1 = 1
44c1 : ca              >            dex
44c2 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
44c3 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
44c4 : f003            >        beq skip1153
                       >        trap            ;failed not equal (non zero)
44c6 : 202561          >        jsr report_error
                       >
44c9 :                 >skip1153
                       >
                       >            set_a $ff-$73,0
                       >            load_flag 0
44c9 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
44cb : 48              >            pha         ;use stack to load status
44cc : a98c            >            lda #$ff-$73     ;precharge accu
44ce : 28              >            plp
                       >
44cf : 73              >            db  $73          ;test nop integrity - flags off
44d0 : ea              >            nop
44d1 : ea              >            nop
                       >            tst_a $ff-$73,0
44d2 : 08              >            php         ;save flags
44d3 : c98c            >            cmp #$ff-$73     ;test result
                       >            trap_ne
44d5 : f003            >        beq skip1158
                       >        trap            ;failed not equal (non zero)
44d7 : 202561          >        jsr report_error
                       >
44da :                 >skip1158
                       >
44da : 68              >            pla         ;load status
44db : 48              >            pha
                       >            cmp_flag 0
44dc : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
44de : f003            >        beq skip1161
                       >        trap            ;failed not equal (non zero)
44e0 : 202561          >        jsr report_error
                       >
44e3 :                 >skip1161
                       >
44e3 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$73,$ff
                       >            load_flag $ff
44e4 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
44e6 : 48              >            pha         ;use stack to load status
44e7 : a937            >            lda #$aa-$73     ;precharge accu
44e9 : 28              >            plp
                       >
44ea : 73              >            db  $73          ;test nop integrity - flags on
44eb : ea              >            nop
44ec : ea              >            nop
                       >            tst_a $aa-$73,$ff
44ed : 08              >            php         ;save flags
44ee : c937            >            cmp #$aa-$73     ;test result
                       >            trap_ne
44f0 : f003            >        beq skip1166
                       >        trap            ;failed not equal (non zero)
44f2 : 202561          >        jsr report_error
                       >
44f5 :                 >skip1166
                       >
44f5 : 68              >            pla         ;load status
44f6 : 48              >            pha
                       >            cmp_flag $ff
44f7 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
44f9 : f003            >        beq skip1169
                       >        trap            ;failed not equal (non zero)
44fb : 202561          >        jsr report_error
                       >
44fe :                 >skip1169
                       >
44fe : 28              >            plp         ;restore status
                       >
44ff : c042            >            cpy #$42
                       >            trap_ne         ;y changed
4501 : f003            >        beq skip1171
                       >        trap            ;failed not equal (non zero)
4503 : 202561          >        jsr report_error
                       >
4506 :                 >skip1171
                       >
4506 : e000            >            cpx #0
                       >            trap_ne         ;x changed
4508 : f003            >        beq skip1173
                       >        trap            ;failed not equal (non zero)
450a : 202561          >        jsr report_error
                       >
450d :                 >skip1173
                       >
                        
                                nop_test $83,1
450d : a042            >            ldy #$42
450f : a203            >            ldx #4-1
4511 : 83              >            db  $83          ;test nop length
                       >        if 1 = 1
4512 : ca              >            dex
4513 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
4514 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
4515 : f003            >        beq skip1176
                       >        trap            ;failed not equal (non zero)
4517 : 202561          >        jsr report_error
                       >
451a :                 >skip1176
                       >
                       >            set_a $ff-$83,0
                       >            load_flag 0
451a : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
451c : 48              >            pha         ;use stack to load status
451d : a97c            >            lda #$ff-$83     ;precharge accu
451f : 28              >            plp
                       >
4520 : 83              >            db  $83          ;test nop integrity - flags off
4521 : ea              >            nop
4522 : ea              >            nop
                       >            tst_a $ff-$83,0
4523 : 08              >            php         ;save flags
4524 : c97c            >            cmp #$ff-$83     ;test result
                       >            trap_ne
4526 : f003            >        beq skip1181
                       >        trap            ;failed not equal (non zero)
4528 : 202561          >        jsr report_error
                       >
452b :                 >skip1181
                       >
452b : 68              >            pla         ;load status
452c : 48              >            pha
                       >            cmp_flag 0
452d : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
452f : f003            >        beq skip1184
                       >        trap            ;failed not equal (non zero)
4531 : 202561          >        jsr report_error
                       >
4534 :                 >skip1184
                       >
4534 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$83,$ff
                       >            load_flag $ff
4535 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4537 : 48              >            pha         ;use stack to load status
4538 : a927            >            lda #$aa-$83     ;precharge accu
453a : 28              >            plp
                       >
453b : 83              >            db  $83          ;test nop integrity - flags on
453c : ea              >            nop
453d : ea              >            nop
                       >            tst_a $aa-$83,$ff
453e : 08              >            php         ;save flags
453f : c927            >            cmp #$aa-$83     ;test result
                       >            trap_ne
4541 : f003            >        beq skip1189
                       >        trap            ;failed not equal (non zero)
4543 : 202561          >        jsr report_error
                       >
4546 :                 >skip1189
                       >
4546 : 68              >            pla         ;load status
4547 : 48              >            pha
                       >            cmp_flag $ff
4548 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
454a : f003            >        beq skip1192
                       >        trap            ;failed not equal (non zero)
454c : 202561          >        jsr report_error
                       >
454f :                 >skip1192
                       >
454f : 28              >            plp         ;restore status
                       >
4550 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
4552 : f003            >        beq skip1194
                       >        trap            ;failed not equal (non zero)
4554 : 202561          >        jsr report_error
                       >
4557 :                 >skip1194
                       >
4557 : e000            >            cpx #0
                       >            trap_ne         ;x changed
4559 : f003            >        beq skip1196
                       >        trap            ;failed not equal (non zero)
455b : 202561          >        jsr report_error
                       >
455e :                 >skip1196
                       >
                        
                                nop_test $93,1
455e : a042            >            ldy #$42
4560 : a203            >            ldx #4-1
4562 : 93              >            db  $93          ;test nop length
                       >        if 1 = 1
4563 : ca              >            dex
4564 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
4565 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
4566 : f003            >        beq skip1199
                       >        trap            ;failed not equal (non zero)
4568 : 202561          >        jsr report_error
                       >
456b :                 >skip1199
                       >
                       >            set_a $ff-$93,0
                       >            load_flag 0
456b : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
456d : 48              >            pha         ;use stack to load status
456e : a96c            >            lda #$ff-$93     ;precharge accu
4570 : 28              >            plp
                       >
4571 : 93              >            db  $93          ;test nop integrity - flags off
4572 : ea              >            nop
4573 : ea              >            nop
                       >            tst_a $ff-$93,0
4574 : 08              >            php         ;save flags
4575 : c96c            >            cmp #$ff-$93     ;test result
                       >            trap_ne
4577 : f003            >        beq skip1204
                       >        trap            ;failed not equal (non zero)
4579 : 202561          >        jsr report_error
                       >
457c :                 >skip1204
                       >
457c : 68              >            pla         ;load status
457d : 48              >            pha
                       >            cmp_flag 0
457e : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4580 : f003            >        beq skip1207
                       >        trap            ;failed not equal (non zero)
4582 : 202561          >        jsr report_error
                       >
4585 :                 >skip1207
                       >
4585 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$93,$ff
                       >            load_flag $ff
4586 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4588 : 48              >            pha         ;use stack to load status
4589 : a917            >            lda #$aa-$93     ;precharge accu
458b : 28              >            plp
                       >
458c : 93              >            db  $93          ;test nop integrity - flags on
458d : ea              >            nop
458e : ea              >            nop
                       >            tst_a $aa-$93,$ff
458f : 08              >            php         ;save flags
4590 : c917            >            cmp #$aa-$93     ;test result
                       >            trap_ne
4592 : f003            >        beq skip1212
                       >        trap            ;failed not equal (non zero)
4594 : 202561          >        jsr report_error
                       >
4597 :                 >skip1212
                       >
4597 : 68              >            pla         ;load status
4598 : 48              >            pha
                       >            cmp_flag $ff
4599 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
459b : f003            >        beq skip1215
                       >        trap            ;failed not equal (non zero)
459d : 202561          >        jsr report_error
                       >
45a0 :                 >skip1215
                       >
45a0 : 28              >            plp         ;restore status
                       >
45a1 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
45a3 : f003            >        beq skip1217
                       >        trap            ;failed not equal (non zero)
45a5 : 202561          >        jsr report_error
                       >
45a8 :                 >skip1217
                       >
45a8 : e000            >            cpx #0
                       >            trap_ne         ;x changed
45aa : f003            >        beq skip1219
                       >        trap            ;failed not equal (non zero)
45ac : 202561          >        jsr report_error
                       >
45af :                 >skip1219
                       >
                        
                                nop_test $a3,1
45af : a042            >            ldy #$42
45b1 : a203            >            ldx #4-1
45b3 : a3              >            db  $a3          ;test nop length
                       >        if 1 = 1
45b4 : ca              >            dex
45b5 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
45b6 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
45b7 : f003            >        beq skip1222
                       >        trap            ;failed not equal (non zero)
45b9 : 202561          >        jsr report_error
                       >
45bc :                 >skip1222
                       >
                       >            set_a $ff-$a3,0
                       >            load_flag 0
45bc : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
45be : 48              >            pha         ;use stack to load status
45bf : a95c            >            lda #$ff-$a3     ;precharge accu
45c1 : 28              >            plp
                       >
45c2 : a3              >            db  $a3          ;test nop integrity - flags off
45c3 : ea              >            nop
45c4 : ea              >            nop
                       >            tst_a $ff-$a3,0
45c5 : 08              >            php         ;save flags
45c6 : c95c            >            cmp #$ff-$a3     ;test result
                       >            trap_ne
45c8 : f003            >        beq skip1227
                       >        trap            ;failed not equal (non zero)
45ca : 202561          >        jsr report_error
                       >
45cd :                 >skip1227
                       >
45cd : 68              >            pla         ;load status
45ce : 48              >            pha
                       >            cmp_flag 0
45cf : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
45d1 : f003            >        beq skip1230
                       >        trap            ;failed not equal (non zero)
45d3 : 202561          >        jsr report_error
                       >
45d6 :                 >skip1230
                       >
45d6 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$a3,$ff
                       >            load_flag $ff
45d7 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
45d9 : 48              >            pha         ;use stack to load status
45da : a907            >            lda #$aa-$a3     ;precharge accu
45dc : 28              >            plp
                       >
45dd : a3              >            db  $a3          ;test nop integrity - flags on
45de : ea              >            nop
45df : ea              >            nop
                       >            tst_a $aa-$a3,$ff
45e0 : 08              >            php         ;save flags
45e1 : c907            >            cmp #$aa-$a3     ;test result
                       >            trap_ne
45e3 : f003            >        beq skip1235
                       >        trap            ;failed not equal (non zero)
45e5 : 202561          >        jsr report_error
                       >
45e8 :                 >skip1235
                       >
45e8 : 68              >            pla         ;load status
45e9 : 48              >            pha
                       >            cmp_flag $ff
45ea : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
45ec : f003            >        beq skip1238
                       >        trap            ;failed not equal (non zero)
45ee : 202561          >        jsr report_error
                       >
45f1 :                 >skip1238
                       >
45f1 : 28              >            plp         ;restore status
                       >
45f2 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
45f4 : f003            >        beq skip1240
                       >        trap            ;failed not equal (non zero)
45f6 : 202561          >        jsr report_error
                       >
45f9 :                 >skip1240
                       >
45f9 : e000            >            cpx #0
                       >            trap_ne         ;x changed
45fb : f003            >        beq skip1242
                       >        trap            ;failed not equal (non zero)
45fd : 202561          >        jsr report_error
                       >
4600 :                 >skip1242
                       >
                        
                                nop_test $b3,1
4600 : a042            >            ldy #$42
4602 : a203            >            ldx #4-1
4604 : b3              >            db  $b3          ;test nop length
                       >        if 1 = 1
4605 : ca              >            dex
4606 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
4607 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
4608 : f003            >        beq skip1245
                       >        trap            ;failed not equal (non zero)
460a : 202561          >        jsr report_error
                       >
460d :                 >skip1245
                       >
                       >            set_a $ff-$b3,0
                       >            load_flag 0
460d : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
460f : 48              >            pha         ;use stack to load status
4610 : a94c            >            lda #$ff-$b3     ;precharge accu
4612 : 28              >            plp
                       >
4613 : b3              >            db  $b3          ;test nop integrity - flags off
4614 : ea              >            nop
4615 : ea              >            nop
                       >            tst_a $ff-$b3,0
4616 : 08              >            php         ;save flags
4617 : c94c            >            cmp #$ff-$b3     ;test result
                       >            trap_ne
4619 : f003            >        beq skip1250
                       >        trap            ;failed not equal (non zero)
461b : 202561          >        jsr report_error
                       >
461e :                 >skip1250
                       >
461e : 68              >            pla         ;load status
461f : 48              >            pha
                       >            cmp_flag 0
4620 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4622 : f003            >        beq skip1253
                       >        trap            ;failed not equal (non zero)
4624 : 202561          >        jsr report_error
                       >
4627 :                 >skip1253
                       >
4627 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$b3,$ff
                       >            load_flag $ff
4628 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
462a : 48              >            pha         ;use stack to load status
462b : a9f7            >            lda #$aa-$b3     ;precharge accu
462d : 28              >            plp
                       >
462e : b3              >            db  $b3          ;test nop integrity - flags on
462f : ea              >            nop
4630 : ea              >            nop
                       >            tst_a $aa-$b3,$ff
4631 : 08              >            php         ;save flags
4632 : c9f7            >            cmp #$aa-$b3     ;test result
                       >            trap_ne
4634 : f003            >        beq skip1258
                       >        trap            ;failed not equal (non zero)
4636 : 202561          >        jsr report_error
                       >
4639 :                 >skip1258
                       >
4639 : 68              >            pla         ;load status
463a : 48              >            pha
                       >            cmp_flag $ff
463b : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
463d : f003            >        beq skip1261
                       >        trap            ;failed not equal (non zero)
463f : 202561          >        jsr report_error
                       >
4642 :                 >skip1261
                       >
4642 : 28              >            plp         ;restore status
                       >
4643 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
4645 : f003            >        beq skip1263
                       >        trap            ;failed not equal (non zero)
4647 : 202561          >        jsr report_error
                       >
464a :                 >skip1263
                       >
464a : e000            >            cpx #0
                       >            trap_ne         ;x changed
464c : f003            >        beq skip1265
                       >        trap            ;failed not equal (non zero)
464e : 202561          >        jsr report_error
                       >
4651 :                 >skip1265
                       >
                        
                                nop_test $c3,1
4651 : a042            >            ldy #$42
4653 : a203            >            ldx #4-1
4655 : c3              >            db  $c3          ;test nop length
                       >        if 1 = 1
4656 : ca              >            dex
4657 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
4658 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
4659 : f003            >        beq skip1268
                       >        trap            ;failed not equal (non zero)
465b : 202561          >        jsr report_error
                       >
465e :                 >skip1268
                       >
                       >            set_a $ff-$c3,0
                       >            load_flag 0
465e : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4660 : 48              >            pha         ;use stack to load status
4661 : a93c            >            lda #$ff-$c3     ;precharge accu
4663 : 28              >            plp
                       >
4664 : c3              >            db  $c3          ;test nop integrity - flags off
4665 : ea              >            nop
4666 : ea              >            nop
                       >            tst_a $ff-$c3,0
4667 : 08              >            php         ;save flags
4668 : c93c            >            cmp #$ff-$c3     ;test result
                       >            trap_ne
466a : f003            >        beq skip1273
                       >        trap            ;failed not equal (non zero)
466c : 202561          >        jsr report_error
                       >
466f :                 >skip1273
                       >
466f : 68              >            pla         ;load status
4670 : 48              >            pha
                       >            cmp_flag 0
4671 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4673 : f003            >        beq skip1276
                       >        trap            ;failed not equal (non zero)
4675 : 202561          >        jsr report_error
                       >
4678 :                 >skip1276
                       >
4678 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$c3,$ff
                       >            load_flag $ff
4679 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
467b : 48              >            pha         ;use stack to load status
467c : a9e7            >            lda #$aa-$c3     ;precharge accu
467e : 28              >            plp
                       >
467f : c3              >            db  $c3          ;test nop integrity - flags on
4680 : ea              >            nop
4681 : ea              >            nop
                       >            tst_a $aa-$c3,$ff
4682 : 08              >            php         ;save flags
4683 : c9e7            >            cmp #$aa-$c3     ;test result
                       >            trap_ne
4685 : f003            >        beq skip1281
                       >        trap            ;failed not equal (non zero)
4687 : 202561          >        jsr report_error
                       >
468a :                 >skip1281
                       >
468a : 68              >            pla         ;load status
468b : 48              >            pha
                       >            cmp_flag $ff
468c : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
468e : f003            >        beq skip1284
                       >        trap            ;failed not equal (non zero)
4690 : 202561          >        jsr report_error
                       >
4693 :                 >skip1284
                       >
4693 : 28              >            plp         ;restore status
                       >
4694 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
4696 : f003            >        beq skip1286
                       >        trap            ;failed not equal (non zero)
4698 : 202561          >        jsr report_error
                       >
469b :                 >skip1286
                       >
469b : e000            >            cpx #0
                       >            trap_ne         ;x changed
469d : f003            >        beq skip1288
                       >        trap            ;failed not equal (non zero)
469f : 202561          >        jsr report_error
                       >
46a2 :                 >skip1288
                       >
                        
                                nop_test $d3,1
46a2 : a042            >            ldy #$42
46a4 : a203            >            ldx #4-1
46a6 : d3              >            db  $d3          ;test nop length
                       >        if 1 = 1
46a7 : ca              >            dex
46a8 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
46a9 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
46aa : f003            >        beq skip1291
                       >        trap            ;failed not equal (non zero)
46ac : 202561          >        jsr report_error
                       >
46af :                 >skip1291
                       >
                       >            set_a $ff-$d3,0
                       >            load_flag 0
46af : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
46b1 : 48              >            pha         ;use stack to load status
46b2 : a92c            >            lda #$ff-$d3     ;precharge accu
46b4 : 28              >            plp
                       >
46b5 : d3              >            db  $d3          ;test nop integrity - flags off
46b6 : ea              >            nop
46b7 : ea              >            nop
                       >            tst_a $ff-$d3,0
46b8 : 08              >            php         ;save flags
46b9 : c92c            >            cmp #$ff-$d3     ;test result
                       >            trap_ne
46bb : f003            >        beq skip1296
                       >        trap            ;failed not equal (non zero)
46bd : 202561          >        jsr report_error
                       >
46c0 :                 >skip1296
                       >
46c0 : 68              >            pla         ;load status
46c1 : 48              >            pha
                       >            cmp_flag 0
46c2 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
46c4 : f003            >        beq skip1299
                       >        trap            ;failed not equal (non zero)
46c6 : 202561          >        jsr report_error
                       >
46c9 :                 >skip1299
                       >
46c9 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$d3,$ff
                       >            load_flag $ff
46ca : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
46cc : 48              >            pha         ;use stack to load status
46cd : a9d7            >            lda #$aa-$d3     ;precharge accu
46cf : 28              >            plp
                       >
46d0 : d3              >            db  $d3          ;test nop integrity - flags on
46d1 : ea              >            nop
46d2 : ea              >            nop
                       >            tst_a $aa-$d3,$ff
46d3 : 08              >            php         ;save flags
46d4 : c9d7            >            cmp #$aa-$d3     ;test result
                       >            trap_ne
46d6 : f003            >        beq skip1304
                       >        trap            ;failed not equal (non zero)
46d8 : 202561          >        jsr report_error
                       >
46db :                 >skip1304
                       >
46db : 68              >            pla         ;load status
46dc : 48              >            pha
                       >            cmp_flag $ff
46dd : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
46df : f003            >        beq skip1307
                       >        trap            ;failed not equal (non zero)
46e1 : 202561          >        jsr report_error
                       >
46e4 :                 >skip1307
                       >
46e4 : 28              >            plp         ;restore status
                       >
46e5 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
46e7 : f003            >        beq skip1309
                       >        trap            ;failed not equal (non zero)
46e9 : 202561          >        jsr report_error
                       >
46ec :                 >skip1309
                       >
46ec : e000            >            cpx #0
                       >            trap_ne         ;x changed
46ee : f003            >        beq skip1311
                       >        trap            ;failed not equal (non zero)
46f0 : 202561          >        jsr report_error
                       >
46f3 :                 >skip1311
                       >
                        
                                nop_test $e3,1
46f3 : a042            >            ldy #$42
46f5 : a203            >            ldx #4-1
46f7 : e3              >            db  $e3          ;test nop length
                       >        if 1 = 1
46f8 : ca              >            dex
46f9 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
46fa : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
46fb : f003            >        beq skip1314
                       >        trap            ;failed not equal (non zero)
46fd : 202561          >        jsr report_error
                       >
4700 :                 >skip1314
                       >
                       >            set_a $ff-$e3,0
                       >            load_flag 0
4700 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4702 : 48              >            pha         ;use stack to load status
4703 : a91c            >            lda #$ff-$e3     ;precharge accu
4705 : 28              >            plp
                       >
4706 : e3              >            db  $e3          ;test nop integrity - flags off
4707 : ea              >            nop
4708 : ea              >            nop
                       >            tst_a $ff-$e3,0
4709 : 08              >            php         ;save flags
470a : c91c            >            cmp #$ff-$e3     ;test result
                       >            trap_ne
470c : f003            >        beq skip1319
                       >        trap            ;failed not equal (non zero)
470e : 202561          >        jsr report_error
                       >
4711 :                 >skip1319
                       >
4711 : 68              >            pla         ;load status
4712 : 48              >            pha
                       >            cmp_flag 0
4713 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4715 : f003            >        beq skip1322
                       >        trap            ;failed not equal (non zero)
4717 : 202561          >        jsr report_error
                       >
471a :                 >skip1322
                       >
471a : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$e3,$ff
                       >            load_flag $ff
471b : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
471d : 48              >            pha         ;use stack to load status
471e : a9c7            >            lda #$aa-$e3     ;precharge accu
4720 : 28              >            plp
                       >
4721 : e3              >            db  $e3          ;test nop integrity - flags on
4722 : ea              >            nop
4723 : ea              >            nop
                       >            tst_a $aa-$e3,$ff
4724 : 08              >            php         ;save flags
4725 : c9c7            >            cmp #$aa-$e3     ;test result
                       >            trap_ne
4727 : f003            >        beq skip1327
                       >        trap            ;failed not equal (non zero)
4729 : 202561          >        jsr report_error
                       >
472c :                 >skip1327
                       >
472c : 68              >            pla         ;load status
472d : 48              >            pha
                       >            cmp_flag $ff
472e : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4730 : f003            >        beq skip1330
                       >        trap            ;failed not equal (non zero)
4732 : 202561          >        jsr report_error
                       >
4735 :                 >skip1330
                       >
4735 : 28              >            plp         ;restore status
                       >
4736 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
4738 : f003            >        beq skip1332
                       >        trap            ;failed not equal (non zero)
473a : 202561          >        jsr report_error
                       >
473d :                 >skip1332
                       >
473d : e000            >            cpx #0
                       >            trap_ne         ;x changed
473f : f003            >        beq skip1334
                       >        trap            ;failed not equal (non zero)
4741 : 202561          >        jsr report_error
                       >
4744 :                 >skip1334
                       >
                        
                                nop_test $f3,1
4744 : a042            >            ldy #$42
4746 : a203            >            ldx #4-1
4748 : f3              >            db  $f3          ;test nop length
                       >        if 1 = 1
4749 : ca              >            dex
474a : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
474b : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
474c : f003            >        beq skip1337
                       >        trap            ;failed not equal (non zero)
474e : 202561          >        jsr report_error
                       >
4751 :                 >skip1337
                       >
                       >            set_a $ff-$f3,0
                       >            load_flag 0
4751 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4753 : 48              >            pha         ;use stack to load status
4754 : a90c            >            lda #$ff-$f3     ;precharge accu
4756 : 28              >            plp
                       >
4757 : f3              >            db  $f3          ;test nop integrity - flags off
4758 : ea              >            nop
4759 : ea              >            nop
                       >            tst_a $ff-$f3,0
475a : 08              >            php         ;save flags
475b : c90c            >            cmp #$ff-$f3     ;test result
                       >            trap_ne
475d : f003            >        beq skip1342
                       >        trap            ;failed not equal (non zero)
475f : 202561          >        jsr report_error
                       >
4762 :                 >skip1342
                       >
4762 : 68              >            pla         ;load status
4763 : 48              >            pha
                       >            cmp_flag 0
4764 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4766 : f003            >        beq skip1345
                       >        trap            ;failed not equal (non zero)
4768 : 202561          >        jsr report_error
                       >
476b :                 >skip1345
                       >
476b : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$f3,$ff
                       >            load_flag $ff
476c : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
476e : 48              >            pha         ;use stack to load status
476f : a9b7            >            lda #$aa-$f3     ;precharge accu
4771 : 28              >            plp
                       >
4772 : f3              >            db  $f3          ;test nop integrity - flags on
4773 : ea              >            nop
4774 : ea              >            nop
                       >            tst_a $aa-$f3,$ff
4775 : 08              >            php         ;save flags
4776 : c9b7            >            cmp #$aa-$f3     ;test result
                       >            trap_ne
4778 : f003            >        beq skip1350
                       >        trap            ;failed not equal (non zero)
477a : 202561          >        jsr report_error
                       >
477d :                 >skip1350
                       >
477d : 68              >            pla         ;load status
477e : 48              >            pha
                       >            cmp_flag $ff
477f : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4781 : f003            >        beq skip1353
                       >        trap            ;failed not equal (non zero)
4783 : 202561          >        jsr report_error
                       >
4786 :                 >skip1353
                       >
4786 : 28              >            plp         ;restore status
                       >
4787 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
4789 : f003            >        beq skip1355
                       >        trap            ;failed not equal (non zero)
478b : 202561          >        jsr report_error
                       >
478e :                 >skip1355
                       >
478e : e000            >            cpx #0
                       >            trap_ne         ;x changed
4790 : f003            >        beq skip1357
                       >        trap            ;failed not equal (non zero)
4792 : 202561          >        jsr report_error
                       >
4795 :                 >skip1357
                       >
                        
                                nop_test $0b,1
4795 : a042            >            ldy #$42
4797 : a203            >            ldx #4-1
4799 : 0b              >            db  $0b          ;test nop length
                       >        if 1 = 1
479a : ca              >            dex
479b : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
479c : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
479d : f003            >        beq skip1360
                       >        trap            ;failed not equal (non zero)
479f : 202561          >        jsr report_error
                       >
47a2 :                 >skip1360
                       >
                       >            set_a $ff-$0b,0
                       >            load_flag 0
47a2 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
47a4 : 48              >            pha         ;use stack to load status
47a5 : a9f4            >            lda #$ff-$0b     ;precharge accu
47a7 : 28              >            plp
                       >
47a8 : 0b              >            db  $0b          ;test nop integrity - flags off
47a9 : ea              >            nop
47aa : ea              >            nop
                       >            tst_a $ff-$0b,0
47ab : 08              >            php         ;save flags
47ac : c9f4            >            cmp #$ff-$0b     ;test result
                       >            trap_ne
47ae : f003            >        beq skip1365
                       >        trap            ;failed not equal (non zero)
47b0 : 202561          >        jsr report_error
                       >
47b3 :                 >skip1365
                       >
47b3 : 68              >            pla         ;load status
47b4 : 48              >            pha
                       >            cmp_flag 0
47b5 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
47b7 : f003            >        beq skip1368
                       >        trap            ;failed not equal (non zero)
47b9 : 202561          >        jsr report_error
                       >
47bc :                 >skip1368
                       >
47bc : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$0b,$ff
                       >            load_flag $ff
47bd : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
47bf : 48              >            pha         ;use stack to load status
47c0 : a99f            >            lda #$aa-$0b     ;precharge accu
47c2 : 28              >            plp
                       >
47c3 : 0b              >            db  $0b          ;test nop integrity - flags on
47c4 : ea              >            nop
47c5 : ea              >            nop
                       >            tst_a $aa-$0b,$ff
47c6 : 08              >            php         ;save flags
47c7 : c99f            >            cmp #$aa-$0b     ;test result
                       >            trap_ne
47c9 : f003            >        beq skip1373
                       >        trap            ;failed not equal (non zero)
47cb : 202561          >        jsr report_error
                       >
47ce :                 >skip1373
                       >
47ce : 68              >            pla         ;load status
47cf : 48              >            pha
                       >            cmp_flag $ff
47d0 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
47d2 : f003            >        beq skip1376
                       >        trap            ;failed not equal (non zero)
47d4 : 202561          >        jsr report_error
                       >
47d7 :                 >skip1376
                       >
47d7 : 28              >            plp         ;restore status
                       >
47d8 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
47da : f003            >        beq skip1378
                       >        trap            ;failed not equal (non zero)
47dc : 202561          >        jsr report_error
                       >
47df :                 >skip1378
                       >
47df : e000            >            cpx #0
                       >            trap_ne         ;x changed
47e1 : f003            >        beq skip1380
                       >        trap            ;failed not equal (non zero)
47e3 : 202561          >        jsr report_error
                       >
47e6 :                 >skip1380
                       >
                        
                                nop_test $1b,1
47e6 : a042            >            ldy #$42
47e8 : a203            >            ldx #4-1
47ea : 1b              >            db  $1b          ;test nop length
                       >        if 1 = 1
47eb : ca              >            dex
47ec : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
47ed : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
47ee : f003            >        beq skip1383
                       >        trap            ;failed not equal (non zero)
47f0 : 202561          >        jsr report_error
                       >
47f3 :                 >skip1383
                       >
                       >            set_a $ff-$1b,0
                       >            load_flag 0
47f3 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
47f5 : 48              >            pha         ;use stack to load status
47f6 : a9e4            >            lda #$ff-$1b     ;precharge accu
47f8 : 28              >            plp
                       >
47f9 : 1b              >            db  $1b          ;test nop integrity - flags off
47fa : ea              >            nop
47fb : ea              >            nop
                       >            tst_a $ff-$1b,0
47fc : 08              >            php         ;save flags
47fd : c9e4            >            cmp #$ff-$1b     ;test result
                       >            trap_ne
47ff : f003            >        beq skip1388
                       >        trap            ;failed not equal (non zero)
4801 : 202561          >        jsr report_error
                       >
4804 :                 >skip1388
                       >
4804 : 68              >            pla         ;load status
4805 : 48              >            pha
                       >            cmp_flag 0
4806 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4808 : f003            >        beq skip1391
                       >        trap            ;failed not equal (non zero)
480a : 202561          >        jsr report_error
                       >
480d :                 >skip1391
                       >
480d : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$1b,$ff
                       >            load_flag $ff
480e : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4810 : 48              >            pha         ;use stack to load status
4811 : a98f            >            lda #$aa-$1b     ;precharge accu
4813 : 28              >            plp
                       >
4814 : 1b              >            db  $1b          ;test nop integrity - flags on
4815 : ea              >            nop
4816 : ea              >            nop
                       >            tst_a $aa-$1b,$ff
4817 : 08              >            php         ;save flags
4818 : c98f            >            cmp #$aa-$1b     ;test result
                       >            trap_ne
481a : f003            >        beq skip1396
                       >        trap            ;failed not equal (non zero)
481c : 202561          >        jsr report_error
                       >
481f :                 >skip1396
                       >
481f : 68              >            pla         ;load status
4820 : 48              >            pha
                       >            cmp_flag $ff
4821 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4823 : f003            >        beq skip1399
                       >        trap            ;failed not equal (non zero)
4825 : 202561          >        jsr report_error
                       >
4828 :                 >skip1399
                       >
4828 : 28              >            plp         ;restore status
                       >
4829 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
482b : f003            >        beq skip1401
                       >        trap            ;failed not equal (non zero)
482d : 202561          >        jsr report_error
                       >
4830 :                 >skip1401
                       >
4830 : e000            >            cpx #0
                       >            trap_ne         ;x changed
4832 : f003            >        beq skip1403
                       >        trap            ;failed not equal (non zero)
4834 : 202561          >        jsr report_error
                       >
4837 :                 >skip1403
                       >
                        
                                nop_test $2b,1
4837 : a042            >            ldy #$42
4839 : a203            >            ldx #4-1
483b : 2b              >            db  $2b          ;test nop length
                       >        if 1 = 1
483c : ca              >            dex
483d : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
483e : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
483f : f003            >        beq skip1406
                       >        trap            ;failed not equal (non zero)
4841 : 202561          >        jsr report_error
                       >
4844 :                 >skip1406
                       >
                       >            set_a $ff-$2b,0
                       >            load_flag 0
4844 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4846 : 48              >            pha         ;use stack to load status
4847 : a9d4            >            lda #$ff-$2b     ;precharge accu
4849 : 28              >            plp
                       >
484a : 2b              >            db  $2b          ;test nop integrity - flags off
484b : ea              >            nop
484c : ea              >            nop
                       >            tst_a $ff-$2b,0
484d : 08              >            php         ;save flags
484e : c9d4            >            cmp #$ff-$2b     ;test result
                       >            trap_ne
4850 : f003            >        beq skip1411
                       >        trap            ;failed not equal (non zero)
4852 : 202561          >        jsr report_error
                       >
4855 :                 >skip1411
                       >
4855 : 68              >            pla         ;load status
4856 : 48              >            pha
                       >            cmp_flag 0
4857 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4859 : f003            >        beq skip1414
                       >        trap            ;failed not equal (non zero)
485b : 202561          >        jsr report_error
                       >
485e :                 >skip1414
                       >
485e : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$2b,$ff
                       >            load_flag $ff
485f : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4861 : 48              >            pha         ;use stack to load status
4862 : a97f            >            lda #$aa-$2b     ;precharge accu
4864 : 28              >            plp
                       >
4865 : 2b              >            db  $2b          ;test nop integrity - flags on
4866 : ea              >            nop
4867 : ea              >            nop
                       >            tst_a $aa-$2b,$ff
4868 : 08              >            php         ;save flags
4869 : c97f            >            cmp #$aa-$2b     ;test result
                       >            trap_ne
486b : f003            >        beq skip1419
                       >        trap            ;failed not equal (non zero)
486d : 202561          >        jsr report_error
                       >
4870 :                 >skip1419
                       >
4870 : 68              >            pla         ;load status
4871 : 48              >            pha
                       >            cmp_flag $ff
4872 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4874 : f003            >        beq skip1422
                       >        trap            ;failed not equal (non zero)
4876 : 202561          >        jsr report_error
                       >
4879 :                 >skip1422
                       >
4879 : 28              >            plp         ;restore status
                       >
487a : c042            >            cpy #$42
                       >            trap_ne         ;y changed
487c : f003            >        beq skip1424
                       >        trap            ;failed not equal (non zero)
487e : 202561          >        jsr report_error
                       >
4881 :                 >skip1424
                       >
4881 : e000            >            cpx #0
                       >            trap_ne         ;x changed
4883 : f003            >        beq skip1426
                       >        trap            ;failed not equal (non zero)
4885 : 202561          >        jsr report_error
                       >
4888 :                 >skip1426
                       >
                        
                                nop_test $3b,1
4888 : a042            >            ldy #$42
488a : a203            >            ldx #4-1
488c : 3b              >            db  $3b          ;test nop length
                       >        if 1 = 1
488d : ca              >            dex
488e : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
488f : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
4890 : f003            >        beq skip1429
                       >        trap            ;failed not equal (non zero)
4892 : 202561          >        jsr report_error
                       >
4895 :                 >skip1429
                       >
                       >            set_a $ff-$3b,0
                       >            load_flag 0
4895 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4897 : 48              >            pha         ;use stack to load status
4898 : a9c4            >            lda #$ff-$3b     ;precharge accu
489a : 28              >            plp
                       >
489b : 3b              >            db  $3b          ;test nop integrity - flags off
489c : ea              >            nop
489d : ea              >            nop
                       >            tst_a $ff-$3b,0
489e : 08              >            php         ;save flags
489f : c9c4            >            cmp #$ff-$3b     ;test result
                       >            trap_ne
48a1 : f003            >        beq skip1434
                       >        trap            ;failed not equal (non zero)
48a3 : 202561          >        jsr report_error
                       >
48a6 :                 >skip1434
                       >
48a6 : 68              >            pla         ;load status
48a7 : 48              >            pha
                       >            cmp_flag 0
48a8 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
48aa : f003            >        beq skip1437
                       >        trap            ;failed not equal (non zero)
48ac : 202561          >        jsr report_error
                       >
48af :                 >skip1437
                       >
48af : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$3b,$ff
                       >            load_flag $ff
48b0 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
48b2 : 48              >            pha         ;use stack to load status
48b3 : a96f            >            lda #$aa-$3b     ;precharge accu
48b5 : 28              >            plp
                       >
48b6 : 3b              >            db  $3b          ;test nop integrity - flags on
48b7 : ea              >            nop
48b8 : ea              >            nop
                       >            tst_a $aa-$3b,$ff
48b9 : 08              >            php         ;save flags
48ba : c96f            >            cmp #$aa-$3b     ;test result
                       >            trap_ne
48bc : f003            >        beq skip1442
                       >        trap            ;failed not equal (non zero)
48be : 202561          >        jsr report_error
                       >
48c1 :                 >skip1442
                       >
48c1 : 68              >            pla         ;load status
48c2 : 48              >            pha
                       >            cmp_flag $ff
48c3 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
48c5 : f003            >        beq skip1445
                       >        trap            ;failed not equal (non zero)
48c7 : 202561          >        jsr report_error
                       >
48ca :                 >skip1445
                       >
48ca : 28              >            plp         ;restore status
                       >
48cb : c042            >            cpy #$42
                       >            trap_ne         ;y changed
48cd : f003            >        beq skip1447
                       >        trap            ;failed not equal (non zero)
48cf : 202561          >        jsr report_error
                       >
48d2 :                 >skip1447
                       >
48d2 : e000            >            cpx #0
                       >            trap_ne         ;x changed
48d4 : f003            >        beq skip1449
                       >        trap            ;failed not equal (non zero)
48d6 : 202561          >        jsr report_error
                       >
48d9 :                 >skip1449
                       >
                        
                                nop_test $4b,1
48d9 : a042            >            ldy #$42
48db : a203            >            ldx #4-1
48dd : 4b              >            db  $4b          ;test nop length
                       >        if 1 = 1
48de : ca              >            dex
48df : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
48e0 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
48e1 : f003            >        beq skip1452
                       >        trap            ;failed not equal (non zero)
48e3 : 202561          >        jsr report_error
                       >
48e6 :                 >skip1452
                       >
                       >            set_a $ff-$4b,0
                       >            load_flag 0
48e6 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
48e8 : 48              >            pha         ;use stack to load status
48e9 : a9b4            >            lda #$ff-$4b     ;precharge accu
48eb : 28              >            plp
                       >
48ec : 4b              >            db  $4b          ;test nop integrity - flags off
48ed : ea              >            nop
48ee : ea              >            nop
                       >            tst_a $ff-$4b,0
48ef : 08              >            php         ;save flags
48f0 : c9b4            >            cmp #$ff-$4b     ;test result
                       >            trap_ne
48f2 : f003            >        beq skip1457
                       >        trap            ;failed not equal (non zero)
48f4 : 202561          >        jsr report_error
                       >
48f7 :                 >skip1457
                       >
48f7 : 68              >            pla         ;load status
48f8 : 48              >            pha
                       >            cmp_flag 0
48f9 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
48fb : f003            >        beq skip1460
                       >        trap            ;failed not equal (non zero)
48fd : 202561          >        jsr report_error
                       >
4900 :                 >skip1460
                       >
4900 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$4b,$ff
                       >            load_flag $ff
4901 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4903 : 48              >            pha         ;use stack to load status
4904 : a95f            >            lda #$aa-$4b     ;precharge accu
4906 : 28              >            plp
                       >
4907 : 4b              >            db  $4b          ;test nop integrity - flags on
4908 : ea              >            nop
4909 : ea              >            nop
                       >            tst_a $aa-$4b,$ff
490a : 08              >            php         ;save flags
490b : c95f            >            cmp #$aa-$4b     ;test result
                       >            trap_ne
490d : f003            >        beq skip1465
                       >        trap            ;failed not equal (non zero)
490f : 202561          >        jsr report_error
                       >
4912 :                 >skip1465
                       >
4912 : 68              >            pla         ;load status
4913 : 48              >            pha
                       >            cmp_flag $ff
4914 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4916 : f003            >        beq skip1468
                       >        trap            ;failed not equal (non zero)
4918 : 202561          >        jsr report_error
                       >
491b :                 >skip1468
                       >
491b : 28              >            plp         ;restore status
                       >
491c : c042            >            cpy #$42
                       >            trap_ne         ;y changed
491e : f003            >        beq skip1470
                       >        trap            ;failed not equal (non zero)
4920 : 202561          >        jsr report_error
                       >
4923 :                 >skip1470
                       >
4923 : e000            >            cpx #0
                       >            trap_ne         ;x changed
4925 : f003            >        beq skip1472
                       >        trap            ;failed not equal (non zero)
4927 : 202561          >        jsr report_error
                       >
492a :                 >skip1472
                       >
                        
                                nop_test $5b,1
492a : a042            >            ldy #$42
492c : a203            >            ldx #4-1
492e : 5b              >            db  $5b          ;test nop length
                       >        if 1 = 1
492f : ca              >            dex
4930 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
4931 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
4932 : f003            >        beq skip1475
                       >        trap            ;failed not equal (non zero)
4934 : 202561          >        jsr report_error
                       >
4937 :                 >skip1475
                       >
                       >            set_a $ff-$5b,0
                       >            load_flag 0
4937 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4939 : 48              >            pha         ;use stack to load status
493a : a9a4            >            lda #$ff-$5b     ;precharge accu
493c : 28              >            plp
                       >
493d : 5b              >            db  $5b          ;test nop integrity - flags off
493e : ea              >            nop
493f : ea              >            nop
                       >            tst_a $ff-$5b,0
4940 : 08              >            php         ;save flags
4941 : c9a4            >            cmp #$ff-$5b     ;test result
                       >            trap_ne
4943 : f003            >        beq skip1480
                       >        trap            ;failed not equal (non zero)
4945 : 202561          >        jsr report_error
                       >
4948 :                 >skip1480
                       >
4948 : 68              >            pla         ;load status
4949 : 48              >            pha
                       >            cmp_flag 0
494a : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
494c : f003            >        beq skip1483
                       >        trap            ;failed not equal (non zero)
494e : 202561          >        jsr report_error
                       >
4951 :                 >skip1483
                       >
4951 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$5b,$ff
                       >            load_flag $ff
4952 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4954 : 48              >            pha         ;use stack to load status
4955 : a94f            >            lda #$aa-$5b     ;precharge accu
4957 : 28              >            plp
                       >
4958 : 5b              >            db  $5b          ;test nop integrity - flags on
4959 : ea              >            nop
495a : ea              >            nop
                       >            tst_a $aa-$5b,$ff
495b : 08              >            php         ;save flags
495c : c94f            >            cmp #$aa-$5b     ;test result
                       >            trap_ne
495e : f003            >        beq skip1488
                       >        trap            ;failed not equal (non zero)
4960 : 202561          >        jsr report_error
                       >
4963 :                 >skip1488
                       >
4963 : 68              >            pla         ;load status
4964 : 48              >            pha
                       >            cmp_flag $ff
4965 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4967 : f003            >        beq skip1491
                       >        trap            ;failed not equal (non zero)
4969 : 202561          >        jsr report_error
                       >
496c :                 >skip1491
                       >
496c : 28              >            plp         ;restore status
                       >
496d : c042            >            cpy #$42
                       >            trap_ne         ;y changed
496f : f003            >        beq skip1493
                       >        trap            ;failed not equal (non zero)
4971 : 202561          >        jsr report_error
                       >
4974 :                 >skip1493
                       >
4974 : e000            >            cpx #0
                       >            trap_ne         ;x changed
4976 : f003            >        beq skip1495
                       >        trap            ;failed not equal (non zero)
4978 : 202561          >        jsr report_error
                       >
497b :                 >skip1495
                       >
                        
                                nop_test $6b,1
497b : a042            >            ldy #$42
497d : a203            >            ldx #4-1
497f : 6b              >            db  $6b          ;test nop length
                       >        if 1 = 1
4980 : ca              >            dex
4981 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
4982 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
4983 : f003            >        beq skip1498
                       >        trap            ;failed not equal (non zero)
4985 : 202561          >        jsr report_error
                       >
4988 :                 >skip1498
                       >
                       >            set_a $ff-$6b,0
                       >            load_flag 0
4988 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
498a : 48              >            pha         ;use stack to load status
498b : a994            >            lda #$ff-$6b     ;precharge accu
498d : 28              >            plp
                       >
498e : 6b              >            db  $6b          ;test nop integrity - flags off
498f : ea              >            nop
4990 : ea              >            nop
                       >            tst_a $ff-$6b,0
4991 : 08              >            php         ;save flags
4992 : c994            >            cmp #$ff-$6b     ;test result
                       >            trap_ne
4994 : f003            >        beq skip1503
                       >        trap            ;failed not equal (non zero)
4996 : 202561          >        jsr report_error
                       >
4999 :                 >skip1503
                       >
4999 : 68              >            pla         ;load status
499a : 48              >            pha
                       >            cmp_flag 0
499b : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
499d : f003            >        beq skip1506
                       >        trap            ;failed not equal (non zero)
499f : 202561          >        jsr report_error
                       >
49a2 :                 >skip1506
                       >
49a2 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$6b,$ff
                       >            load_flag $ff
49a3 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
49a5 : 48              >            pha         ;use stack to load status
49a6 : a93f            >            lda #$aa-$6b     ;precharge accu
49a8 : 28              >            plp
                       >
49a9 : 6b              >            db  $6b          ;test nop integrity - flags on
49aa : ea              >            nop
49ab : ea              >            nop
                       >            tst_a $aa-$6b,$ff
49ac : 08              >            php         ;save flags
49ad : c93f            >            cmp #$aa-$6b     ;test result
                       >            trap_ne
49af : f003            >        beq skip1511
                       >        trap            ;failed not equal (non zero)
49b1 : 202561          >        jsr report_error
                       >
49b4 :                 >skip1511
                       >
49b4 : 68              >            pla         ;load status
49b5 : 48              >            pha
                       >            cmp_flag $ff
49b6 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
49b8 : f003            >        beq skip1514
                       >        trap            ;failed not equal (non zero)
49ba : 202561          >        jsr report_error
                       >
49bd :                 >skip1514
                       >
49bd : 28              >            plp         ;restore status
                       >
49be : c042            >            cpy #$42
                       >            trap_ne         ;y changed
49c0 : f003            >        beq skip1516
                       >        trap            ;failed not equal (non zero)
49c2 : 202561          >        jsr report_error
                       >
49c5 :                 >skip1516
                       >
49c5 : e000            >            cpx #0
                       >            trap_ne         ;x changed
49c7 : f003            >        beq skip1518
                       >        trap            ;failed not equal (non zero)
49c9 : 202561          >        jsr report_error
                       >
49cc :                 >skip1518
                       >
                        
                                nop_test $7b,1
49cc : a042            >            ldy #$42
49ce : a203            >            ldx #4-1
49d0 : 7b              >            db  $7b          ;test nop length
                       >        if 1 = 1
49d1 : ca              >            dex
49d2 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
49d3 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
49d4 : f003            >        beq skip1521
                       >        trap            ;failed not equal (non zero)
49d6 : 202561          >        jsr report_error
                       >
49d9 :                 >skip1521
                       >
                       >            set_a $ff-$7b,0
                       >            load_flag 0
49d9 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
49db : 48              >            pha         ;use stack to load status
49dc : a984            >            lda #$ff-$7b     ;precharge accu
49de : 28              >            plp
                       >
49df : 7b              >            db  $7b          ;test nop integrity - flags off
49e0 : ea              >            nop
49e1 : ea              >            nop
                       >            tst_a $ff-$7b,0
49e2 : 08              >            php         ;save flags
49e3 : c984            >            cmp #$ff-$7b     ;test result
                       >            trap_ne
49e5 : f003            >        beq skip1526
                       >        trap            ;failed not equal (non zero)
49e7 : 202561          >        jsr report_error
                       >
49ea :                 >skip1526
                       >
49ea : 68              >            pla         ;load status
49eb : 48              >            pha
                       >            cmp_flag 0
49ec : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
49ee : f003            >        beq skip1529
                       >        trap            ;failed not equal (non zero)
49f0 : 202561          >        jsr report_error
                       >
49f3 :                 >skip1529
                       >
49f3 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$7b,$ff
                       >            load_flag $ff
49f4 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
49f6 : 48              >            pha         ;use stack to load status
49f7 : a92f            >            lda #$aa-$7b     ;precharge accu
49f9 : 28              >            plp
                       >
49fa : 7b              >            db  $7b          ;test nop integrity - flags on
49fb : ea              >            nop
49fc : ea              >            nop
                       >            tst_a $aa-$7b,$ff
49fd : 08              >            php         ;save flags
49fe : c92f            >            cmp #$aa-$7b     ;test result
                       >            trap_ne
4a00 : f003            >        beq skip1534
                       >        trap            ;failed not equal (non zero)
4a02 : 202561          >        jsr report_error
                       >
4a05 :                 >skip1534
                       >
4a05 : 68              >            pla         ;load status
4a06 : 48              >            pha
                       >            cmp_flag $ff
4a07 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4a09 : f003            >        beq skip1537
                       >        trap            ;failed not equal (non zero)
4a0b : 202561          >        jsr report_error
                       >
4a0e :                 >skip1537
                       >
4a0e : 28              >            plp         ;restore status
                       >
4a0f : c042            >            cpy #$42
                       >            trap_ne         ;y changed
4a11 : f003            >        beq skip1539
                       >        trap            ;failed not equal (non zero)
4a13 : 202561          >        jsr report_error
                       >
4a16 :                 >skip1539
                       >
4a16 : e000            >            cpx #0
                       >            trap_ne         ;x changed
4a18 : f003            >        beq skip1541
                       >        trap            ;failed not equal (non zero)
4a1a : 202561          >        jsr report_error
                       >
4a1d :                 >skip1541
                       >
                        
                                nop_test $8b,1
4a1d : a042            >            ldy #$42
4a1f : a203            >            ldx #4-1
4a21 : 8b              >            db  $8b          ;test nop length
                       >        if 1 = 1
4a22 : ca              >            dex
4a23 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
4a24 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
4a25 : f003            >        beq skip1544
                       >        trap            ;failed not equal (non zero)
4a27 : 202561          >        jsr report_error
                       >
4a2a :                 >skip1544
                       >
                       >            set_a $ff-$8b,0
                       >            load_flag 0
4a2a : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4a2c : 48              >            pha         ;use stack to load status
4a2d : a974            >            lda #$ff-$8b     ;precharge accu
4a2f : 28              >            plp
                       >
4a30 : 8b              >            db  $8b          ;test nop integrity - flags off
4a31 : ea              >            nop
4a32 : ea              >            nop
                       >            tst_a $ff-$8b,0
4a33 : 08              >            php         ;save flags
4a34 : c974            >            cmp #$ff-$8b     ;test result
                       >            trap_ne
4a36 : f003            >        beq skip1549
                       >        trap            ;failed not equal (non zero)
4a38 : 202561          >        jsr report_error
                       >
4a3b :                 >skip1549
                       >
4a3b : 68              >            pla         ;load status
4a3c : 48              >            pha
                       >            cmp_flag 0
4a3d : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4a3f : f003            >        beq skip1552
                       >        trap            ;failed not equal (non zero)
4a41 : 202561          >        jsr report_error
                       >
4a44 :                 >skip1552
                       >
4a44 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$8b,$ff
                       >            load_flag $ff
4a45 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4a47 : 48              >            pha         ;use stack to load status
4a48 : a91f            >            lda #$aa-$8b     ;precharge accu
4a4a : 28              >            plp
                       >
4a4b : 8b              >            db  $8b          ;test nop integrity - flags on
4a4c : ea              >            nop
4a4d : ea              >            nop
                       >            tst_a $aa-$8b,$ff
4a4e : 08              >            php         ;save flags
4a4f : c91f            >            cmp #$aa-$8b     ;test result
                       >            trap_ne
4a51 : f003            >        beq skip1557
                       >        trap            ;failed not equal (non zero)
4a53 : 202561          >        jsr report_error
                       >
4a56 :                 >skip1557
                       >
4a56 : 68              >            pla         ;load status
4a57 : 48              >            pha
                       >            cmp_flag $ff
4a58 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4a5a : f003            >        beq skip1560
                       >        trap            ;failed not equal (non zero)
4a5c : 202561          >        jsr report_error
                       >
4a5f :                 >skip1560
                       >
4a5f : 28              >            plp         ;restore status
                       >
4a60 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
4a62 : f003            >        beq skip1562
                       >        trap            ;failed not equal (non zero)
4a64 : 202561          >        jsr report_error
                       >
4a67 :                 >skip1562
                       >
4a67 : e000            >            cpx #0
                       >            trap_ne         ;x changed
4a69 : f003            >        beq skip1564
                       >        trap            ;failed not equal (non zero)
4a6b : 202561          >        jsr report_error
                       >
4a6e :                 >skip1564
                       >
                        
                                nop_test $9b,1
4a6e : a042            >            ldy #$42
4a70 : a203            >            ldx #4-1
4a72 : 9b              >            db  $9b          ;test nop length
                       >        if 1 = 1
4a73 : ca              >            dex
4a74 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
4a75 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
4a76 : f003            >        beq skip1567
                       >        trap            ;failed not equal (non zero)
4a78 : 202561          >        jsr report_error
                       >
4a7b :                 >skip1567
                       >
                       >            set_a $ff-$9b,0
                       >            load_flag 0
4a7b : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4a7d : 48              >            pha         ;use stack to load status
4a7e : a964            >            lda #$ff-$9b     ;precharge accu
4a80 : 28              >            plp
                       >
4a81 : 9b              >            db  $9b          ;test nop integrity - flags off
4a82 : ea              >            nop
4a83 : ea              >            nop
                       >            tst_a $ff-$9b,0
4a84 : 08              >            php         ;save flags
4a85 : c964            >            cmp #$ff-$9b     ;test result
                       >            trap_ne
4a87 : f003            >        beq skip1572
                       >        trap            ;failed not equal (non zero)
4a89 : 202561          >        jsr report_error
                       >
4a8c :                 >skip1572
                       >
4a8c : 68              >            pla         ;load status
4a8d : 48              >            pha
                       >            cmp_flag 0
4a8e : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4a90 : f003            >        beq skip1575
                       >        trap            ;failed not equal (non zero)
4a92 : 202561          >        jsr report_error
                       >
4a95 :                 >skip1575
                       >
4a95 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$9b,$ff
                       >            load_flag $ff
4a96 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4a98 : 48              >            pha         ;use stack to load status
4a99 : a90f            >            lda #$aa-$9b     ;precharge accu
4a9b : 28              >            plp
                       >
4a9c : 9b              >            db  $9b          ;test nop integrity - flags on
4a9d : ea              >            nop
4a9e : ea              >            nop
                       >            tst_a $aa-$9b,$ff
4a9f : 08              >            php         ;save flags
4aa0 : c90f            >            cmp #$aa-$9b     ;test result
                       >            trap_ne
4aa2 : f003            >        beq skip1580
                       >        trap            ;failed not equal (non zero)
4aa4 : 202561          >        jsr report_error
                       >
4aa7 :                 >skip1580
                       >
4aa7 : 68              >            pla         ;load status
4aa8 : 48              >            pha
                       >            cmp_flag $ff
4aa9 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4aab : f003            >        beq skip1583
                       >        trap            ;failed not equal (non zero)
4aad : 202561          >        jsr report_error
                       >
4ab0 :                 >skip1583
                       >
4ab0 : 28              >            plp         ;restore status
                       >
4ab1 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
4ab3 : f003            >        beq skip1585
                       >        trap            ;failed not equal (non zero)
4ab5 : 202561          >        jsr report_error
                       >
4ab8 :                 >skip1585
                       >
4ab8 : e000            >            cpx #0
                       >            trap_ne         ;x changed
4aba : f003            >        beq skip1587
                       >        trap            ;failed not equal (non zero)
4abc : 202561          >        jsr report_error
                       >
4abf :                 >skip1587
                       >
                        
                                nop_test $ab,1
4abf : a042            >            ldy #$42
4ac1 : a203            >            ldx #4-1
4ac3 : ab              >            db  $ab          ;test nop length
                       >        if 1 = 1
4ac4 : ca              >            dex
4ac5 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
4ac6 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
4ac7 : f003            >        beq skip1590
                       >        trap            ;failed not equal (non zero)
4ac9 : 202561          >        jsr report_error
                       >
4acc :                 >skip1590
                       >
                       >            set_a $ff-$ab,0
                       >            load_flag 0
4acc : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4ace : 48              >            pha         ;use stack to load status
4acf : a954            >            lda #$ff-$ab     ;precharge accu
4ad1 : 28              >            plp
                       >
4ad2 : ab              >            db  $ab          ;test nop integrity - flags off
4ad3 : ea              >            nop
4ad4 : ea              >            nop
                       >            tst_a $ff-$ab,0
4ad5 : 08              >            php         ;save flags
4ad6 : c954            >            cmp #$ff-$ab     ;test result
                       >            trap_ne
4ad8 : f003            >        beq skip1595
                       >        trap            ;failed not equal (non zero)
4ada : 202561          >        jsr report_error
                       >
4add :                 >skip1595
                       >
4add : 68              >            pla         ;load status
4ade : 48              >            pha
                       >            cmp_flag 0
4adf : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4ae1 : f003            >        beq skip1598
                       >        trap            ;failed not equal (non zero)
4ae3 : 202561          >        jsr report_error
                       >
4ae6 :                 >skip1598
                       >
4ae6 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$ab,$ff
                       >            load_flag $ff
4ae7 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4ae9 : 48              >            pha         ;use stack to load status
4aea : a9ff            >            lda #$aa-$ab     ;precharge accu
4aec : 28              >            plp
                       >
4aed : ab              >            db  $ab          ;test nop integrity - flags on
4aee : ea              >            nop
4aef : ea              >            nop
                       >            tst_a $aa-$ab,$ff
4af0 : 08              >            php         ;save flags
4af1 : c9ff            >            cmp #$aa-$ab     ;test result
                       >            trap_ne
4af3 : f003            >        beq skip1603
                       >        trap            ;failed not equal (non zero)
4af5 : 202561          >        jsr report_error
                       >
4af8 :                 >skip1603
                       >
4af8 : 68              >            pla         ;load status
4af9 : 48              >            pha
                       >            cmp_flag $ff
4afa : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4afc : f003            >        beq skip1606
                       >        trap            ;failed not equal (non zero)
4afe : 202561          >        jsr report_error
                       >
4b01 :                 >skip1606
                       >
4b01 : 28              >            plp         ;restore status
                       >
4b02 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
4b04 : f003            >        beq skip1608
                       >        trap            ;failed not equal (non zero)
4b06 : 202561          >        jsr report_error
                       >
4b09 :                 >skip1608
                       >
4b09 : e000            >            cpx #0
                       >            trap_ne         ;x changed
4b0b : f003            >        beq skip1610
                       >        trap            ;failed not equal (non zero)
4b0d : 202561          >        jsr report_error
                       >
4b10 :                 >skip1610
                       >
                        
                                nop_test $bb,1
4b10 : a042            >            ldy #$42
4b12 : a203            >            ldx #4-1
4b14 : bb              >            db  $bb          ;test nop length
                       >        if 1 = 1
4b15 : ca              >            dex
4b16 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
4b17 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
4b18 : f003            >        beq skip1613
                       >        trap            ;failed not equal (non zero)
4b1a : 202561          >        jsr report_error
                       >
4b1d :                 >skip1613
                       >
                       >            set_a $ff-$bb,0
                       >            load_flag 0
4b1d : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4b1f : 48              >            pha         ;use stack to load status
4b20 : a944            >            lda #$ff-$bb     ;precharge accu
4b22 : 28              >            plp
                       >
4b23 : bb              >            db  $bb          ;test nop integrity - flags off
4b24 : ea              >            nop
4b25 : ea              >            nop
                       >            tst_a $ff-$bb,0
4b26 : 08              >            php         ;save flags
4b27 : c944            >            cmp #$ff-$bb     ;test result
                       >            trap_ne
4b29 : f003            >        beq skip1618
                       >        trap            ;failed not equal (non zero)
4b2b : 202561          >        jsr report_error
                       >
4b2e :                 >skip1618
                       >
4b2e : 68              >            pla         ;load status
4b2f : 48              >            pha
                       >            cmp_flag 0
4b30 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4b32 : f003            >        beq skip1621
                       >        trap            ;failed not equal (non zero)
4b34 : 202561          >        jsr report_error
                       >
4b37 :                 >skip1621
                       >
4b37 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$bb,$ff
                       >            load_flag $ff
4b38 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4b3a : 48              >            pha         ;use stack to load status
4b3b : a9ef            >            lda #$aa-$bb     ;precharge accu
4b3d : 28              >            plp
                       >
4b3e : bb              >            db  $bb          ;test nop integrity - flags on
4b3f : ea              >            nop
4b40 : ea              >            nop
                       >            tst_a $aa-$bb,$ff
4b41 : 08              >            php         ;save flags
4b42 : c9ef            >            cmp #$aa-$bb     ;test result
                       >            trap_ne
4b44 : f003            >        beq skip1626
                       >        trap            ;failed not equal (non zero)
4b46 : 202561          >        jsr report_error
                       >
4b49 :                 >skip1626
                       >
4b49 : 68              >            pla         ;load status
4b4a : 48              >            pha
                       >            cmp_flag $ff
4b4b : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4b4d : f003            >        beq skip1629
                       >        trap            ;failed not equal (non zero)
4b4f : 202561          >        jsr report_error
                       >
4b52 :                 >skip1629
                       >
4b52 : 28              >            plp         ;restore status
                       >
4b53 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
4b55 : f003            >        beq skip1631
                       >        trap            ;failed not equal (non zero)
4b57 : 202561          >        jsr report_error
                       >
4b5a :                 >skip1631
                       >
4b5a : e000            >            cpx #0
                       >            trap_ne         ;x changed
4b5c : f003            >        beq skip1633
                       >        trap            ;failed not equal (non zero)
4b5e : 202561          >        jsr report_error
                       >
4b61 :                 >skip1633
                       >
                        
                                nop_test $eb,1
4b61 : a042            >            ldy #$42
4b63 : a203            >            ldx #4-1
4b65 : eb              >            db  $eb          ;test nop length
                       >        if 1 = 1
4b66 : ca              >            dex
4b67 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
4b68 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
4b69 : f003            >        beq skip1636
                       >        trap            ;failed not equal (non zero)
4b6b : 202561          >        jsr report_error
                       >
4b6e :                 >skip1636
                       >
                       >            set_a $ff-$eb,0
                       >            load_flag 0
4b6e : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4b70 : 48              >            pha         ;use stack to load status
4b71 : a914            >            lda #$ff-$eb     ;precharge accu
4b73 : 28              >            plp
                       >
4b74 : eb              >            db  $eb          ;test nop integrity - flags off
4b75 : ea              >            nop
4b76 : ea              >            nop
                       >            tst_a $ff-$eb,0
4b77 : 08              >            php         ;save flags
4b78 : c914            >            cmp #$ff-$eb     ;test result
                       >            trap_ne
4b7a : f003            >        beq skip1641
                       >        trap            ;failed not equal (non zero)
4b7c : 202561          >        jsr report_error
                       >
4b7f :                 >skip1641
                       >
4b7f : 68              >            pla         ;load status
4b80 : 48              >            pha
                       >            cmp_flag 0
4b81 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4b83 : f003            >        beq skip1644
                       >        trap            ;failed not equal (non zero)
4b85 : 202561          >        jsr report_error
                       >
4b88 :                 >skip1644
                       >
4b88 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$eb,$ff
                       >            load_flag $ff
4b89 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4b8b : 48              >            pha         ;use stack to load status
4b8c : a9bf            >            lda #$aa-$eb     ;precharge accu
4b8e : 28              >            plp
                       >
4b8f : eb              >            db  $eb          ;test nop integrity - flags on
4b90 : ea              >            nop
4b91 : ea              >            nop
                       >            tst_a $aa-$eb,$ff
4b92 : 08              >            php         ;save flags
4b93 : c9bf            >            cmp #$aa-$eb     ;test result
                       >            trap_ne
4b95 : f003            >        beq skip1649
                       >        trap            ;failed not equal (non zero)
4b97 : 202561          >        jsr report_error
                       >
4b9a :                 >skip1649
                       >
4b9a : 68              >            pla         ;load status
4b9b : 48              >            pha
                       >            cmp_flag $ff
4b9c : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4b9e : f003            >        beq skip1652
                       >        trap            ;failed not equal (non zero)
4ba0 : 202561          >        jsr report_error
                       >
4ba3 :                 >skip1652
                       >
4ba3 : 28              >            plp         ;restore status
                       >
4ba4 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
4ba6 : f003            >        beq skip1654
                       >        trap            ;failed not equal (non zero)
4ba8 : 202561          >        jsr report_error
                       >
4bab :                 >skip1654
                       >
4bab : e000            >            cpx #0
                       >            trap_ne         ;x changed
4bad : f003            >        beq skip1656
                       >        trap            ;failed not equal (non zero)
4baf : 202561          >        jsr report_error
                       >
4bb2 :                 >skip1656
                       >
                        
                                nop_test $fb,1
4bb2 : a042            >            ldy #$42
4bb4 : a203            >            ldx #4-1
4bb6 : fb              >            db  $fb          ;test nop length
                       >        if 1 = 1
4bb7 : ca              >            dex
4bb8 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
4bb9 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
4bba : f003            >        beq skip1659
                       >        trap            ;failed not equal (non zero)
4bbc : 202561          >        jsr report_error
                       >
4bbf :                 >skip1659
                       >
                       >            set_a $ff-$fb,0
                       >            load_flag 0
4bbf : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4bc1 : 48              >            pha         ;use stack to load status
4bc2 : a904            >            lda #$ff-$fb     ;precharge accu
4bc4 : 28              >            plp
                       >
4bc5 : fb              >            db  $fb          ;test nop integrity - flags off
4bc6 : ea              >            nop
4bc7 : ea              >            nop
                       >            tst_a $ff-$fb,0
4bc8 : 08              >            php         ;save flags
4bc9 : c904            >            cmp #$ff-$fb     ;test result
                       >            trap_ne
4bcb : f003            >        beq skip1664
                       >        trap            ;failed not equal (non zero)
4bcd : 202561          >        jsr report_error
                       >
4bd0 :                 >skip1664
                       >
4bd0 : 68              >            pla         ;load status
4bd1 : 48              >            pha
                       >            cmp_flag 0
4bd2 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4bd4 : f003            >        beq skip1667
                       >        trap            ;failed not equal (non zero)
4bd6 : 202561          >        jsr report_error
                       >
4bd9 :                 >skip1667
                       >
4bd9 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$fb,$ff
                       >            load_flag $ff
4bda : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4bdc : 48              >            pha         ;use stack to load status
4bdd : a9af            >            lda #$aa-$fb     ;precharge accu
4bdf : 28              >            plp
                       >
4be0 : fb              >            db  $fb          ;test nop integrity - flags on
4be1 : ea              >            nop
4be2 : ea              >            nop
                       >            tst_a $aa-$fb,$ff
4be3 : 08              >            php         ;save flags
4be4 : c9af            >            cmp #$aa-$fb     ;test result
                       >            trap_ne
4be6 : f003            >        beq skip1672
                       >        trap            ;failed not equal (non zero)
4be8 : 202561          >        jsr report_error
                       >
4beb :                 >skip1672
                       >
4beb : 68              >            pla         ;load status
4bec : 48              >            pha
                       >            cmp_flag $ff
4bed : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4bef : f003            >        beq skip1675
                       >        trap            ;failed not equal (non zero)
4bf1 : 202561          >        jsr report_error
                       >
4bf4 :                 >skip1675
                       >
4bf4 : 28              >            plp         ;restore status
                       >
4bf5 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
4bf7 : f003            >        beq skip1677
                       >        trap            ;failed not equal (non zero)
4bf9 : 202561          >        jsr report_error
                       >
4bfc :                 >skip1677
                       >
4bfc : e000            >            cpx #0
                       >            trap_ne         ;x changed
4bfe : f003            >        beq skip1679
                       >        trap            ;failed not equal (non zero)
4c00 : 202561          >        jsr report_error
                       >
4c03 :                 >skip1679
                       >
                        
                            if rkwl_wdc_op = 0      ;NOPs not available on Rockwell & WDC 65C02
                                nop_test $07,1
                                nop_test $17,1
                                nop_test $27,1
                                nop_test $37,1
                                nop_test $47,1
                                nop_test $57,1
                                nop_test $67,1
                                nop_test $77,1
                                nop_test $87,1
                                nop_test $97,1
                                nop_test $a7,1
                                nop_test $b7,1
                                nop_test $c7,1
                                nop_test $d7,1
                                nop_test $e7,1
                                nop_test $f7,1
                                nop_test $0f,1
                                nop_test $1f,1
                                nop_test $2f,1
                                nop_test $3f,1
                                nop_test $4f,1
                                nop_test $5f,1
                                nop_test $6f,1
                                nop_test $7f,1
                                nop_test $8f,1
                                nop_test $9f,1
                                nop_test $af,1
                                nop_test $bf,1
                                nop_test $cf,1
                                nop_test $df,1
                                nop_test $ef,1
                                nop_test $ff,1
                            endif
                            if  wdc_op = 0          ;NOPs not available on WDC 65C02 (WAI, STP)
                                nop_test $cb,1
                                nop_test $db,1
                            endif
                                next_test
4c03 : ad0232          >            lda test_case   ;previous test
4c06 : c908            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
4c08 : f003            >        beq skip1682
                       >        trap            ;failed not equal (non zero)
4c0a : 202561          >        jsr report_error
                       >
4c0d :                 >skip1682
                       >
0009 =                 >test_num = test_num + 1
4c0d : a909            >            lda #test_num   ;*** next tests' number
4c0f : 8d0232          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                            endif
                                    
                        ; jump indirect (test page cross bug is fixed)
4c12 : a203                     ldx #3          ;prepare table
4c14 : bd2060           ji1     lda ji_adr,x
4c17 : 9dfd32                   sta ji_tab,x
4c1a : ca                       dex
4c1b : 10f7                     bpl ji1
4c1d : a964                     lda #hi(ji_px) ;high address if page cross bug
4c1f : 8d0032                   sta pg_x
                                set_stat 0
                       >            load_flag 0
4c22 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4c24 : 48              >            pha         ;use stack to load status
4c25 : 28              >            plp
                        
4c26 : a949                     lda #'I'
4c28 : a24e                     ldx #'N'
4c2a : a044                     ldy #'D'        ;N=0, V=0, Z=0, C=0
4c2c : 6cfd32                   jmp (ji_tab)
4c2f : ea                       nop
                                trap_ne         ;runover protection
4c30 : f003            >        beq skip1686
                       >        trap            ;failed not equal (non zero)
4c32 : 202561          >        jsr report_error
                       >
4c35 :                 >skip1686
                        
                        
4c35 : 88                       dey
4c36 : 88                       dey
4c37 : 08               ji_ret  php             ;either SP or Y count will fail, if we do not hit
4c38 : 88                       dey
4c39 : 88                       dey
4c3a : 88                       dey
4c3b : 28                       plp
                                trap_eq         ;returned flags OK?
4c3c : d003            >        bne skip1688
                       >        trap           ;failed equal (zero)
4c3e : 202561          >        jsr report_error
                       >
4c41 :                 >skip1688
                        
                                trap_pl
4c41 : 3003            >        bmi skip1690
                       >        trap            ;failed plus (bit 7 clear)
4c43 : 202561          >        jsr report_error
                       >
4c46 :                 >skip1690
                        
                                trap_cc
4c46 : b003            >        bcs skip1692
                       >        trap            ;failed carry clear
4c48 : 202561          >        jsr report_error
                       >
4c4b :                 >skip1692
                        
                                trap_vc
4c4b : 7003            >        bvs skip1694
                       >        trap            ;failed overflow clear
4c4d : 202561          >        jsr report_error
                       >
4c50 :                 >skip1694
                        
4c50 : c9e3                     cmp #('I'^$aa)  ;returned registers OK?
                                trap_ne
4c52 : f003            >        beq skip1696
                       >        trap            ;failed not equal (non zero)
4c54 : 202561          >        jsr report_error
                       >
4c57 :                 >skip1696
                        
4c57 : e04f                     cpx #('N'+1)
                                trap_ne
4c59 : f003            >        beq skip1698
                       >        trap            ;failed not equal (non zero)
4c5b : 202561          >        jsr report_error
                       >
4c5e :                 >skip1698
                        
4c5e : c03e                     cpy #('D'-6)
                                trap_ne
4c60 : f003            >        beq skip1700
                       >        trap            ;failed not equal (non zero)
4c62 : 202561          >        jsr report_error
                       >
4c65 :                 >skip1700
                        
4c65 : ba                       tsx             ;SP check
4c66 : e0ff                     cpx #$ff
                                trap_ne
4c68 : f003            >        beq skip1702
                       >        trap            ;failed not equal (non zero)
4c6a : 202561          >        jsr report_error
                       >
4c6d :                 >skip1702
                        
                                next_test
4c6d : ad0232          >            lda test_case   ;previous test
4c70 : c909            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
4c72 : f003            >        beq skip1705
                       >        trap            ;failed not equal (non zero)
4c74 : 202561          >        jsr report_error
                       >
4c77 :                 >skip1705
                       >
000a =                 >test_num = test_num + 1
4c77 : a90a            >            lda #test_num   ;*** next tests' number
4c79 : 8d0232          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; jump indexed indirect
4c7c : a20b                     ldx #11         ;prepare table
4c7e : bd7460           jxi1    lda jxi_adr,x
4c81 : 9df932                   sta jxi_tab,x
4c84 : ca                       dex
4c85 : 10f7                     bpl jxi1
4c87 : a963                     lda #hi(jxi_px) ;high address if page cross bug
4c89 : 8d0032                   sta pg_x
                                set_stat 0
                       >            load_flag 0
4c8c : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4c8e : 48              >            pha         ;use stack to load status
4c8f : 28              >            plp
                        
4c90 : a958                     lda #'X'
4c92 : a204                     ldx #4
4c94 : a049                     ldy #'I'        ;N=0, V=0, Z=0, C=0
4c96 : 7cf932                   jmp (jxi_tab,x)
4c99 : ea                       nop
                                trap_ne         ;runover protection
4c9a : f003            >        beq skip1709
                       >        trap            ;failed not equal (non zero)
4c9c : 202561          >        jsr report_error
                       >
4c9f :                 >skip1709
                        
                        
4c9f : 88                       dey
4ca0 : 88                       dey
4ca1 : 08               jxi_ret php             ;either SP or Y count will fail, if we do not hit
4ca2 : 88                       dey
4ca3 : 88                       dey
4ca4 : 88                       dey
4ca5 : 28                       plp
                                trap_eq         ;returned flags OK?
4ca6 : d003            >        bne skip1711
                       >        trap           ;failed equal (zero)
4ca8 : 202561          >        jsr report_error
                       >
4cab :                 >skip1711
                        
                                trap_pl
4cab : 3003            >        bmi skip1713
                       >        trap            ;failed plus (bit 7 clear)
4cad : 202561          >        jsr report_error
                       >
4cb0 :                 >skip1713
                        
                                trap_cc
4cb0 : b003            >        bcs skip1715
                       >        trap            ;failed carry clear
4cb2 : 202561          >        jsr report_error
                       >
4cb5 :                 >skip1715
                        
                                trap_vc
4cb5 : 7003            >        bvs skip1717
                       >        trap            ;failed overflow clear
4cb7 : 202561          >        jsr report_error
                       >
4cba :                 >skip1717
                        
4cba : c9f2                     cmp #('X'^$aa)  ;returned registers OK?
                                trap_ne
4cbc : f003            >        beq skip1719
                       >        trap            ;failed not equal (non zero)
4cbe : 202561          >        jsr report_error
                       >
4cc1 :                 >skip1719
                        
4cc1 : e006                     cpx #6
                                trap_ne
4cc3 : f003            >        beq skip1721
                       >        trap            ;failed not equal (non zero)
4cc5 : 202561          >        jsr report_error
                       >
4cc8 :                 >skip1721
                        
4cc8 : c043                     cpy #('I'-6)
                                trap_ne
4cca : f003            >        beq skip1723
                       >        trap            ;failed not equal (non zero)
4ccc : 202561          >        jsr report_error
                       >
4ccf :                 >skip1723
                        
4ccf : ba                       tsx             ;SP check
4cd0 : e0ff                     cpx #$ff
                                trap_ne
4cd2 : f003            >        beq skip1725
                       >        trap            ;failed not equal (non zero)
4cd4 : 202561          >        jsr report_error
                       >
4cd7 :                 >skip1725
                        
                        
4cd7 : a9f3                     lda #lo(jxp_ok) ;test with index causing a page cross
4cd9 : 8d0033                   sta jxp_tab
4cdc : a94c                     lda #hi(jxp_ok)
4cde : 8d0133                   sta jxp_tab+1
4ce1 : a9f0                     lda #lo(jxp_px)
4ce3 : 8d0032                   sta pg_x
4ce6 : a94c                     lda #hi(jxp_px)
4ce8 : 8d0132                   sta pg_x+1
4ceb : a2ff                     ldx #$ff
4ced : 7c0132                   jmp (jxp_tab-$ff,x)
                                
4cf0 :                  jxp_px  
                                trap            ;page cross by index to wrong page
4cf0 : 202561          >        jsr report_error
                        
                        
4cf3 :                  jxp_ok
                                next_test
4cf3 : ad0232          >            lda test_case   ;previous test
4cf6 : c90a            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
4cf8 : f003            >        beq skip1729
                       >        trap            ;failed not equal (non zero)
4cfa : 202561          >        jsr report_error
                       >
4cfd :                 >skip1729
                       >
000b =                 >test_num = test_num + 1
4cfd : a90b            >            lda #test_num   ;*** next tests' number
4cff : 8d0232          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                            if ROM_vectors = 1
                        ; test BRK clears decimal mode
                                load_flag 0     ;with interrupts enabled if allowed!
                                pha
                                lda #'B'
                                ldx #'R'
                                ldy #'K'
                                plp             ;N=0, V=0, Z=0, C=0
                                brk
                                dey             ;should not be executed
                        brk_ret0                ;address of break return
                                php             ;either SP or Y count will fail, if we do not hit
                                dey
                                dey
                                dey
                                cmp #'B'^$aa    ;returned registers OK?
                                ;the IRQ vector was never executed if A & X stay unmodified
                                trap_ne
                                cpx #'R'+1
                                trap_ne
                                cpy #'K'-6
                                trap_ne
                                pla             ;returned flags OK (unchanged)?
                                cmp_flag 0
                                trap_ne
                                tsx             ;sp?
                                cpx #$ff
                                trap_ne
                        ;pass 2
                                load_flag $ff   ;with interrupts disabled if allowed!
                                pha
                                lda #$ff-'B'
                                ldx #$ff-'R'
                                ldy #$ff-'K'
                                plp             ;N=1, V=1, Z=1, C=1
                                brk
                                dey             ;should not be executed
                        brk_ret1                ;address of break return
                                php             ;either SP or Y count will fail, if we do not hit
                                dey
                                dey
                                dey
                                cmp #($ff-'B')^$aa  ;returned registers OK?
                                ;the IRQ vector was never executed if A & X stay unmodified
                                trap_ne
                                cpx #$ff-'R'+1
                                trap_ne
                                cpy #$ff-'K'-6
                                trap_ne
                                pla             ;returned flags OK (unchanged)?
                                cmp_flag $ff
                                trap_ne
                                tsx             ;sp?
                                cpx #$ff
                                trap_ne
                                next_test
                            endif
                         
                        ; testing accumulator increment/decrement INC A & DEC A
4d02 : a2ac                     ldx #$ac    ;protect x & y
4d04 : a0dc                     ldy #$dc
                                set_a $fe,$ff
                       >            load_flag $ff
4d06 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4d08 : 48              >            pha         ;use stack to load status
4d09 : a9fe            >            lda #$fe     ;precharge accu
4d0b : 28              >            plp
                        
4d0c : 1a                       inc a           ;ff
                                tst_as $ff,$ff-zero
4d0d : 48              >            pha
4d0e : 08              >            php         ;save flags
4d0f : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
4d11 : f003            >        beq skip1734
                       >        trap            ;failed not equal (non zero)
4d13 : 202561          >        jsr report_error
                       >
4d16 :                 >skip1734
                       >
4d16 : 68              >            pla         ;load status
4d17 : 48              >            pha
                       >            cmp_flag $ff-zero
4d18 : c9fd            >            cmp #($ff-zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4d1a : f003            >        beq skip1737
                       >        trap            ;failed not equal (non zero)
4d1c : 202561          >        jsr report_error
                       >
4d1f :                 >skip1737
                       >
4d1f : 28              >            plp         ;restore status
4d20 : 68              >            pla
                        
4d21 : 1a                       inc a           ;00
                                tst_as 0,$ff-minus
4d22 : 48              >            pha
4d23 : 08              >            php         ;save flags
4d24 : c900            >            cmp #0     ;test result
                       >            trap_ne
4d26 : f003            >        beq skip1740
                       >        trap            ;failed not equal (non zero)
4d28 : 202561          >        jsr report_error
                       >
4d2b :                 >skip1740
                       >
4d2b : 68              >            pla         ;load status
4d2c : 48              >            pha
                       >            cmp_flag $ff-minus
4d2d : c97f            >            cmp #($ff-minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4d2f : f003            >        beq skip1743
                       >        trap            ;failed not equal (non zero)
4d31 : 202561          >        jsr report_error
                       >
4d34 :                 >skip1743
                       >
4d34 : 28              >            plp         ;restore status
4d35 : 68              >            pla
                        
4d36 : 1a                       inc a           ;01
                                tst_as 1,$ff-minus-zero
4d37 : 48              >            pha
4d38 : 08              >            php         ;save flags
4d39 : c901            >            cmp #1     ;test result
                       >            trap_ne
4d3b : f003            >        beq skip1746
                       >        trap            ;failed not equal (non zero)
4d3d : 202561          >        jsr report_error
                       >
4d40 :                 >skip1746
                       >
4d40 : 68              >            pla         ;load status
4d41 : 48              >            pha
                       >            cmp_flag $ff-minus-zero
4d42 : c97d            >            cmp #($ff-minus-zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4d44 : f003            >        beq skip1749
                       >        trap            ;failed not equal (non zero)
4d46 : 202561          >        jsr report_error
                       >
4d49 :                 >skip1749
                       >
4d49 : 28              >            plp         ;restore status
4d4a : 68              >            pla
                        
4d4b : 3a                       dec a           ;00
                                tst_as 0,$ff-minus
4d4c : 48              >            pha
4d4d : 08              >            php         ;save flags
4d4e : c900            >            cmp #0     ;test result
                       >            trap_ne
4d50 : f003            >        beq skip1752
                       >        trap            ;failed not equal (non zero)
4d52 : 202561          >        jsr report_error
                       >
4d55 :                 >skip1752
                       >
4d55 : 68              >            pla         ;load status
4d56 : 48              >            pha
                       >            cmp_flag $ff-minus
4d57 : c97f            >            cmp #($ff-minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4d59 : f003            >        beq skip1755
                       >        trap            ;failed not equal (non zero)
4d5b : 202561          >        jsr report_error
                       >
4d5e :                 >skip1755
                       >
4d5e : 28              >            plp         ;restore status
4d5f : 68              >            pla
                        
4d60 : 3a                       dec a           ;ff
                                tst_as $ff,$ff-zero
4d61 : 48              >            pha
4d62 : 08              >            php         ;save flags
4d63 : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
4d65 : f003            >        beq skip1758
                       >        trap            ;failed not equal (non zero)
4d67 : 202561          >        jsr report_error
                       >
4d6a :                 >skip1758
                       >
4d6a : 68              >            pla         ;load status
4d6b : 48              >            pha
                       >            cmp_flag $ff-zero
4d6c : c9fd            >            cmp #($ff-zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4d6e : f003            >        beq skip1761
                       >        trap            ;failed not equal (non zero)
4d70 : 202561          >        jsr report_error
                       >
4d73 :                 >skip1761
                       >
4d73 : 28              >            plp         ;restore status
4d74 : 68              >            pla
                        
4d75 : 3a                       dec a           ;fe
                                set_a $fe,0
                       >            load_flag 0
4d76 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4d78 : 48              >            pha         ;use stack to load status
4d79 : a9fe            >            lda #$fe     ;precharge accu
4d7b : 28              >            plp
                        
4d7c : 1a                       inc a           ;ff
                                tst_as $ff,minus
4d7d : 48              >            pha
4d7e : 08              >            php         ;save flags
4d7f : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
4d81 : f003            >        beq skip1766
                       >        trap            ;failed not equal (non zero)
4d83 : 202561          >        jsr report_error
                       >
4d86 :                 >skip1766
                       >
4d86 : 68              >            pla         ;load status
4d87 : 48              >            pha
                       >            cmp_flag minus
4d88 : c9b0            >            cmp #(minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4d8a : f003            >        beq skip1769
                       >        trap            ;failed not equal (non zero)
4d8c : 202561          >        jsr report_error
                       >
4d8f :                 >skip1769
                       >
4d8f : 28              >            plp         ;restore status
4d90 : 68              >            pla
                        
4d91 : 1a                       inc a           ;00
                                tst_as 0,zero
4d92 : 48              >            pha
4d93 : 08              >            php         ;save flags
4d94 : c900            >            cmp #0     ;test result
                       >            trap_ne
4d96 : f003            >        beq skip1772
                       >        trap            ;failed not equal (non zero)
4d98 : 202561          >        jsr report_error
                       >
4d9b :                 >skip1772
                       >
4d9b : 68              >            pla         ;load status
4d9c : 48              >            pha
                       >            cmp_flag zero
4d9d : c932            >            cmp #(zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4d9f : f003            >        beq skip1775
                       >        trap            ;failed not equal (non zero)
4da1 : 202561          >        jsr report_error
                       >
4da4 :                 >skip1775
                       >
4da4 : 28              >            plp         ;restore status
4da5 : 68              >            pla
                        
4da6 : 1a                       inc a           ;01
                                tst_as 1,0
4da7 : 48              >            pha
4da8 : 08              >            php         ;save flags
4da9 : c901            >            cmp #1     ;test result
                       >            trap_ne
4dab : f003            >        beq skip1778
                       >        trap            ;failed not equal (non zero)
4dad : 202561          >        jsr report_error
                       >
4db0 :                 >skip1778
                       >
4db0 : 68              >            pla         ;load status
4db1 : 48              >            pha
                       >            cmp_flag 0
4db2 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4db4 : f003            >        beq skip1781
                       >        trap            ;failed not equal (non zero)
4db6 : 202561          >        jsr report_error
                       >
4db9 :                 >skip1781
                       >
4db9 : 28              >            plp         ;restore status
4dba : 68              >            pla
                        
4dbb : 3a                       dec a           ;00
                                tst_as 0,zero
4dbc : 48              >            pha
4dbd : 08              >            php         ;save flags
4dbe : c900            >            cmp #0     ;test result
                       >            trap_ne
4dc0 : f003            >        beq skip1784
                       >        trap            ;failed not equal (non zero)
4dc2 : 202561          >        jsr report_error
                       >
4dc5 :                 >skip1784
                       >
4dc5 : 68              >            pla         ;load status
4dc6 : 48              >            pha
                       >            cmp_flag zero
4dc7 : c932            >            cmp #(zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4dc9 : f003            >        beq skip1787
                       >        trap            ;failed not equal (non zero)
4dcb : 202561          >        jsr report_error
                       >
4dce :                 >skip1787
                       >
4dce : 28              >            plp         ;restore status
4dcf : 68              >            pla
                        
4dd0 : 3a                       dec a           ;ff
                                tst_as $ff,minus
4dd1 : 48              >            pha
4dd2 : 08              >            php         ;save flags
4dd3 : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
4dd5 : f003            >        beq skip1790
                       >        trap            ;failed not equal (non zero)
4dd7 : 202561          >        jsr report_error
                       >
4dda :                 >skip1790
                       >
4dda : 68              >            pla         ;load status
4ddb : 48              >            pha
                       >            cmp_flag minus
4ddc : c9b0            >            cmp #(minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4dde : f003            >        beq skip1793
                       >        trap            ;failed not equal (non zero)
4de0 : 202561          >        jsr report_error
                       >
4de3 :                 >skip1793
                       >
4de3 : 28              >            plp         ;restore status
4de4 : 68              >            pla
                        
4de5 : e0ac                     cpx #$ac
                                trap_ne     ;x altered during test
4de7 : f003            >        beq skip1795
                       >        trap            ;failed not equal (non zero)
4de9 : 202561          >        jsr report_error
                       >
4dec :                 >skip1795
                        
4dec : c0dc                     cpy #$dc
                                trap_ne     ;y altered during test
4dee : f003            >        beq skip1797
                       >        trap            ;failed not equal (non zero)
4df0 : 202561          >        jsr report_error
                       >
4df3 :                 >skip1797
                        
4df3 : ba                       tsx
4df4 : e0ff                     cpx #$ff
                                trap_ne     ;sp push/pop mismatch
4df6 : f003            >        beq skip1799
                       >        trap            ;failed not equal (non zero)
4df8 : 202561          >        jsr report_error
                       >
4dfb :                 >skip1799
                        
                                next_test
4dfb : ad0232          >            lda test_case   ;previous test
4dfe : c90b            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
4e00 : f003            >        beq skip1802
                       >        trap            ;failed not equal (non zero)
4e02 : 202561          >        jsr report_error
                       >
4e05 :                 >skip1802
                       >
000c =                 >test_num = test_num + 1
4e05 : a90c            >            lda #test_num   ;*** next tests' number
4e07 : 8d0232          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; testing load / store accumulator LDA / STA (zp)
4e0a : a299                     ldx #$99    ;protect x & y
4e0c : a066                     ldy #$66
                                set_stat 0  
                       >            load_flag 0  
4e0e : a900            >            lda #0               ;allow test to change I-flag (no mask)
                       >
4e10 : 48              >            pha         ;use stack to load status
4e11 : 28              >            plp
                        
4e12 : b26a                     lda (ind1)
4e14 : 08                       php         ;test stores do not alter flags
4e15 : 49c3                     eor #$c3
4e17 : 28                       plp
4e18 : 9276                     sta (indt)
4e1a : 08                       php         ;flags after load/store sequence
4e1b : 49c3                     eor #$c3
4e1d : c9c3                     cmp #$c3    ;test result
                                trap_ne
4e1f : f003            >        beq skip1806
                       >        trap            ;failed not equal (non zero)
4e21 : 202561          >        jsr report_error
                       >
4e24 :                 >skip1806
                        
4e24 : 68                       pla         ;load status
                                eor_flag 0
4e25 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
4e27 : cd1532                   cmp fLDx    ;test flags
                                trap_ne
4e2a : f003            >        beq skip1809
                       >        trap            ;failed not equal (non zero)
4e2c : 202561          >        jsr report_error
                       >
4e2f :                 >skip1809
                        
                                set_stat 0
                       >            load_flag 0
4e2f : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4e31 : 48              >            pha         ;use stack to load status
4e32 : 28              >            plp
                        
4e33 : b26c                     lda (ind1+2)
4e35 : 08                       php         ;test stores do not alter flags
4e36 : 49c3                     eor #$c3
4e38 : 28                       plp
4e39 : 9278                     sta (indt+2)
4e3b : 08                       php         ;flags after load/store sequence
4e3c : 49c3                     eor #$c3
4e3e : c982                     cmp #$82    ;test result
                                trap_ne
4e40 : f003            >        beq skip1813
                       >        trap            ;failed not equal (non zero)
4e42 : 202561          >        jsr report_error
                       >
4e45 :                 >skip1813
                        
4e45 : 68                       pla         ;load status
                                eor_flag 0
4e46 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
4e48 : cd1632                   cmp fLDx+1  ;test flags
                                trap_ne
4e4b : f003            >        beq skip1816
                       >        trap            ;failed not equal (non zero)
4e4d : 202561          >        jsr report_error
                       >
4e50 :                 >skip1816
                        
                                set_stat 0
                       >            load_flag 0
4e50 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4e52 : 48              >            pha         ;use stack to load status
4e53 : 28              >            plp
                        
4e54 : b26e                     lda (ind1+4)
4e56 : 08                       php         ;test stores do not alter flags
4e57 : 49c3                     eor #$c3
4e59 : 28                       plp
4e5a : 927a                     sta (indt+4)
4e5c : 08                       php         ;flags after load/store sequence
4e5d : 49c3                     eor #$c3
4e5f : c941                     cmp #$41    ;test result
                                trap_ne
4e61 : f003            >        beq skip1820
                       >        trap            ;failed not equal (non zero)
4e63 : 202561          >        jsr report_error
                       >
4e66 :                 >skip1820
                        
4e66 : 68                       pla         ;load status
                                eor_flag 0
4e67 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
4e69 : cd1732                   cmp fLDx+2  ;test flags
                                trap_ne
4e6c : f003            >        beq skip1823
                       >        trap            ;failed not equal (non zero)
4e6e : 202561          >        jsr report_error
                       >
4e71 :                 >skip1823
                        
                                set_stat 0
                       >            load_flag 0
4e71 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4e73 : 48              >            pha         ;use stack to load status
4e74 : 28              >            plp
                        
4e75 : b270                     lda (ind1+6)
4e77 : 08                       php         ;test stores do not alter flags
4e78 : 49c3                     eor #$c3
4e7a : 28                       plp
4e7b : 927c                     sta (indt+6)
4e7d : 08                       php         ;flags after load/store sequence
4e7e : 49c3                     eor #$c3
4e80 : c900                     cmp #0      ;test result
                                trap_ne
4e82 : f003            >        beq skip1827
                       >        trap            ;failed not equal (non zero)
4e84 : 202561          >        jsr report_error
                       >
4e87 :                 >skip1827
                        
4e87 : 68                       pla         ;load status
                                eor_flag 0
4e88 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
4e8a : cd1832                   cmp fLDx+3  ;test flags
                                trap_ne
4e8d : f003            >        beq skip1830
                       >        trap            ;failed not equal (non zero)
4e8f : 202561          >        jsr report_error
                       >
4e92 :                 >skip1830
                        
4e92 : e099                     cpx #$99
                                trap_ne     ;x altered during test
4e94 : f003            >        beq skip1832
                       >        trap            ;failed not equal (non zero)
4e96 : 202561          >        jsr report_error
                       >
4e99 :                 >skip1832
                        
4e99 : c066                     cpy #$66
                                trap_ne     ;y altered during test
4e9b : f003            >        beq skip1834
                       >        trap            ;failed not equal (non zero)
4e9d : 202561          >        jsr report_error
                       >
4ea0 :                 >skip1834
                        
                        
4ea0 : a003                     ldy #3      ;testing store result
4ea2 : a200                     ldx #0
4ea4 : b90532           tstai1  lda abst,y
4ea7 : 49c3                     eor #$c3
4ea9 : d91032                   cmp abs1,y
                                trap_ne     ;store to indirect data
4eac : f003            >        beq skip1836
                       >        trap            ;failed not equal (non zero)
4eae : 202561          >        jsr report_error
                       >
4eb1 :                 >skip1836
                        
4eb1 : 8a                       txa
4eb2 : 990532                   sta abst,y  ;clear                
4eb5 : 88                       dey
4eb6 : 10ec                     bpl tstai1
                        
4eb8 : a299                     ldx #$99    ;protect x & y
4eba : a066                     ldy #$66
                                set_stat $ff  
                       >            load_flag $ff  
4ebc : a9ff            >            lda #$ff               ;allow test to change I-flag (no mask)
                       >
4ebe : 48              >            pha         ;use stack to load status
4ebf : 28              >            plp
                        
4ec0 : b26a                     lda (ind1)
4ec2 : 08                       php         ;test stores do not alter flags
4ec3 : 49c3                     eor #$c3
4ec5 : 28                       plp
4ec6 : 9276                     sta (indt)
4ec8 : 08                       php         ;flags after load/store sequence
4ec9 : 49c3                     eor #$c3
4ecb : c9c3                     cmp #$c3    ;test result
                                trap_ne
4ecd : f003            >        beq skip1840
                       >        trap            ;failed not equal (non zero)
4ecf : 202561          >        jsr report_error
                       >
4ed2 :                 >skip1840
                        
4ed2 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
4ed3 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
4ed5 : cd1532                   cmp fLDx    ;test flags
                                trap_ne
4ed8 : f003            >        beq skip1843
                       >        trap            ;failed not equal (non zero)
4eda : 202561          >        jsr report_error
                       >
4edd :                 >skip1843
                        
                                set_stat $ff
                       >            load_flag $ff
4edd : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4edf : 48              >            pha         ;use stack to load status
4ee0 : 28              >            plp
                        
4ee1 : b26c                     lda (ind1+2)
4ee3 : 08                       php         ;test stores do not alter flags
4ee4 : 49c3                     eor #$c3
4ee6 : 28                       plp
4ee7 : 9278                     sta (indt+2)
4ee9 : 08                       php         ;flags after load/store sequence
4eea : 49c3                     eor #$c3
4eec : c982                     cmp #$82    ;test result
                                trap_ne
4eee : f003            >        beq skip1847
                       >        trap            ;failed not equal (non zero)
4ef0 : 202561          >        jsr report_error
                       >
4ef3 :                 >skip1847
                        
4ef3 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
4ef4 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
4ef6 : cd1632                   cmp fLDx+1  ;test flags
                                trap_ne
4ef9 : f003            >        beq skip1850
                       >        trap            ;failed not equal (non zero)
4efb : 202561          >        jsr report_error
                       >
4efe :                 >skip1850
                        
                                set_stat $ff
                       >            load_flag $ff
4efe : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4f00 : 48              >            pha         ;use stack to load status
4f01 : 28              >            plp
                        
4f02 : b26e                     lda (ind1+4)
4f04 : 08                       php         ;test stores do not alter flags
4f05 : 49c3                     eor #$c3
4f07 : 28                       plp
4f08 : 927a                     sta (indt+4)
4f0a : 08                       php         ;flags after load/store sequence
4f0b : 49c3                     eor #$c3
4f0d : c941                     cmp #$41    ;test result
                                trap_ne
4f0f : f003            >        beq skip1854
                       >        trap            ;failed not equal (non zero)
4f11 : 202561          >        jsr report_error
                       >
4f14 :                 >skip1854
                        
4f14 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
4f15 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
4f17 : cd1732                   cmp fLDx+2  ;test flags
                                trap_ne
4f1a : f003            >        beq skip1857
                       >        trap            ;failed not equal (non zero)
4f1c : 202561          >        jsr report_error
                       >
4f1f :                 >skip1857
                        
                                set_stat $ff
                       >            load_flag $ff
4f1f : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4f21 : 48              >            pha         ;use stack to load status
4f22 : 28              >            plp
                        
4f23 : b270                     lda (ind1+6)
4f25 : 08                       php         ;test stores do not alter flags
4f26 : 49c3                     eor #$c3
4f28 : 28                       plp
4f29 : 927c                     sta (indt+6)
4f2b : 08                       php         ;flags after load/store sequence
4f2c : 49c3                     eor #$c3
4f2e : c900                     cmp #0      ;test result
                                trap_ne
4f30 : f003            >        beq skip1861
                       >        trap            ;failed not equal (non zero)
4f32 : 202561          >        jsr report_error
                       >
4f35 :                 >skip1861
                        
4f35 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
4f36 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
4f38 : cd1832                   cmp fLDx+3  ;test flags
                                trap_ne
4f3b : f003            >        beq skip1864
                       >        trap            ;failed not equal (non zero)
4f3d : 202561          >        jsr report_error
                       >
4f40 :                 >skip1864
                        
4f40 : e099                     cpx #$99
                                trap_ne     ;x altered during test
4f42 : f003            >        beq skip1866
                       >        trap            ;failed not equal (non zero)
4f44 : 202561          >        jsr report_error
                       >
4f47 :                 >skip1866
                        
4f47 : c066                     cpy #$66
                                trap_ne     ;y altered during test
4f49 : f003            >        beq skip1868
                       >        trap            ;failed not equal (non zero)
4f4b : 202561          >        jsr report_error
                       >
4f4e :                 >skip1868
                        
                        
4f4e : a003                     ldy #3      ;testing store result
4f50 : a200                     ldx #0
4f52 : b90532           tstai2  lda abst,y
4f55 : 49c3                     eor #$c3
4f57 : d91032                   cmp abs1,y
                                trap_ne     ;store to indirect data
4f5a : f003            >        beq skip1870
                       >        trap            ;failed not equal (non zero)
4f5c : 202561          >        jsr report_error
                       >
4f5f :                 >skip1870
                        
4f5f : 8a                       txa
4f60 : 990532                   sta abst,y  ;clear                
4f63 : 88                       dey
4f64 : 10ec                     bpl tstai2
4f66 : ba                       tsx
4f67 : e0ff                     cpx #$ff
                                trap_ne     ;sp push/pop mismatch
4f69 : f003            >        beq skip1872
                       >        trap            ;failed not equal (non zero)
4f6b : 202561          >        jsr report_error
                       >
4f6e :                 >skip1872
                        
                                next_test
4f6e : ad0232          >            lda test_case   ;previous test
4f71 : c90c            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
4f73 : f003            >        beq skip1875
                       >        trap            ;failed not equal (non zero)
4f75 : 202561          >        jsr report_error
                       >
4f78 :                 >skip1875
                       >
000d =                 >test_num = test_num + 1
4f78 : a90d            >            lda #test_num   ;*** next tests' number
4f7a : 8d0232          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; testing STZ - zp / abs / zp,x / abs,x
4f7d : a07b                     ldy #123    ;protect y
4f7f : a204                     ldx #4      ;precharge test area
4f81 : a907                     lda #7
4f83 : 9552             tstz1   sta zpt,x
4f85 : 0a                       asl a
4f86 : ca                       dex
4f87 : 10fa                     bpl tstz1
4f89 : a204                     ldx #4
                                set_a $55,$ff
                       >            load_flag $ff
4f8b : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4f8d : 48              >            pha         ;use stack to load status
4f8e : a955            >            lda #$55     ;precharge accu
4f90 : 28              >            plp
                        
4f91 : 6452                     stz zpt     
4f93 : 6453                     stz zpt+1
4f95 : 6454                     stz zpt+2
4f97 : 6455                     stz zpt+3
4f99 : 6456                     stz zpt+4
                                tst_a $55,$ff
4f9b : 08              >            php         ;save flags
4f9c : c955            >            cmp #$55     ;test result
                       >            trap_ne
4f9e : f003            >        beq skip1880
                       >        trap            ;failed not equal (non zero)
4fa0 : 202561          >        jsr report_error
                       >
4fa3 :                 >skip1880
                       >
4fa3 : 68              >            pla         ;load status
4fa4 : 48              >            pha
                       >            cmp_flag $ff
4fa5 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4fa7 : f003            >        beq skip1883
                       >        trap            ;failed not equal (non zero)
4fa9 : 202561          >        jsr report_error
                       >
4fac :                 >skip1883
                       >
4fac : 28              >            plp         ;restore status
                        
4fad : b552             tstz2   lda zpt,x   ;verify zeros stored
                                trap_ne     ;non zero after STZ zp
4faf : f003            >        beq skip1885
                       >        trap            ;failed not equal (non zero)
4fb1 : 202561          >        jsr report_error
                       >
4fb4 :                 >skip1885
                        
4fb4 : ca                       dex
4fb5 : 10f6                     bpl tstz2
4fb7 : a204                     ldx #4      ;precharge test area
4fb9 : a907                     lda #7
4fbb : 9552             tstz3   sta zpt,x
4fbd : 0a                       asl a
4fbe : ca                       dex
4fbf : 10fa                     bpl tstz3
4fc1 : a204                     ldx #4
                                set_a $aa,0
                       >            load_flag 0
4fc3 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4fc5 : 48              >            pha         ;use stack to load status
4fc6 : a9aa            >            lda #$aa     ;precharge accu
4fc8 : 28              >            plp
                        
4fc9 : 6452                     stz zpt     
4fcb : 6453                     stz zpt+1
4fcd : 6454                     stz zpt+2
4fcf : 6455                     stz zpt+3
4fd1 : 6456                     stz zpt+4
                                tst_a $aa,0
4fd3 : 08              >            php         ;save flags
4fd4 : c9aa            >            cmp #$aa     ;test result
                       >            trap_ne
4fd6 : f003            >        beq skip1890
                       >        trap            ;failed not equal (non zero)
4fd8 : 202561          >        jsr report_error
                       >
4fdb :                 >skip1890
                       >
4fdb : 68              >            pla         ;load status
4fdc : 48              >            pha
                       >            cmp_flag 0
4fdd : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4fdf : f003            >        beq skip1893
                       >        trap            ;failed not equal (non zero)
4fe1 : 202561          >        jsr report_error
                       >
4fe4 :                 >skip1893
                       >
4fe4 : 28              >            plp         ;restore status
                        
4fe5 : b552             tstz4   lda zpt,x   ;verify zeros stored
                                trap_ne     ;non zero after STZ zp
4fe7 : f003            >        beq skip1895
                       >        trap            ;failed not equal (non zero)
4fe9 : 202561          >        jsr report_error
                       >
4fec :                 >skip1895
                        
4fec : ca                       dex
4fed : 10f6                     bpl tstz4
                                
4fef : a204                     ldx #4      ;precharge test area
4ff1 : a907                     lda #7
4ff3 : 9d0532           tstz5   sta abst,x
4ff6 : 0a                       asl a
4ff7 : ca                       dex
4ff8 : 10f9                     bpl tstz5
4ffa : a204                     ldx #4
                                set_a $55,$ff
                       >            load_flag $ff
4ffc : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4ffe : 48              >            pha         ;use stack to load status
4fff : a955            >            lda #$55     ;precharge accu
5001 : 28              >            plp
                        
5002 : 9c0532                   stz abst     
5005 : 9c0632                   stz abst+1
5008 : 9c0732                   stz abst+2
500b : 9c0832                   stz abst+3
500e : 9c0932                   stz abst+4
                                tst_a $55,$ff
5011 : 08              >            php         ;save flags
5012 : c955            >            cmp #$55     ;test result
                       >            trap_ne
5014 : f003            >        beq skip1900
                       >        trap            ;failed not equal (non zero)
5016 : 202561          >        jsr report_error
                       >
5019 :                 >skip1900
                       >
5019 : 68              >            pla         ;load status
501a : 48              >            pha
                       >            cmp_flag $ff
501b : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
501d : f003            >        beq skip1903
                       >        trap            ;failed not equal (non zero)
501f : 202561          >        jsr report_error
                       >
5022 :                 >skip1903
                       >
5022 : 28              >            plp         ;restore status
                        
5023 : bd0532           tstz6   lda abst,x   ;verify zeros stored
                                trap_ne     ;non zero after STZ abs
5026 : f003            >        beq skip1905
                       >        trap            ;failed not equal (non zero)
5028 : 202561          >        jsr report_error
                       >
502b :                 >skip1905
                        
502b : ca                       dex
502c : 10f5                     bpl tstz6
502e : a204                     ldx #4      ;precharge test area
5030 : a907                     lda #7
5032 : 9d0532           tstz7   sta abst,x
5035 : 0a                       asl a
5036 : ca                       dex
5037 : 10f9                     bpl tstz7
5039 : a204                     ldx #4
                                set_a $aa,0
                       >            load_flag 0
503b : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
503d : 48              >            pha         ;use stack to load status
503e : a9aa            >            lda #$aa     ;precharge accu
5040 : 28              >            plp
                        
5041 : 9c0532                   stz abst     
5044 : 9c0632                   stz abst+1
5047 : 9c0732                   stz abst+2
504a : 9c0832                   stz abst+3
504d : 9c0932                   stz abst+4
                                tst_a $aa,0
5050 : 08              >            php         ;save flags
5051 : c9aa            >            cmp #$aa     ;test result
                       >            trap_ne
5053 : f003            >        beq skip1910
                       >        trap            ;failed not equal (non zero)
5055 : 202561          >        jsr report_error
                       >
5058 :                 >skip1910
                       >
5058 : 68              >            pla         ;load status
5059 : 48              >            pha
                       >            cmp_flag 0
505a : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
505c : f003            >        beq skip1913
                       >        trap            ;failed not equal (non zero)
505e : 202561          >        jsr report_error
                       >
5061 :                 >skip1913
                       >
5061 : 28              >            plp         ;restore status
                        
5062 : bd0532           tstz8   lda abst,x   ;verify zeros stored
                                trap_ne     ;non zero after STZ abs
5065 : f003            >        beq skip1915
                       >        trap            ;failed not equal (non zero)
5067 : 202561          >        jsr report_error
                       >
506a :                 >skip1915
                        
506a : ca                       dex
506b : 10f5                     bpl tstz8
                                
506d : a204                     ldx #4      ;precharge test area
506f : a907                     lda #7
5071 : 9552             tstz11  sta zpt,x
5073 : 0a                       asl a
5074 : ca                       dex
5075 : 10fa                     bpl tstz11
5077 : a204                     ldx #4
5079 :                  tstz15
                                set_a $55,$ff
                       >            load_flag $ff
5079 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
507b : 48              >            pha         ;use stack to load status
507c : a955            >            lda #$55     ;precharge accu
507e : 28              >            plp
                        
507f : 7452                     stz zpt,x     
                                tst_a $55,$ff
5081 : 08              >            php         ;save flags
5082 : c955            >            cmp #$55     ;test result
                       >            trap_ne
5084 : f003            >        beq skip1920
                       >        trap            ;failed not equal (non zero)
5086 : 202561          >        jsr report_error
                       >
5089 :                 >skip1920
                       >
5089 : 68              >            pla         ;load status
508a : 48              >            pha
                       >            cmp_flag $ff
508b : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
508d : f003            >        beq skip1923
                       >        trap            ;failed not equal (non zero)
508f : 202561          >        jsr report_error
                       >
5092 :                 >skip1923
                       >
5092 : 28              >            plp         ;restore status
                        
5093 : ca                       dex
5094 : 10e3                     bpl tstz15
5096 : a204                     ldx #4
5098 : b552             tstz12  lda zpt,x   ;verify zeros stored
                                trap_ne     ;non zero after STZ zp
509a : f003            >        beq skip1925
                       >        trap            ;failed not equal (non zero)
509c : 202561          >        jsr report_error
                       >
509f :                 >skip1925
                        
509f : ca                       dex
50a0 : 10f6                     bpl tstz12
50a2 : a204                     ldx #4      ;precharge test area
50a4 : a907                     lda #7
50a6 : 9552             tstz13  sta zpt,x
50a8 : 0a                       asl a
50a9 : ca                       dex
50aa : 10fa                     bpl tstz13
50ac : a204                     ldx #4
50ae :                  tstz16
                                set_a $aa,0
                       >            load_flag 0
50ae : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
50b0 : 48              >            pha         ;use stack to load status
50b1 : a9aa            >            lda #$aa     ;precharge accu
50b3 : 28              >            plp
                        
50b4 : 7452                     stz zpt,x
                                tst_a $aa,0
50b6 : 08              >            php         ;save flags
50b7 : c9aa            >            cmp #$aa     ;test result
                       >            trap_ne
50b9 : f003            >        beq skip1930
                       >        trap            ;failed not equal (non zero)
50bb : 202561          >        jsr report_error
                       >
50be :                 >skip1930
                       >
50be : 68              >            pla         ;load status
50bf : 48              >            pha
                       >            cmp_flag 0
50c0 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
50c2 : f003            >        beq skip1933
                       >        trap            ;failed not equal (non zero)
50c4 : 202561          >        jsr report_error
                       >
50c7 :                 >skip1933
                       >
50c7 : 28              >            plp         ;restore status
                        
50c8 : ca                       dex
50c9 : 10e3                     bpl tstz16
50cb : a204                     ldx #4
50cd : b552             tstz14  lda zpt,x   ;verify zeros stored
                                trap_ne     ;non zero after STZ zp
50cf : f003            >        beq skip1935
                       >        trap            ;failed not equal (non zero)
50d1 : 202561          >        jsr report_error
                       >
50d4 :                 >skip1935
                        
50d4 : ca                       dex
50d5 : 10f6                     bpl tstz14
                                
50d7 : a204                     ldx #4      ;precharge test area
50d9 : a907                     lda #7
50db : 9d0532           tstz21  sta abst,x
50de : 0a                       asl a
50df : ca                       dex
50e0 : 10f9                     bpl tstz21
50e2 : a204                     ldx #4
50e4 :                  tstz25
                                set_a $55,$ff
                       >            load_flag $ff
50e4 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
50e6 : 48              >            pha         ;use stack to load status
50e7 : a955            >            lda #$55     ;precharge accu
50e9 : 28              >            plp
                        
50ea : 9e0532                   stz abst,x     
                                tst_a $55,$ff
50ed : 08              >            php         ;save flags
50ee : c955            >            cmp #$55     ;test result
                       >            trap_ne
50f0 : f003            >        beq skip1940
                       >        trap            ;failed not equal (non zero)
50f2 : 202561          >        jsr report_error
                       >
50f5 :                 >skip1940
                       >
50f5 : 68              >            pla         ;load status
50f6 : 48              >            pha
                       >            cmp_flag $ff
50f7 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
50f9 : f003            >        beq skip1943
                       >        trap            ;failed not equal (non zero)
50fb : 202561          >        jsr report_error
                       >
50fe :                 >skip1943
                       >
50fe : 28              >            plp         ;restore status
                        
50ff : ca                       dex
5100 : 10e2                     bpl tstz25
5102 : a204                     ldx #4
5104 : bd0532           tstz22  lda abst,x   ;verify zeros stored
                                trap_ne     ;non zero after STZ zp
5107 : f003            >        beq skip1945
                       >        trap            ;failed not equal (non zero)
5109 : 202561          >        jsr report_error
                       >
510c :                 >skip1945
                        
510c : ca                       dex
510d : 10f5                     bpl tstz22
510f : a204                     ldx #4      ;precharge test area
5111 : a907                     lda #7
5113 : 9d0532           tstz23  sta abst,x
5116 : 0a                       asl a
5117 : ca                       dex
5118 : 10f9                     bpl tstz23
511a : a204                     ldx #4
511c :                  tstz26
                                set_a $aa,0
                       >            load_flag 0
511c : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
511e : 48              >            pha         ;use stack to load status
511f : a9aa            >            lda #$aa     ;precharge accu
5121 : 28              >            plp
                        
5122 : 9e0532                   stz abst,x
                                tst_a $aa,0
5125 : 08              >            php         ;save flags
5126 : c9aa            >            cmp #$aa     ;test result
                       >            trap_ne
5128 : f003            >        beq skip1950
                       >        trap            ;failed not equal (non zero)
512a : 202561          >        jsr report_error
                       >
512d :                 >skip1950
                       >
512d : 68              >            pla         ;load status
512e : 48              >            pha
                       >            cmp_flag 0
512f : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
5131 : f003            >        beq skip1953
                       >        trap            ;failed not equal (non zero)
5133 : 202561          >        jsr report_error
                       >
5136 :                 >skip1953
                       >
5136 : 28              >            plp         ;restore status
                        
5137 : ca                       dex
5138 : 10e2                     bpl tstz26
513a : a204                     ldx #4
513c : bd0532           tstz24  lda abst,x   ;verify zeros stored
                                trap_ne     ;non zero after STZ zp
513f : f003            >        beq skip1955
                       >        trap            ;failed not equal (non zero)
5141 : 202561          >        jsr report_error
                       >
5144 :                 >skip1955
                        
5144 : ca                       dex
5145 : 10f5                     bpl tstz24
                                
5147 : c07b                     cpy #123
                                trap_ne     ;y altered during test 
5149 : f003            >        beq skip1957
                       >        trap            ;failed not equal (non zero)
514b : 202561          >        jsr report_error
                       >
514e :                 >skip1957
                        
514e : ba                       tsx
514f : e0ff                     cpx #$ff
                                trap_ne     ;sp push/pop mismatch
5151 : f003            >        beq skip1959
                       >        trap            ;failed not equal (non zero)
5153 : 202561          >        jsr report_error
                       >
5156 :                 >skip1959
                        
                                next_test
5156 : ad0232          >            lda test_case   ;previous test
5159 : c90d            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
515b : f003            >        beq skip1962
                       >        trap            ;failed not equal (non zero)
515d : 202561          >        jsr report_error
                       >
5160 :                 >skip1962
                       >
000e =                 >test_num = test_num + 1
5160 : a90e            >            lda #test_num   ;*** next tests' number
5162 : 8d0232          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; testing BIT - zp,x / abs,x / #
5165 : a042                     ldy #$42
5167 : a203                     ldx #3
                                set_a $ff,0
                       >            load_flag 0
5169 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
516b : 48              >            pha         ;use stack to load status
516c : a9ff            >            lda #$ff     ;precharge accu
516e : 28              >            plp
                        
516f : 3459                     bit zp1,x   ;00 - should set Z / clear  NV
                                tst_a $ff,fz 
5171 : 08              >            php         ;save flags
5172 : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
5174 : f003            >        beq skip1967
                       >        trap            ;failed not equal (non zero)
5176 : 202561          >        jsr report_error
                       >
5179 :                 >skip1967
                       >
5179 : 68              >            pla         ;load status
517a : 48              >            pha
                       >            cmp_flag fz 
517b : c932            >            cmp #(fz |fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
517d : f003            >        beq skip1970
                       >        trap            ;failed not equal (non zero)
517f : 202561          >        jsr report_error
                       >
5182 :                 >skip1970
                       >
5182 : 28              >            plp         ;restore status
                        
5183 : ca                       dex
                                set_a 1,0
                       >            load_flag 0
5184 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
5186 : 48              >            pha         ;use stack to load status
5187 : a901            >            lda #1     ;precharge accu
5189 : 28              >            plp
                        
518a : 3459                     bit zp1,x   ;41 - should set V (M6) / clear NZ
                                tst_a 1,fv
518c : 08              >            php         ;save flags
518d : c901            >            cmp #1     ;test result
                       >            trap_ne
518f : f003            >        beq skip1975
                       >        trap            ;failed not equal (non zero)
5191 : 202561          >        jsr report_error
                       >
5194 :                 >skip1975
                       >
5194 : 68              >            pla         ;load status
5195 : 48              >            pha
                       >            cmp_flag fv
5196 : c970            >            cmp #(fv|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
5198 : f003            >        beq skip1978
                       >        trap            ;failed not equal (non zero)
519a : 202561          >        jsr report_error
                       >
519d :                 >skip1978
                       >
519d : 28              >            plp         ;restore status
                        
519e : ca                       dex
                                set_a 1,0
                       >            load_flag 0
519f : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
51a1 : 48              >            pha         ;use stack to load status
51a2 : a901            >            lda #1     ;precharge accu
51a4 : 28              >            plp
                        
51a5 : 3459                     bit zp1,x   ;82 - should set N (M7) & Z / clear V
                                tst_a 1,fnz
51a7 : 08              >            php         ;save flags
51a8 : c901            >            cmp #1     ;test result
                       >            trap_ne
51aa : f003            >        beq skip1983
                       >        trap            ;failed not equal (non zero)
51ac : 202561          >        jsr report_error
                       >
51af :                 >skip1983
                       >
51af : 68              >            pla         ;load status
51b0 : 48              >            pha
                       >            cmp_flag fnz
51b1 : c9b2            >            cmp #(fnz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
51b3 : f003            >        beq skip1986
                       >        trap            ;failed not equal (non zero)
51b5 : 202561          >        jsr report_error
                       >
51b8 :                 >skip1986
                       >
51b8 : 28              >            plp         ;restore status
                        
51b9 : ca                       dex
                                set_a 1,0
                       >            load_flag 0
51ba : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
51bc : 48              >            pha         ;use stack to load status
51bd : a901            >            lda #1     ;precharge accu
51bf : 28              >            plp
                        
51c0 : 3459                     bit zp1,x   ;c3 - should set N (M7) & V (M6) / clear Z
                                tst_a 1,fnv
51c2 : 08              >            php         ;save flags
51c3 : c901            >            cmp #1     ;test result
                       >            trap_ne
51c5 : f003            >        beq skip1991
                       >        trap            ;failed not equal (non zero)
51c7 : 202561          >        jsr report_error
                       >
51ca :                 >skip1991
                       >
51ca : 68              >            pla         ;load status
51cb : 48              >            pha
                       >            cmp_flag fnv
51cc : c9f0            >            cmp #(fnv|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
51ce : f003            >        beq skip1994
                       >        trap            ;failed not equal (non zero)
51d0 : 202561          >        jsr report_error
                       >
51d3 :                 >skip1994
                       >
51d3 : 28              >            plp         ;restore status
                        
                                
                                set_a 1,$ff
                       >            load_flag $ff
51d4 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
51d6 : 48              >            pha         ;use stack to load status
51d7 : a901            >            lda #1     ;precharge accu
51d9 : 28              >            plp
                        
51da : 3459                     bit zp1,x   ;c3 - should set N (M7) & V (M6) / clear Z
                                tst_a 1,~fz
51dc : 08              >            php         ;save flags
51dd : c901            >            cmp #1     ;test result
                       >            trap_ne
51df : f003            >        beq skip1999
                       >        trap            ;failed not equal (non zero)
51e1 : 202561          >        jsr report_error
                       >
51e4 :                 >skip1999
                       >
51e4 : 68              >            pla         ;load status
51e5 : 48              >            pha
                       >            cmp_flag ~fz
51e6 : c9fd            >            cmp #(~fz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
51e8 : f003            >        beq skip2002
                       >        trap            ;failed not equal (non zero)
51ea : 202561          >        jsr report_error
                       >
51ed :                 >skip2002
                       >
51ed : 28              >            plp         ;restore status
                        
51ee : e8                       inx
                                set_a 1,$ff
                       >            load_flag $ff
51ef : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
51f1 : 48              >            pha         ;use stack to load status
51f2 : a901            >            lda #1     ;precharge accu
51f4 : 28              >            plp
                        
51f5 : 3459                     bit zp1,x   ;82 - should set N (M7) & Z / clear V
                                tst_a 1,~fv
51f7 : 08              >            php         ;save flags
51f8 : c901            >            cmp #1     ;test result
                       >            trap_ne
51fa : f003            >        beq skip2007
                       >        trap            ;failed not equal (non zero)
51fc : 202561          >        jsr report_error
                       >
51ff :                 >skip2007
                       >
51ff : 68              >            pla         ;load status
5200 : 48              >            pha
                       >            cmp_flag ~fv
5201 : c9bf            >            cmp #(~fv|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
5203 : f003            >        beq skip2010
                       >        trap            ;failed not equal (non zero)
5205 : 202561          >        jsr report_error
                       >
5208 :                 >skip2010
                       >
5208 : 28              >            plp         ;restore status
                        
5209 : e8                       inx
                                set_a 1,$ff
                       >            load_flag $ff
520a : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
520c : 48              >            pha         ;use stack to load status
520d : a901            >            lda #1     ;precharge accu
520f : 28              >            plp
                        
5210 : 3459                     bit zp1,x   ;41 - should set V (M6) / clear NZ
                                tst_a 1,~fnz
5212 : 08              >            php         ;save flags
5213 : c901            >            cmp #1     ;test result
                       >            trap_ne
5215 : f003            >        beq skip2015
                       >        trap            ;failed not equal (non zero)
5217 : 202561          >        jsr report_error
                       >
521a :                 >skip2015
                       >
521a : 68              >            pla         ;load status
521b : 48              >            pha
                       >            cmp_flag ~fnz
521c : c97d            >            cmp #(~fnz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
521e : f003            >        beq skip2018
                       >        trap            ;failed not equal (non zero)
5220 : 202561          >        jsr report_error
                       >
5223 :                 >skip2018
                       >
5223 : 28              >            plp         ;restore status
                        
5224 : e8                       inx
                                set_a $ff,$ff
                       >            load_flag $ff
5225 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
5227 : 48              >            pha         ;use stack to load status
5228 : a9ff            >            lda #$ff     ;precharge accu
522a : 28              >            plp
                        
522b : 3459                     bit zp1,x   ;00 - should set Z / clear  NV
                                tst_a $ff,~fnv 
522d : 08              >            php         ;save flags
522e : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
5230 : f003            >        beq skip2023
                       >        trap            ;failed not equal (non zero)
5232 : 202561          >        jsr report_error
                       >
5235 :                 >skip2023
                       >
5235 : 68              >            pla         ;load status
5236 : 48              >            pha
                       >            cmp_flag ~fnv 
5237 : c93f            >            cmp #(~fnv |fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
5239 : f003            >        beq skip2026
                       >        trap            ;failed not equal (non zero)
523b : 202561          >        jsr report_error
                       >
523e :                 >skip2026
                       >
523e : 28              >            plp         ;restore status
                        
                                
                                set_a $ff,0
                       >            load_flag 0
523f : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
5241 : 48              >            pha         ;use stack to load status
5242 : a9ff            >            lda #$ff     ;precharge accu
5244 : 28              >            plp
                        
5245 : 3c1032                   bit abs1,x  ;00 - should set Z / clear  NV
                                tst_a $ff,fz 
5248 : 08              >            php         ;save flags
5249 : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
524b : f003            >        beq skip2031
                       >        trap            ;failed not equal (non zero)
524d : 202561          >        jsr report_error
                       >
5250 :                 >skip2031
                       >
5250 : 68              >            pla         ;load status
5251 : 48              >            pha
                       >            cmp_flag fz 
5252 : c932            >            cmp #(fz |fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
5254 : f003            >        beq skip2034
                       >        trap            ;failed not equal (non zero)
5256 : 202561          >        jsr report_error
                       >
5259 :                 >skip2034
                       >
5259 : 28              >            plp         ;restore status
                        
525a : ca                       dex
                                set_a 1,0
                       >            load_flag 0
525b : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
525d : 48              >            pha         ;use stack to load status
525e : a901            >            lda #1     ;precharge accu
5260 : 28              >            plp
                        
5261 : 3c1032                   bit abs1,x  ;41 - should set V (M6) / clear NZ
                                tst_a 1,fv
5264 : 08              >            php         ;save flags
5265 : c901            >            cmp #1     ;test result
                       >            trap_ne
5267 : f003            >        beq skip2039
                       >        trap            ;failed not equal (non zero)
5269 : 202561          >        jsr report_error
                       >
526c :                 >skip2039
                       >
526c : 68              >            pla         ;load status
526d : 48              >            pha
                       >            cmp_flag fv
526e : c970            >            cmp #(fv|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
5270 : f003            >        beq skip2042
                       >        trap            ;failed not equal (non zero)
5272 : 202561          >        jsr report_error
                       >
5275 :                 >skip2042
                       >
5275 : 28              >            plp         ;restore status
                        
5276 : ca                       dex
                                set_a 1,0
                       >            load_flag 0
5277 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
5279 : 48              >            pha         ;use stack to load status
527a : a901            >            lda #1     ;precharge accu
527c : 28              >            plp
                        
527d : 3c1032                   bit abs1,x  ;82 - should set N (M7) & Z / clear V
                                tst_a 1,fnz
5280 : 08              >            php         ;save flags
5281 : c901            >            cmp #1     ;test result
                       >            trap_ne
5283 : f003            >        beq skip2047
                       >        trap            ;failed not equal (non zero)
5285 : 202561          >        jsr report_error
                       >
5288 :                 >skip2047
                       >
5288 : 68              >            pla         ;load status
5289 : 48              >            pha
                       >            cmp_flag fnz
528a : c9b2            >            cmp #(fnz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
528c : f003            >        beq skip2050
                       >        trap            ;failed not equal (non zero)
528e : 202561          >        jsr report_error
                       >
5291 :                 >skip2050
                       >
5291 : 28              >            plp         ;restore status
                        
5292 : ca                       dex
                                set_a 1,0
                       >            load_flag 0
5293 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
5295 : 48              >            pha         ;use stack to load status
5296 : a901            >            lda #1     ;precharge accu
5298 : 28              >            plp
                        
5299 : 3c1032                   bit abs1,x  ;c3 - should set N (M7) & V (M6) / clear Z
                                tst_a 1,fnv
529c : 08              >            php         ;save flags
529d : c901            >            cmp #1     ;test result
                       >            trap_ne
529f : f003            >        beq skip2055
                       >        trap            ;failed not equal (non zero)
52a1 : 202561          >        jsr report_error
                       >
52a4 :                 >skip2055
                       >
52a4 : 68              >            pla         ;load status
52a5 : 48              >            pha
                       >            cmp_flag fnv
52a6 : c9f0            >            cmp #(fnv|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
52a8 : f003            >        beq skip2058
                       >        trap            ;failed not equal (non zero)
52aa : 202561          >        jsr report_error
                       >
52ad :                 >skip2058
                       >
52ad : 28              >            plp         ;restore status
                        
                                
                                set_a 1,$ff
                       >            load_flag $ff
52ae : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
52b0 : 48              >            pha         ;use stack to load status
52b1 : a901            >            lda #1     ;precharge accu
52b3 : 28              >            plp
                        
52b4 : 3c1032                   bit abs1,x  ;c3 - should set N (M7) & V (M6) / clear Z
                                tst_a 1,~fz
52b7 : 08              >            php         ;save flags
52b8 : c901            >            cmp #1     ;test result
                       >            trap_ne
52ba : f003            >        beq skip2063
                       >        trap            ;failed not equal (non zero)
52bc : 202561          >        jsr report_error
                       >
52bf :                 >skip2063
                       >
52bf : 68              >            pla         ;load status
52c0 : 48              >            pha
                       >            cmp_flag ~fz
52c1 : c9fd            >            cmp #(~fz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
52c3 : f003            >        beq skip2066
                       >        trap            ;failed not equal (non zero)
52c5 : 202561          >        jsr report_error
                       >
52c8 :                 >skip2066
                       >
52c8 : 28              >            plp         ;restore status
                        
52c9 : e8                       inx
                                set_a 1,$ff
                       >            load_flag $ff
52ca : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
52cc : 48              >            pha         ;use stack to load status
52cd : a901            >            lda #1     ;precharge accu
52cf : 28              >            plp
                        
52d0 : 3c1032                   bit abs1,x  ;82 - should set N (M7) & Z / clear V
                                tst_a 1,~fv
52d3 : 08              >            php         ;save flags
52d4 : c901            >            cmp #1     ;test result
                       >            trap_ne
52d6 : f003            >        beq skip2071
                       >        trap            ;failed not equal (non zero)
52d8 : 202561          >        jsr report_error
                       >
52db :                 >skip2071
                       >
52db : 68              >            pla         ;load status
52dc : 48              >            pha
                       >            cmp_flag ~fv
52dd : c9bf            >            cmp #(~fv|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
52df : f003            >        beq skip2074
                       >        trap            ;failed not equal (non zero)
52e1 : 202561          >        jsr report_error
                       >
52e4 :                 >skip2074
                       >
52e4 : 28              >            plp         ;restore status
                        
52e5 : e8                       inx
                                set_a 1,$ff
                       >            load_flag $ff
52e6 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
52e8 : 48              >            pha         ;use stack to load status
52e9 : a901            >            lda #1     ;precharge accu
52eb : 28              >            plp
                        
52ec : 3c1032                   bit abs1,x  ;41 - should set V (M6) / clear NZ
                                tst_a 1,~fnz
52ef : 08              >            php         ;save flags
52f0 : c901            >            cmp #1     ;test result
                       >            trap_ne
52f2 : f003            >        beq skip2079
                       >        trap            ;failed not equal (non zero)
52f4 : 202561          >        jsr report_error
                       >
52f7 :                 >skip2079
                       >
52f7 : 68              >            pla         ;load status
52f8 : 48              >            pha
                       >            cmp_flag ~fnz
52f9 : c97d            >            cmp #(~fnz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
52fb : f003            >        beq skip2082
                       >        trap            ;failed not equal (non zero)
52fd : 202561          >        jsr report_error
                       >
5300 :                 >skip2082
                       >
5300 : 28              >            plp         ;restore status
                        
5301 : e8                       inx
                                set_a $ff,$ff
                       >            load_flag $ff
5302 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
5304 : 48              >            pha         ;use stack to load status
5305 : a9ff            >            lda #$ff     ;precharge accu
5307 : 28              >            plp
                        
5308 : 3c1032                   bit abs1,x  ;00 - should set Z / clear  NV
                                tst_a $ff,~fnv 
530b : 08              >            php         ;save flags
530c : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
530e : f003            >        beq skip2087
                       >        trap            ;failed not equal (non zero)
5310 : 202561          >        jsr report_error
                       >
5313 :                 >skip2087
                       >
5313 : 68              >            pla         ;load status
5314 : 48              >            pha
                       >            cmp_flag ~fnv 
5315 : c93f            >            cmp #(~fnv |fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
5317 : f003            >        beq skip2090
                       >        trap            ;failed not equal (non zero)
5319 : 202561          >        jsr report_error
                       >
531c :                 >skip2090
                       >
531c : 28              >            plp         ;restore status
                        
                                
                                set_a $ff,0
                       >            load_flag 0
531d : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
531f : 48              >            pha         ;use stack to load status
5320 : a9ff            >            lda #$ff     ;precharge accu
5322 : 28              >            plp
                        
5323 : 8900                     bit #$00    ;00 - should set Z
                                tst_a $ff,fz 
5325 : 08              >            php         ;save flags
5326 : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
5328 : f003            >        beq skip2095
                       >        trap            ;failed not equal (non zero)
532a : 202561          >        jsr report_error
                       >
532d :                 >skip2095
                       >
532d : 68              >            pla         ;load status
532e : 48              >            pha
                       >            cmp_flag fz 
532f : c932            >            cmp #(fz |fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
5331 : f003            >        beq skip2098
                       >        trap            ;failed not equal (non zero)
5333 : 202561          >        jsr report_error
                       >
5336 :                 >skip2098
                       >
5336 : 28              >            plp         ;restore status
                        
5337 : ca                       dex
                                set_a 1,0
                       >            load_flag 0
5338 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
533a : 48              >            pha         ;use stack to load status
533b : a901            >            lda #1     ;precharge accu
533d : 28              >            plp
                        
533e : 8941                     bit #$41    ;41 - should clear Z
                                tst_a 1,0
5340 : 08              >            php         ;save flags
5341 : c901            >            cmp #1     ;test result
                       >            trap_ne
5343 : f003            >        beq skip2103
                       >        trap            ;failed not equal (non zero)
5345 : 202561          >        jsr report_error
                       >
5348 :                 >skip2103
                       >
5348 : 68              >            pla         ;load status
5349 : 48              >            pha
                       >            cmp_flag 0
534a : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
534c : f003            >        beq skip2106
                       >        trap            ;failed not equal (non zero)
534e : 202561          >        jsr report_error
                       >
5351 :                 >skip2106
                       >
5351 : 28              >            plp         ;restore status
                        
                        ; *** DEBUG INFO ***
                        ; if it fails the previous test and your BIT # has set the V flag
                        ; see http://forum.6502.org/viewtopic.php?f=2&t=2241&p=27243#p27239
                        ; why it shouldn't alter N or V flags on a BIT #
5352 : ca                       dex
                                set_a 1,0
                       >            load_flag 0
5353 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
5355 : 48              >            pha         ;use stack to load status
5356 : a901            >            lda #1     ;precharge accu
5358 : 28              >            plp
                        
5359 : 8982                     bit #$82    ;82 - should set Z
                                tst_a 1,fz
535b : 08              >            php         ;save flags
535c : c901            >            cmp #1     ;test result
                       >            trap_ne
535e : f003            >        beq skip2111
                       >        trap            ;failed not equal (non zero)
5360 : 202561          >        jsr report_error
                       >
5363 :                 >skip2111
                       >
5363 : 68              >            pla         ;load status
5364 : 48              >            pha
                       >            cmp_flag fz
5365 : c932            >            cmp #(fz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
5367 : f003            >        beq skip2114
                       >        trap            ;failed not equal (non zero)
5369 : 202561          >        jsr report_error
                       >
536c :                 >skip2114
                       >
536c : 28              >            plp         ;restore status
                        
536d : ca                       dex
                                set_a 1,0
                       >            load_flag 0
536e : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
5370 : 48              >            pha         ;use stack to load status
5371 : a901            >            lda #1     ;precharge accu
5373 : 28              >            plp
                        
5374 : 89c3                     bit #$c3    ;c3 - should clear Z
                                tst_a 1,0
5376 : 08              >            php         ;save flags
5377 : c901            >            cmp #1     ;test result
                       >            trap_ne
5379 : f003            >        beq skip2119
                       >        trap            ;failed not equal (non zero)
537b : 202561          >        jsr report_error
                       >
537e :                 >skip2119
                       >
537e : 68              >            pla         ;load status
537f : 48              >            pha
                       >            cmp_flag 0
5380 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
5382 : f003            >        beq skip2122
                       >        trap            ;failed not equal (non zero)
5384 : 202561          >        jsr report_error
                       >
5387 :                 >skip2122
                       >
5387 : 28              >            plp         ;restore status
                        
                                
                                set_a 1,$ff
                       >            load_flag $ff
5388 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
538a : 48              >            pha         ;use stack to load status
538b : a901            >            lda #1     ;precharge accu
538d : 28              >            plp
                        
538e : 89c3                     bit #$c3    ;c3 - clear Z
                                tst_a 1,~fz
5390 : 08              >            php         ;save flags
5391 : c901            >            cmp #1     ;test result
                       >            trap_ne
5393 : f003            >        beq skip2127
                       >        trap            ;failed not equal (non zero)
5395 : 202561          >        jsr report_error
                       >
5398 :                 >skip2127
                       >
5398 : 68              >            pla         ;load status
5399 : 48              >            pha
                       >            cmp_flag ~fz
539a : c9fd            >            cmp #(~fz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
539c : f003            >        beq skip2130
                       >        trap            ;failed not equal (non zero)
539e : 202561          >        jsr report_error
                       >
53a1 :                 >skip2130
                       >
53a1 : 28              >            plp         ;restore status
                        
53a2 : e8                       inx
                                set_a 1,$ff
                       >            load_flag $ff
53a3 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
53a5 : 48              >            pha         ;use stack to load status
53a6 : a901            >            lda #1     ;precharge accu
53a8 : 28              >            plp
                        
53a9 : 8982                     bit #$82    ;82 - should set Z
                                tst_a 1,$ff
53ab : 08              >            php         ;save flags
53ac : c901            >            cmp #1     ;test result
                       >            trap_ne
53ae : f003            >        beq skip2135
                       >        trap            ;failed not equal (non zero)
53b0 : 202561          >        jsr report_error
                       >
53b3 :                 >skip2135
                       >
53b3 : 68              >            pla         ;load status
53b4 : 48              >            pha
                       >            cmp_flag $ff
53b5 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
53b7 : f003            >        beq skip2138
                       >        trap            ;failed not equal (non zero)
53b9 : 202561          >        jsr report_error
                       >
53bc :                 >skip2138
                       >
53bc : 28              >            plp         ;restore status
                        
53bd : e8                       inx
                                set_a 1,$ff
                       >            load_flag $ff
53be : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
53c0 : 48              >            pha         ;use stack to load status
53c1 : a901            >            lda #1     ;precharge accu
53c3 : 28              >            plp
                        
53c4 : 8941                     bit #$41    ;41 - should clear Z
                                tst_a 1,~fz
53c6 : 08              >            php         ;save flags
53c7 : c901            >            cmp #1     ;test result
                       >            trap_ne
53c9 : f003            >        beq skip2143
                       >        trap            ;failed not equal (non zero)
53cb : 202561          >        jsr report_error
                       >
53ce :                 >skip2143
                       >
53ce : 68              >            pla         ;load status
53cf : 48              >            pha
                       >            cmp_flag ~fz
53d0 : c9fd            >            cmp #(~fz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
53d2 : f003            >        beq skip2146
                       >        trap            ;failed not equal (non zero)
53d4 : 202561          >        jsr report_error
                       >
53d7 :                 >skip2146
                       >
53d7 : 28              >            plp         ;restore status
                        
53d8 : e8                       inx
                                set_a $ff,$ff
                       >            load_flag $ff
53d9 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
53db : 48              >            pha         ;use stack to load status
53dc : a9ff            >            lda #$ff     ;precharge accu
53de : 28              >            plp
                        
53df : 8900                     bit #$00   ;00 - should set Z
                                tst_a $ff,$ff
53e1 : 08              >            php         ;save flags
53e2 : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
53e4 : f003            >        beq skip2151
                       >        trap            ;failed not equal (non zero)
53e6 : 202561          >        jsr report_error
                       >
53e9 :                 >skip2151
                       >
53e9 : 68              >            pla         ;load status
53ea : 48              >            pha
                       >            cmp_flag $ff
53eb : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
53ed : f003            >        beq skip2154
                       >        trap            ;failed not equal (non zero)
53ef : 202561          >        jsr report_error
                       >
53f2 :                 >skip2154
                       >
53f2 : 28              >            plp         ;restore status
                        
                                
53f3 : e003                     cpx #3
                                trap_ne     ;x altered during test
53f5 : f003            >        beq skip2156
                       >        trap            ;failed not equal (non zero)
53f7 : 202561          >        jsr report_error
                       >
53fa :                 >skip2156
                        
53fa : c042                     cpy #$42
                                trap_ne     ;y altered during test 
53fc : f003            >        beq skip2158
                       >        trap            ;failed not equal (non zero)
53fe : 202561          >        jsr report_error
                       >
5401 :                 >skip2158
                        
5401 : ba                       tsx
5402 : e0ff                     cpx #$ff
                                trap_ne     ;sp push/pop mismatch
5404 : f003            >        beq skip2160
                       >        trap            ;failed not equal (non zero)
5406 : 202561          >        jsr report_error
                       >
5409 :                 >skip2160
                        
                                next_test
5409 : ad0232          >            lda test_case   ;previous test
540c : c90e            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
540e : f003            >        beq skip2163
                       >        trap            ;failed not equal (non zero)
5410 : 202561          >        jsr report_error
                       >
5413 :                 >skip2163
                       >
000f =                 >test_num = test_num + 1
5413 : a90f            >            lda #test_num   ;*** next tests' number
5415 : 8d0232          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; testing TRB, TSB - zp / abs
                        
                        trbt    macro       ;\1 = memory, \2 = flags   
                                sty \1
                                load_flag \2
                                pha
                                lda zpt+1
                                plp
                                trb \1
                                php
                                cmp zpt+1
                                trap_ne     ;accu was changed
                                pla
                                pha
                                ora #fz     ;mask Z
                                cmp_flag \2|fz
                                trap_ne     ;flags changed except Z
                                pla
                                and #fz
                                cmp zpt+2
                                trap_ne     ;Z flag invalid
                                lda zpt+3
                                cmp zpt
                                trap_ne     ;altered bits in memory wrong       
                                endm
                        
                        tsbt    macro       ;\1 = memory, \2 = flags   
                                sty \1
                                load_flag \2
                                pha
                                lda zpt+1
                                plp
                                tsb \1
                                php
                                cmp zpt+1
                                trap_ne     ;accu was changed
                                pla
                                pha
                                ora #fz     ;mask Z
                                cmp_flag \2|fz
                                trap_ne     ;flags changed except Z
                                pla
                                and #fz
                                cmp zpt+2
                                trap_ne     ;Z flag invalid
                                lda zpt+4
                                cmp zpt
                                trap_ne     ;altered bits in memory wrong        
                                endm
                        
5418 : a2c0                     ldx #$c0
541a : a000                     ldy #0      ;op1 - memory save
                                ;   zpt     ;op1 - memory modifiable
541c : 6453                     stz zpt+1   ;op2 - accu
                                ;   zpt+2   ;and flags
                                ;   zpt+3   ;memory after reset
                                ;   zpt+4   ;memory after set
                                
541e : 98               tbt1    tya
541f : 2553                     and zpt+1   ;set Z by anding the 2 operands
5421 : 08                       php
5422 : 68                       pla
5423 : 2902                     and #fz     ;mask Z
5425 : 8554                     sta zpt+2
5427 : 98                       tya         ;reset op1 bits by op2
5428 : 49ff                     eor #$ff
542a : 0553                     ora zpt+1
542c : 49ff                     eor #$ff
542e : 8555                     sta zpt+3
5430 : 98                       tya         ;set op1 bits by op2
5431 : 0553                     ora zpt+1
5433 : 8556                     sta zpt+4
                        
                                trbt zpt,$ff
5435 : 8452            >        sty zpt
                       >        load_flag $ff
5437 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
5439 : 48              >        pha
543a : a553            >        lda zpt+1
543c : 28              >        plp
543d : 1452            >        trb zpt
543f : 08              >        php
5440 : c553            >        cmp zpt+1
                       >        trap_ne     ;accu was changed
5442 : f003            >        beq skip2167
                       >        trap            ;failed not equal (non zero)
5444 : 202561          >        jsr report_error
                       >
5447 :                 >skip2167
                       >
5447 : 68              >        pla
5448 : 48              >        pha
5449 : 0902            >        ora #fz     ;mask Z
                       >        cmp_flag $ff|fz
544b : c9ff            >            cmp #($ff|fz|fao)&m8    ;expected flags + always on bits
                       >
                       >        trap_ne     ;flags changed except Z
544d : f003            >        beq skip2170
                       >        trap            ;failed not equal (non zero)
544f : 202561          >        jsr report_error
                       >
5452 :                 >skip2170
                       >
5452 : 68              >        pla
5453 : 2902            >        and #fz
5455 : c554            >        cmp zpt+2
                       >        trap_ne     ;Z flag invalid
5457 : f003            >        beq skip2172
                       >        trap            ;failed not equal (non zero)
5459 : 202561          >        jsr report_error
                       >
545c :                 >skip2172
                       >
545c : a555            >        lda zpt+3
545e : c552            >        cmp zpt
                       >        trap_ne     ;altered bits in memory wrong       
5460 : f003            >        beq skip2174
                       >        trap            ;failed not equal (non zero)
5462 : 202561          >        jsr report_error
                       >
5465 :                 >skip2174
                       >
                        
                                trbt abst,$ff
5465 : 8c0532          >        sty abst
                       >        load_flag $ff
5468 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
546a : 48              >        pha
546b : a553            >        lda zpt+1
546d : 28              >        plp
546e : 1c0532          >        trb abst
5471 : 08              >        php
5472 : c553            >        cmp zpt+1
                       >        trap_ne     ;accu was changed
5474 : f003            >        beq skip2178
                       >        trap            ;failed not equal (non zero)
5476 : 202561          >        jsr report_error
                       >
5479 :                 >skip2178
                       >
5479 : 68              >        pla
547a : 48              >        pha
547b : 0902            >        ora #fz     ;mask Z
                       >        cmp_flag $ff|fz
547d : c9ff            >            cmp #($ff|fz|fao)&m8    ;expected flags + always on bits
                       >
                       >        trap_ne     ;flags changed except Z
547f : f003            >        beq skip2181
                       >        trap            ;failed not equal (non zero)
5481 : 202561          >        jsr report_error
                       >
5484 :                 >skip2181
                       >
5484 : 68              >        pla
5485 : 2902            >        and #fz
5487 : c554            >        cmp zpt+2
                       >        trap_ne     ;Z flag invalid
5489 : f003            >        beq skip2183
                       >        trap            ;failed not equal (non zero)
548b : 202561          >        jsr report_error
                       >
548e :                 >skip2183
                       >
548e : a555            >        lda zpt+3
5490 : c552            >        cmp zpt
                       >        trap_ne     ;altered bits in memory wrong       
5492 : f003            >        beq skip2185
                       >        trap            ;failed not equal (non zero)
5494 : 202561          >        jsr report_error
                       >
5497 :                 >skip2185
                       >
                        
                                trbt zpt,0
5497 : 8452            >        sty zpt
                       >        load_flag 0
5499 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
549b : 48              >        pha
549c : a553            >        lda zpt+1
549e : 28              >        plp
549f : 1452            >        trb zpt
54a1 : 08              >        php
54a2 : c553            >        cmp zpt+1
                       >        trap_ne     ;accu was changed
54a4 : f003            >        beq skip2189
                       >        trap            ;failed not equal (non zero)
54a6 : 202561          >        jsr report_error
                       >
54a9 :                 >skip2189
                       >
54a9 : 68              >        pla
54aa : 48              >        pha
54ab : 0902            >        ora #fz     ;mask Z
                       >        cmp_flag 0|fz
54ad : c932            >            cmp #(0|fz|fao)&m8    ;expected flags + always on bits
                       >
                       >        trap_ne     ;flags changed except Z
54af : f003            >        beq skip2192
                       >        trap            ;failed not equal (non zero)
54b1 : 202561          >        jsr report_error
                       >
54b4 :                 >skip2192
                       >
54b4 : 68              >        pla
54b5 : 2902            >        and #fz
54b7 : c554            >        cmp zpt+2
                       >        trap_ne     ;Z flag invalid
54b9 : f003            >        beq skip2194
                       >        trap            ;failed not equal (non zero)
54bb : 202561          >        jsr report_error
                       >
54be :                 >skip2194
                       >
54be : a555            >        lda zpt+3
54c0 : c552            >        cmp zpt
                       >        trap_ne     ;altered bits in memory wrong       
54c2 : f003            >        beq skip2196
                       >        trap            ;failed not equal (non zero)
54c4 : 202561          >        jsr report_error
                       >
54c7 :                 >skip2196
                       >
                        
                                trbt abst,0
54c7 : 8c0532          >        sty abst
                       >        load_flag 0
54ca : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
54cc : 48              >        pha
54cd : a553            >        lda zpt+1
54cf : 28              >        plp
54d0 : 1c0532          >        trb abst
54d3 : 08              >        php
54d4 : c553            >        cmp zpt+1
                       >        trap_ne     ;accu was changed
54d6 : f003            >        beq skip2200
                       >        trap            ;failed not equal (non zero)
54d8 : 202561          >        jsr report_error
                       >
54db :                 >skip2200
                       >
54db : 68              >        pla
54dc : 48              >        pha
54dd : 0902            >        ora #fz     ;mask Z
                       >        cmp_flag 0|fz
54df : c932            >            cmp #(0|fz|fao)&m8    ;expected flags + always on bits
                       >
                       >        trap_ne     ;flags changed except Z
54e1 : f003            >        beq skip2203
                       >        trap            ;failed not equal (non zero)
54e3 : 202561          >        jsr report_error
                       >
54e6 :                 >skip2203
                       >
54e6 : 68              >        pla
54e7 : 2902            >        and #fz
54e9 : c554            >        cmp zpt+2
                       >        trap_ne     ;Z flag invalid
54eb : f003            >        beq skip2205
                       >        trap            ;failed not equal (non zero)
54ed : 202561          >        jsr report_error
                       >
54f0 :                 >skip2205
                       >
54f0 : a555            >        lda zpt+3
54f2 : c552            >        cmp zpt
                       >        trap_ne     ;altered bits in memory wrong       
54f4 : f003            >        beq skip2207
                       >        trap            ;failed not equal (non zero)
54f6 : 202561          >        jsr report_error
                       >
54f9 :                 >skip2207
                       >
                        
                                tsbt zpt,$ff
54f9 : 8452            >        sty zpt
                       >        load_flag $ff
54fb : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
54fd : 48              >        pha
54fe : a553            >        lda zpt+1
5500 : 28              >        plp
5501 : 0452            >        tsb zpt
5503 : 08              >        php
5504 : c553            >        cmp zpt+1
                       >        trap_ne     ;accu was changed
5506 : f003            >        beq skip2211
                       >        trap            ;failed not equal (non zero)
5508 : 202561          >        jsr report_error
                       >
550b :                 >skip2211
                       >
550b : 68              >        pla
550c : 48              >        pha
550d : 0902            >        ora #fz     ;mask Z
                       >        cmp_flag $ff|fz
550f : c9ff            >            cmp #($ff|fz|fao)&m8    ;expected flags + always on bits
                       >
                       >        trap_ne     ;flags changed except Z
5511 : f003            >        beq skip2214
                       >        trap            ;failed not equal (non zero)
5513 : 202561          >        jsr report_error
                       >
5516 :                 >skip2214
                       >
5516 : 68              >        pla
5517 : 2902            >        and #fz
5519 : c554            >        cmp zpt+2
                       >        trap_ne     ;Z flag invalid
551b : f003            >        beq skip2216
                       >        trap            ;failed not equal (non zero)
551d : 202561          >        jsr report_error
                       >
5520 :                 >skip2216
                       >
5520 : a556            >        lda zpt+4
5522 : c552            >        cmp zpt
                       >        trap_ne     ;altered bits in memory wrong        
5524 : f003            >        beq skip2218
                       >        trap            ;failed not equal (non zero)
5526 : 202561          >        jsr report_error
                       >
5529 :                 >skip2218
                       >
                        
                                tsbt abst,$ff
5529 : 8c0532          >        sty abst
                       >        load_flag $ff
552c : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
552e : 48              >        pha
552f : a553            >        lda zpt+1
5531 : 28              >        plp
5532 : 0c0532          >        tsb abst
5535 : 08              >        php
5536 : c553            >        cmp zpt+1
                       >        trap_ne     ;accu was changed
5538 : f003            >        beq skip2222
                       >        trap            ;failed not equal (non zero)
553a : 202561          >        jsr report_error
                       >
553d :                 >skip2222
                       >
553d : 68              >        pla
553e : 48              >        pha
553f : 0902            >        ora #fz     ;mask Z
                       >        cmp_flag $ff|fz
5541 : c9ff            >            cmp #($ff|fz|fao)&m8    ;expected flags + always on bits
                       >
                       >        trap_ne     ;flags changed except Z
5543 : f003            >        beq skip2225
                       >        trap            ;failed not equal (non zero)
5545 : 202561          >        jsr report_error
                       >
5548 :                 >skip2225
                       >
5548 : 68              >        pla
5549 : 2902            >        and #fz
554b : c554            >        cmp zpt+2
                       >        trap_ne     ;Z flag invalid
554d : f003            >        beq skip2227
                       >        trap            ;failed not equal (non zero)
554f : 202561          >        jsr report_error
                       >
5552 :                 >skip2227
                       >
5552 : a556            >        lda zpt+4
5554 : c552            >        cmp zpt
                       >        trap_ne     ;altered bits in memory wrong        
5556 : f003            >        beq skip2229
                       >        trap            ;failed not equal (non zero)
5558 : 202561          >        jsr report_error
                       >
555b :                 >skip2229
                       >
                        
                                tsbt zpt,0
555b : 8452            >        sty zpt
                       >        load_flag 0
555d : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
555f : 48              >        pha
5560 : a553            >        lda zpt+1
5562 : 28              >        plp
5563 : 0452            >        tsb zpt
5565 : 08              >        php
5566 : c553            >        cmp zpt+1
                       >        trap_ne     ;accu was changed
5568 : f003            >        beq skip2233
                       >        trap            ;failed not equal (non zero)
556a : 202561          >        jsr report_error
                       >
556d :                 >skip2233
                       >
556d : 68              >        pla
556e : 48              >        pha
556f : 0902            >        ora #fz     ;mask Z
                       >        cmp_flag 0|fz
5571 : c932            >            cmp #(0|fz|fao)&m8    ;expected flags + always on bits
                       >
                       >        trap_ne     ;flags changed except Z
5573 : f003            >        beq skip2236
                       >        trap            ;failed not equal (non zero)
5575 : 202561          >        jsr report_error
                       >
5578 :                 >skip2236
                       >
5578 : 68              >        pla
5579 : 2902            >        and #fz
557b : c554            >        cmp zpt+2
                       >        trap_ne     ;Z flag invalid
557d : f003            >        beq skip2238
                       >        trap            ;failed not equal (non zero)
557f : 202561          >        jsr report_error
                       >
5582 :                 >skip2238
                       >
5582 : a556            >        lda zpt+4
5584 : c552            >        cmp zpt
                       >        trap_ne     ;altered bits in memory wrong        
5586 : f003            >        beq skip2240
                       >        trap            ;failed not equal (non zero)
5588 : 202561          >        jsr report_error
                       >
558b :                 >skip2240
                       >
                        
                                tsbt abst,0
558b : 8c0532          >        sty abst
                       >        load_flag 0
558e : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
5590 : 48              >        pha
5591 : a553            >        lda zpt+1
5593 : 28              >        plp
5594 : 0c0532          >        tsb abst
5597 : 08              >        php
5598 : c553            >        cmp zpt+1
                       >        trap_ne     ;accu was changed
559a : f003            >        beq skip2244
                       >        trap            ;failed not equal (non zero)
559c : 202561          >        jsr report_error
                       >
559f :                 >skip2244
                       >
559f : 68              >        pla
55a0 : 48              >        pha
55a1 : 0902            >        ora #fz     ;mask Z
                       >        cmp_flag 0|fz
55a3 : c932            >            cmp #(0|fz|fao)&m8    ;expected flags + always on bits
                       >
                       >        trap_ne     ;flags changed except Z
55a5 : f003            >        beq skip2247
                       >        trap            ;failed not equal (non zero)
55a7 : 202561          >        jsr report_error
                       >
55aa :                 >skip2247
                       >
55aa : 68              >        pla
55ab : 2902            >        and #fz
55ad : c554            >        cmp zpt+2
                       >        trap_ne     ;Z flag invalid
55af : f003            >        beq skip2249
                       >        trap            ;failed not equal (non zero)
55b1 : 202561          >        jsr report_error
                       >
55b4 :                 >skip2249
                       >
55b4 : a556            >        lda zpt+4
55b6 : c552            >        cmp zpt
                       >        trap_ne     ;altered bits in memory wrong        
55b8 : f003            >        beq skip2251
                       >        trap            ;failed not equal (non zero)
55ba : 202561          >        jsr report_error
                       >
55bd :                 >skip2251
                       >
                        
                                
55bd : c8                       iny         ;iterate op1
55be : d004                     bne tbt3
55c0 : e653                     inc zpt+1   ;iterate op2
55c2 : f003                     beq tbt2
55c4 : 4c1e54           tbt3    jmp tbt1        
55c7 :                  tbt2
55c7 : e0c0                     cpx #$c0
                                trap_ne     ;x altered during test
55c9 : f003            >        beq skip2253
                       >        trap            ;failed not equal (non zero)
55cb : 202561          >        jsr report_error
                       >
55ce :                 >skip2253
                        
55ce : ba                       tsx
55cf : e0ff                     cpx #$ff
                                trap_ne     ;sp push/pop mismatch
55d1 : f003            >        beq skip2255
                       >        trap            ;failed not equal (non zero)
55d3 : 202561          >        jsr report_error
                       >
55d6 :                 >skip2255
                        
                                next_test    
55d6 : ad0232          >            lda test_case   ;previous test
55d9 : c90f            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
55db : f003            >        beq skip2258
                       >        trap            ;failed not equal (non zero)
55dd : 202561          >        jsr report_error
                       >
55e0 :                 >skip2258
                       >
0010 =                 >test_num = test_num + 1
55e0 : a910            >            lda #test_num   ;*** next tests' number
55e2 : 8d0232          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                            if rkwl_wdc_op = 1
                        ; testing RMB, SMB - zp
                        rmbt    macro       ;\1 = bitnum
                                lda #$ff
                                sta zpt
                                set_a $a5,0
                                rmb \1,zpt
                                tst_a $a5,0
                                lda zpt
                                cmp #$ff-(1<<\1)
                                trap_ne     ;wrong bits set or cleared
                                lda #1<<\1
                                sta zpt
                                set_a $5a,$ff
                                rmb \1,zpt
                                tst_a $5a,$ff
                                lda zpt
                                trap_ne     ;wrong bits set or cleared
                                endm
                        smbt    macro       ;\1 = bitnum
                                lda #$ff-(1<<\1)
                                sta zpt
                                set_a $a5,0
                                smb \1,zpt
                                tst_a $a5,0
                                lda zpt
                                cmp #$ff
                                trap_ne     ;wrong bits set or cleared
                                lda #0
                                sta zpt
                                set_a $5a,$ff
                                smb \1,zpt
                                tst_a $5a,$ff
                                lda zpt
                                cmp #1<<\1
                                trap_ne     ;wrong bits set or cleared
                                endm
                        
55e5 : a2ba                     ldx #$ba    ;protect x & y
55e7 : a0d0                     ldy #$d0
                                rmbt 0
55e9 : a9ff            >        lda #$ff
55eb : 8552            >        sta zpt
                       >        set_a $a5,0
                       >            load_flag 0
55ed : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
55ef : 48              >            pha         ;use stack to load status
55f0 : a9a5            >            lda #$a5     ;precharge accu
55f2 : 28              >            plp
                       >
55f3 : 0752            >        rmb 0,zpt
                       >        tst_a $a5,0
55f5 : 08              >            php         ;save flags
55f6 : c9a5            >            cmp #$a5     ;test result
                       >            trap_ne
55f8 : f003            >        beq skip2264
                       >        trap            ;failed not equal (non zero)
55fa : 202561          >        jsr report_error
                       >
55fd :                 >skip2264
                       >
55fd : 68              >            pla         ;load status
55fe : 48              >            pha
                       >            cmp_flag 0
55ff : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
5601 : f003            >        beq skip2267
                       >        trap            ;failed not equal (non zero)
5603 : 202561          >        jsr report_error
                       >
5606 :                 >skip2267
                       >
5606 : 28              >            plp         ;restore status
                       >
5607 : a552            >        lda zpt
5609 : c9fe            >        cmp #$ff-(1<<0)
                       >        trap_ne     ;wrong bits set or cleared
560b : f003            >        beq skip2269
                       >        trap            ;failed not equal (non zero)
560d : 202561          >        jsr report_error
                       >
5610 :                 >skip2269
                       >
5610 : a901            >        lda #1<<0
5612 : 8552            >        sta zpt
                       >        set_a $5a,$ff
                       >            load_flag $ff
5614 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
5616 : 48              >            pha         ;use stack to load status
5617 : a95a            >            lda #$5a     ;precharge accu
5619 : 28              >            plp
                       >
561a : 0752            >        rmb 0,zpt
                       >        tst_a $5a,$ff
561c : 08              >            php         ;save flags
561d : c95a            >            cmp #$5a     ;test result
                       >            trap_ne
561f : f003            >        beq skip2274
                       >        trap            ;failed not equal (non zero)
5621 : 202561          >        jsr report_error
                       >
5624 :                 >skip2274
                       >
5624 : 68              >            pla         ;load status
5625 : 48              >            pha
                       >            cmp_flag $ff
5626 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
5628 : f003            >        beq skip2277
                       >        trap            ;failed not equal (non zero)
562a : 202561          >        jsr report_error
                       >
562d :                 >skip2277
                       >
562d : 28              >            plp         ;restore status
                       >
562e : a552            >        lda zpt
                       >        trap_ne     ;wrong bits set or cleared
5630 : f003            >        beq skip2279
                       >        trap            ;failed not equal (non zero)
5632 : 202561          >        jsr report_error
                       >
5635 :                 >skip2279
                       >
                        
                                rmbt 1
5635 : a9ff            >        lda #$ff
5637 : 8552            >        sta zpt
                       >        set_a $a5,0
                       >            load_flag 0
5639 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
563b : 48              >            pha         ;use stack to load status
563c : a9a5            >            lda #$a5     ;precharge accu
563e : 28              >            plp
                       >
563f : 1752            >        rmb 1,zpt
                       >        tst_a $a5,0
5641 : 08              >            php         ;save flags
5642 : c9a5            >            cmp #$a5     ;test result
                       >            trap_ne
5644 : f003            >        beq skip2285
                       >        trap            ;failed not equal (non zero)
5646 : 202561          >        jsr report_error
                       >
5649 :                 >skip2285
                       >
5649 : 68              >            pla         ;load status
564a : 48              >            pha
                       >            cmp_flag 0
564b : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
564d : f003            >        beq skip2288
                       >        trap            ;failed not equal (non zero)
564f : 202561          >        jsr report_error
                       >
5652 :                 >skip2288
                       >
5652 : 28              >            plp         ;restore status
                       >
5653 : a552            >        lda zpt
5655 : c9fd            >        cmp #$ff-(1<<1)
                       >        trap_ne     ;wrong bits set or cleared
5657 : f003            >        beq skip2290
                       >        trap            ;failed not equal (non zero)
5659 : 202561          >        jsr report_error
                       >
565c :                 >skip2290
                       >
565c : a902            >        lda #1<<1
565e : 8552            >        sta zpt
                       >        set_a $5a,$ff
                       >            load_flag $ff
5660 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
5662 : 48              >            pha         ;use stack to load status
5663 : a95a            >            lda #$5a     ;precharge accu
5665 : 28              >            plp
                       >
5666 : 1752            >        rmb 1,zpt
                       >        tst_a $5a,$ff
5668 : 08              >            php         ;save flags
5669 : c95a            >            cmp #$5a     ;test result
                       >            trap_ne
566b : f003            >        beq skip2295
                       >        trap            ;failed not equal (non zero)
566d : 202561          >        jsr report_error
                       >
5670 :                 >skip2295
                       >
5670 : 68              >            pla         ;load status
5671 : 48              >            pha
                       >            cmp_flag $ff
5672 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
5674 : f003            >        beq skip2298
                       >        trap            ;failed not equal (non zero)
5676 : 202561          >        jsr report_error
                       >
5679 :                 >skip2298
                       >
5679 : 28              >            plp         ;restore status
                       >
567a : a552            >        lda zpt
                       >        trap_ne     ;wrong bits set or cleared
567c : f003            >        beq skip2300
                       >        trap            ;failed not equal (non zero)
567e : 202561          >        jsr report_error
                       >
5681 :                 >skip2300
                       >
                        
                                rmbt 2
5681 : a9ff            >        lda #$ff
5683 : 8552            >        sta zpt
                       >        set_a $a5,0
                       >            load_flag 0
5685 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
5687 : 48              >            pha         ;use stack to load status
5688 : a9a5            >            lda #$a5     ;precharge accu
568a : 28              >            plp
                       >
568b : 2752            >        rmb 2,zpt
                       >        tst_a $a5,0
568d : 08              >            php         ;save flags
568e : c9a5            >            cmp #$a5     ;test result
                       >            trap_ne
5690 : f003            >        beq skip2306
                       >        trap            ;failed not equal (non zero)
5692 : 202561          >        jsr report_error
                       >
5695 :                 >skip2306
                       >
5695 : 68              >            pla         ;load status
5696 : 48              >            pha
                       >            cmp_flag 0
5697 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
5699 : f003            >        beq skip2309
                       >        trap            ;failed not equal (non zero)
569b : 202561          >        jsr report_error
                       >
569e :                 >skip2309
                       >
569e : 28              >            plp         ;restore status
                       >
569f : a552            >        lda zpt
56a1 : c9fb            >        cmp #$ff-(1<<2)
                       >        trap_ne     ;wrong bits set or cleared
56a3 : f003            >        beq skip2311
                       >        trap            ;failed not equal (non zero)
56a5 : 202561          >        jsr report_error
                       >
56a8 :                 >skip2311
                       >
56a8 : a904            >        lda #1<<2
56aa : 8552            >        sta zpt
                       >        set_a $5a,$ff
                       >            load_flag $ff
56ac : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
56ae : 48              >            pha         ;use stack to load status
56af : a95a            >            lda #$5a     ;precharge accu
56b1 : 28              >            plp
                       >
56b2 : 2752            >        rmb 2,zpt
                       >        tst_a $5a,$ff
56b4 : 08              >            php         ;save flags
56b5 : c95a            >            cmp #$5a     ;test result
                       >            trap_ne
56b7 : f003            >        beq skip2316
                       >        trap            ;failed not equal (non zero)
56b9 : 202561          >        jsr report_error
                       >
56bc :                 >skip2316
                       >
56bc : 68              >            pla         ;load status
56bd : 48              >            pha
                       >            cmp_flag $ff
56be : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
56c0 : f003            >        beq skip2319
                       >        trap            ;failed not equal (non zero)
56c2 : 202561          >        jsr report_error
                       >
56c5 :                 >skip2319
                       >
56c5 : 28              >            plp         ;restore status
                       >
56c6 : a552            >        lda zpt
                       >        trap_ne     ;wrong bits set or cleared
56c8 : f003            >        beq skip2321
                       >        trap            ;failed not equal (non zero)
56ca : 202561          >        jsr report_error
                       >
56cd :                 >skip2321
                       >
                        
                                rmbt 3
56cd : a9ff            >        lda #$ff
56cf : 8552            >        sta zpt
                       >        set_a $a5,0
                       >            load_flag 0
56d1 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
56d3 : 48              >            pha         ;use stack to load status
56d4 : a9a5            >            lda #$a5     ;precharge accu
56d6 : 28              >            plp
                       >
56d7 : 3752            >        rmb 3,zpt
                       >        tst_a $a5,0
56d9 : 08              >            php         ;save flags
56da : c9a5            >            cmp #$a5     ;test result
                       >            trap_ne
56dc : f003            >        beq skip2327
                       >        trap            ;failed not equal (non zero)
56de : 202561          >        jsr report_error
                       >
56e1 :                 >skip2327
                       >
56e1 : 68              >            pla         ;load status
56e2 : 48              >            pha
                       >            cmp_flag 0
56e3 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
56e5 : f003            >        beq skip2330
                       >        trap            ;failed not equal (non zero)
56e7 : 202561          >        jsr report_error
                       >
56ea :                 >skip2330
                       >
56ea : 28              >            plp         ;restore status
                       >
56eb : a552            >        lda zpt
56ed : c9f7            >        cmp #$ff-(1<<3)
                       >        trap_ne     ;wrong bits set or cleared
56ef : f003            >        beq skip2332
                       >        trap            ;failed not equal (non zero)
56f1 : 202561          >        jsr report_error
                       >
56f4 :                 >skip2332
                       >
56f4 : a908            >        lda #1<<3
56f6 : 8552            >        sta zpt
                       >        set_a $5a,$ff
                       >            load_flag $ff
56f8 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
56fa : 48              >            pha         ;use stack to load status
56fb : a95a            >            lda #$5a     ;precharge accu
56fd : 28              >            plp
                       >
56fe : 3752            >        rmb 3,zpt
                       >        tst_a $5a,$ff
5700 : 08              >            php         ;save flags
5701 : c95a            >            cmp #$5a     ;test result
                       >            trap_ne
5703 : f003            >        beq skip2337
                       >        trap            ;failed not equal (non zero)
5705 : 202561          >        jsr report_error
                       >
5708 :                 >skip2337
                       >
5708 : 68              >            pla         ;load status
5709 : 48              >            pha
                       >            cmp_flag $ff
570a : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
570c : f003            >        beq skip2340
                       >        trap            ;failed not equal (non zero)
570e : 202561          >        jsr report_error
                       >
5711 :                 >skip2340
                       >
5711 : 28              >            plp         ;restore status
                       >
5712 : a552            >        lda zpt
                       >        trap_ne     ;wrong bits set or cleared
5714 : f003            >        beq skip2342
                       >        trap            ;failed not equal (non zero)
5716 : 202561          >        jsr report_error
                       >
5719 :                 >skip2342
                       >
                        
                                rmbt 4
5719 : a9ff            >        lda #$ff
571b : 8552            >        sta zpt
                       >        set_a $a5,0
                       >            load_flag 0
571d : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
571f : 48              >            pha         ;use stack to load status
5720 : a9a5            >            lda #$a5     ;precharge accu
5722 : 28              >            plp
                       >
5723 : 4752            >        rmb 4,zpt
                       >        tst_a $a5,0
5725 : 08              >            php         ;save flags
5726 : c9a5            >            cmp #$a5     ;test result
                       >            trap_ne
5728 : f003            >        beq skip2348
                       >        trap            ;failed not equal (non zero)
572a : 202561          >        jsr report_error
                       >
572d :                 >skip2348
                       >
572d : 68              >            pla         ;load status
572e : 48              >            pha
                       >            cmp_flag 0
572f : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
5731 : f003            >        beq skip2351
                       >        trap            ;failed not equal (non zero)
5733 : 202561          >        jsr report_error
                       >
5736 :                 >skip2351
                       >
5736 : 28              >            plp         ;restore status
                       >
5737 : a552            >        lda zpt
5739 : c9ef            >        cmp #$ff-(1<<4)
                       >        trap_ne     ;wrong bits set or cleared
573b : f003            >        beq skip2353
                       >        trap            ;failed not equal (non zero)
573d : 202561          >        jsr report_error
                       >
5740 :                 >skip2353
                       >
5740 : a910            >        lda #1<<4
5742 : 8552            >        sta zpt
                       >        set_a $5a,$ff
                       >            load_flag $ff
5744 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
5746 : 48              >            pha         ;use stack to load status
5747 : a95a            >            lda #$5a     ;precharge accu
5749 : 28              >            plp
                       >
574a : 4752            >        rmb 4,zpt
                       >        tst_a $5a,$ff
574c : 08              >            php         ;save flags
574d : c95a            >            cmp #$5a     ;test result
                       >            trap_ne
574f : f003            >        beq skip2358
                       >        trap            ;failed not equal (non zero)
5751 : 202561          >        jsr report_error
                       >
5754 :                 >skip2358
                       >
5754 : 68              >            pla         ;load status
5755 : 48              >            pha
                       >            cmp_flag $ff
5756 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
5758 : f003            >        beq skip2361
                       >        trap            ;failed not equal (non zero)
575a : 202561          >        jsr report_error
                       >
575d :                 >skip2361
                       >
575d : 28              >            plp         ;restore status
                       >
575e : a552            >        lda zpt
                       >        trap_ne     ;wrong bits set or cleared
5760 : f003            >        beq skip2363
                       >        trap            ;failed not equal (non zero)
5762 : 202561          >        jsr report_error
                       >
5765 :                 >skip2363
                       >
                        
                                rmbt 5
5765 : a9ff            >        lda #$ff
5767 : 8552            >        sta zpt
                       >        set_a $a5,0
                       >            load_flag 0
5769 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
576b : 48              >            pha         ;use stack to load status
576c : a9a5            >            lda #$a5     ;precharge accu
576e : 28              >            plp
                       >
576f : 5752            >        rmb 5,zpt
                       >        tst_a $a5,0
5771 : 08              >            php         ;save flags
5772 : c9a5            >            cmp #$a5     ;test result
                       >            trap_ne
5774 : f003            >        beq skip2369
                       >        trap            ;failed not equal (non zero)
5776 : 202561          >        jsr report_error
                       >
5779 :                 >skip2369
                       >
5779 : 68              >            pla         ;load status
577a : 48              >            pha
                       >            cmp_flag 0
577b : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
577d : f003            >        beq skip2372
                       >        trap            ;failed not equal (non zero)
577f : 202561          >        jsr report_error
                       >
5782 :                 >skip2372
                       >
5782 : 28              >            plp         ;restore status
                       >
5783 : a552            >        lda zpt
5785 : c9df            >        cmp #$ff-(1<<5)
                       >        trap_ne     ;wrong bits set or cleared
5787 : f003            >        beq skip2374
                       >        trap            ;failed not equal (non zero)
5789 : 202561          >        jsr report_error
                       >
578c :                 >skip2374
                       >
578c : a920            >        lda #1<<5
578e : 8552            >        sta zpt
                       >        set_a $5a,$ff
                       >            load_flag $ff
5790 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
5792 : 48              >            pha         ;use stack to load status
5793 : a95a            >            lda #$5a     ;precharge accu
5795 : 28              >            plp
                       >
5796 : 5752            >        rmb 5,zpt
                       >        tst_a $5a,$ff
5798 : 08              >            php         ;save flags
5799 : c95a            >            cmp #$5a     ;test result
                       >            trap_ne
579b : f003            >        beq skip2379
                       >        trap            ;failed not equal (non zero)
579d : 202561          >        jsr report_error
                       >
57a0 :                 >skip2379
                       >
57a0 : 68              >            pla         ;load status
57a1 : 48              >            pha
                       >            cmp_flag $ff
57a2 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
57a4 : f003            >        beq skip2382
                       >        trap            ;failed not equal (non zero)
57a6 : 202561          >        jsr report_error
                       >
57a9 :                 >skip2382
                       >
57a9 : 28              >            plp         ;restore status
                       >
57aa : a552            >        lda zpt
                       >        trap_ne     ;wrong bits set or cleared
57ac : f003            >        beq skip2384
                       >        trap            ;failed not equal (non zero)
57ae : 202561          >        jsr report_error
                       >
57b1 :                 >skip2384
                       >
                        
                                rmbt 6
57b1 : a9ff            >        lda #$ff
57b3 : 8552            >        sta zpt
                       >        set_a $a5,0
                       >            load_flag 0
57b5 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
57b7 : 48              >            pha         ;use stack to load status
57b8 : a9a5            >            lda #$a5     ;precharge accu
57ba : 28              >            plp
                       >
57bb : 6752            >        rmb 6,zpt
                       >        tst_a $a5,0
57bd : 08              >            php         ;save flags
57be : c9a5            >            cmp #$a5     ;test result
                       >            trap_ne
57c0 : f003            >        beq skip2390
                       >        trap            ;failed not equal (non zero)
57c2 : 202561          >        jsr report_error
                       >
57c5 :                 >skip2390
                       >
57c5 : 68              >            pla         ;load status
57c6 : 48              >            pha
                       >            cmp_flag 0
57c7 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
57c9 : f003            >        beq skip2393
                       >        trap            ;failed not equal (non zero)
57cb : 202561          >        jsr report_error
                       >
57ce :                 >skip2393
                       >
57ce : 28              >            plp         ;restore status
                       >
57cf : a552            >        lda zpt
57d1 : c9bf            >        cmp #$ff-(1<<6)
                       >        trap_ne     ;wrong bits set or cleared
57d3 : f003            >        beq skip2395
                       >        trap            ;failed not equal (non zero)
57d5 : 202561          >        jsr report_error
                       >
57d8 :                 >skip2395
                       >
57d8 : a940            >        lda #1<<6
57da : 8552            >        sta zpt
                       >        set_a $5a,$ff
                       >            load_flag $ff
57dc : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
57de : 48              >            pha         ;use stack to load status
57df : a95a            >            lda #$5a     ;precharge accu
57e1 : 28              >            plp
                       >
57e2 : 6752            >        rmb 6,zpt
                       >        tst_a $5a,$ff
57e4 : 08              >            php         ;save flags
57e5 : c95a            >            cmp #$5a     ;test result
                       >            trap_ne
57e7 : f003            >        beq skip2400
                       >        trap            ;failed not equal (non zero)
57e9 : 202561          >        jsr report_error
                       >
57ec :                 >skip2400
                       >
57ec : 68              >            pla         ;load status
57ed : 48              >            pha
                       >            cmp_flag $ff
57ee : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
57f0 : f003            >        beq skip2403
                       >        trap            ;failed not equal (non zero)
57f2 : 202561          >        jsr report_error
                       >
57f5 :                 >skip2403
                       >
57f5 : 28              >            plp         ;restore status
                       >
57f6 : a552            >        lda zpt
                       >        trap_ne     ;wrong bits set or cleared
57f8 : f003            >        beq skip2405
                       >        trap            ;failed not equal (non zero)
57fa : 202561          >        jsr report_error
                       >
57fd :                 >skip2405
                       >
                        
                                rmbt 7
57fd : a9ff            >        lda #$ff
57ff : 8552            >        sta zpt
                       >        set_a $a5,0
                       >            load_flag 0
5801 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
5803 : 48              >            pha         ;use stack to load status
5804 : a9a5            >            lda #$a5     ;precharge accu
5806 : 28              >            plp
                       >
5807 : 7752            >        rmb 7,zpt
                       >        tst_a $a5,0
5809 : 08              >            php         ;save flags
580a : c9a5            >            cmp #$a5     ;test result
                       >            trap_ne
580c : f003            >        beq skip2411
                       >        trap            ;failed not equal (non zero)
580e : 202561          >        jsr report_error
                       >
5811 :                 >skip2411
                       >
5811 : 68              >            pla         ;load status
5812 : 48              >            pha
                       >            cmp_flag 0
5813 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
5815 : f003            >        beq skip2414
                       >        trap            ;failed not equal (non zero)
5817 : 202561          >        jsr report_error
                       >
581a :                 >skip2414
                       >
581a : 28              >            plp         ;restore status
                       >
581b : a552            >        lda zpt
581d : c97f            >        cmp #$ff-(1<<7)
                       >        trap_ne     ;wrong bits set or cleared
581f : f003            >        beq skip2416
                       >        trap            ;failed not equal (non zero)
5821 : 202561          >        jsr report_error
                       >
5824 :                 >skip2416
                       >
5824 : a980            >        lda #1<<7
5826 : 8552            >        sta zpt
                       >        set_a $5a,$ff
                       >            load_flag $ff
5828 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
582a : 48              >            pha         ;use stack to load status
582b : a95a            >            lda #$5a     ;precharge accu
582d : 28              >            plp
                       >
582e : 7752            >        rmb 7,zpt
                       >        tst_a $5a,$ff
5830 : 08              >            php         ;save flags
5831 : c95a            >            cmp #$5a     ;test result
                       >            trap_ne
5833 : f003            >        beq skip2421
                       >        trap            ;failed not equal (non zero)
5835 : 202561          >        jsr report_error
                       >
5838 :                 >skip2421
                       >
5838 : 68              >            pla         ;load status
5839 : 48              >            pha
                       >            cmp_flag $ff
583a : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
583c : f003            >        beq skip2424
                       >        trap            ;failed not equal (non zero)
583e : 202561          >        jsr report_error
                       >
5841 :                 >skip2424
                       >
5841 : 28              >            plp         ;restore status
                       >
5842 : a552            >        lda zpt
                       >        trap_ne     ;wrong bits set or cleared
5844 : f003            >        beq skip2426
                       >        trap            ;failed not equal (non zero)
5846 : 202561          >        jsr report_error
                       >
5849 :                 >skip2426
                       >
                        
                                smbt 0
5849 : a9fe            >        lda #$ff-(1<<0)
584b : 8552            >        sta zpt
                       >        set_a $a5,0
                       >            load_flag 0
584d : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
584f : 48              >            pha         ;use stack to load status
5850 : a9a5            >            lda #$a5     ;precharge accu
5852 : 28              >            plp
                       >
5853 : 8752            >        smb 0,zpt
                       >        tst_a $a5,0
5855 : 08              >            php         ;save flags
5856 : c9a5            >            cmp #$a5     ;test result
                       >            trap_ne
5858 : f003            >        beq skip2432
                       >        trap            ;failed not equal (non zero)
585a : 202561          >        jsr report_error
                       >
585d :                 >skip2432
                       >
585d : 68              >            pla         ;load status
585e : 48              >            pha
                       >            cmp_flag 0
585f : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
5861 : f003            >        beq skip2435
                       >        trap            ;failed not equal (non zero)
5863 : 202561          >        jsr report_error
                       >
5866 :                 >skip2435
                       >
5866 : 28              >            plp         ;restore status
                       >
5867 : a552            >        lda zpt
5869 : c9ff            >        cmp #$ff
                       >        trap_ne     ;wrong bits set or cleared
586b : f003            >        beq skip2437
                       >        trap            ;failed not equal (non zero)
586d : 202561          >        jsr report_error
                       >
5870 :                 >skip2437
                       >
5870 : a900            >        lda #0
5872 : 8552            >        sta zpt
                       >        set_a $5a,$ff
                       >            load_flag $ff
5874 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
5876 : 48              >            pha         ;use stack to load status
5877 : a95a            >            lda #$5a     ;precharge accu
5879 : 28              >            plp
                       >
587a : 8752            >        smb 0,zpt
                       >        tst_a $5a,$ff
587c : 08              >            php         ;save flags
587d : c95a            >            cmp #$5a     ;test result
                       >            trap_ne
587f : f003            >        beq skip2442
                       >        trap            ;failed not equal (non zero)
5881 : 202561          >        jsr report_error
                       >
5884 :                 >skip2442
                       >
5884 : 68              >            pla         ;load status
5885 : 48              >            pha
                       >            cmp_flag $ff
5886 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
5888 : f003            >        beq skip2445
                       >        trap            ;failed not equal (non zero)
588a : 202561          >        jsr report_error
                       >
588d :                 >skip2445
                       >
588d : 28              >            plp         ;restore status
                       >
588e : a552            >        lda zpt
5890 : c901            >        cmp #1<<0
                       >        trap_ne     ;wrong bits set or cleared
5892 : f003            >        beq skip2447
                       >        trap            ;failed not equal (non zero)
5894 : 202561          >        jsr report_error
                       >
5897 :                 >skip2447
                       >
                        
                                smbt 1
5897 : a9fd            >        lda #$ff-(1<<1)
5899 : 8552            >        sta zpt
                       >        set_a $a5,0
                       >            load_flag 0
589b : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
589d : 48              >            pha         ;use stack to load status
589e : a9a5            >            lda #$a5     ;precharge accu
58a0 : 28              >            plp
                       >
58a1 : 9752            >        smb 1,zpt
                       >        tst_a $a5,0
58a3 : 08              >            php         ;save flags
58a4 : c9a5            >            cmp #$a5     ;test result
                       >            trap_ne
58a6 : f003            >        beq skip2453
                       >        trap            ;failed not equal (non zero)
58a8 : 202561          >        jsr report_error
                       >
58ab :                 >skip2453
                       >
58ab : 68              >            pla         ;load status
58ac : 48              >            pha
                       >            cmp_flag 0
58ad : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
58af : f003            >        beq skip2456
                       >        trap            ;failed not equal (non zero)
58b1 : 202561          >        jsr report_error
                       >
58b4 :                 >skip2456
                       >
58b4 : 28              >            plp         ;restore status
                       >
58b5 : a552            >        lda zpt
58b7 : c9ff            >        cmp #$ff
                       >        trap_ne     ;wrong bits set or cleared
58b9 : f003            >        beq skip2458
                       >        trap            ;failed not equal (non zero)
58bb : 202561          >        jsr report_error
                       >
58be :                 >skip2458
                       >
58be : a900            >        lda #0
58c0 : 8552            >        sta zpt
                       >        set_a $5a,$ff
                       >            load_flag $ff
58c2 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
58c4 : 48              >            pha         ;use stack to load status
58c5 : a95a            >            lda #$5a     ;precharge accu
58c7 : 28              >            plp
                       >
58c8 : 9752            >        smb 1,zpt
                       >        tst_a $5a,$ff
58ca : 08              >            php         ;save flags
58cb : c95a            >            cmp #$5a     ;test result
                       >            trap_ne
58cd : f003            >        beq skip2463
                       >        trap            ;failed not equal (non zero)
58cf : 202561          >        jsr report_error
                       >
58d2 :                 >skip2463
                       >
58d2 : 68              >            pla         ;load status
58d3 : 48              >            pha
                       >            cmp_flag $ff
58d4 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
58d6 : f003            >        beq skip2466
                       >        trap            ;failed not equal (non zero)
58d8 : 202561          >        jsr report_error
                       >
58db :                 >skip2466
                       >
58db : 28              >            plp         ;restore status
                       >
58dc : a552            >        lda zpt
58de : c902            >        cmp #1<<1
                       >        trap_ne     ;wrong bits set or cleared
58e0 : f003            >        beq skip2468
                       >        trap            ;failed not equal (non zero)
58e2 : 202561          >        jsr report_error
                       >
58e5 :                 >skip2468
                       >
                        
                                smbt 2
58e5 : a9fb            >        lda #$ff-(1<<2)
58e7 : 8552            >        sta zpt
                       >        set_a $a5,0
                       >            load_flag 0
58e9 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
58eb : 48              >            pha         ;use stack to load status
58ec : a9a5            >            lda #$a5     ;precharge accu
58ee : 28              >            plp
                       >
58ef : a752            >        smb 2,zpt
                       >        tst_a $a5,0
58f1 : 08              >            php         ;save flags
58f2 : c9a5            >            cmp #$a5     ;test result
                       >            trap_ne
58f4 : f003            >        beq skip2474
                       >        trap            ;failed not equal (non zero)
58f6 : 202561          >        jsr report_error
                       >
58f9 :                 >skip2474
                       >
58f9 : 68              >            pla         ;load status
58fa : 48              >            pha
                       >            cmp_flag 0
58fb : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
58fd : f003            >        beq skip2477
                       >        trap            ;failed not equal (non zero)
58ff : 202561          >        jsr report_error
                       >
5902 :                 >skip2477
                       >
5902 : 28              >            plp         ;restore status
                       >
5903 : a552            >        lda zpt
5905 : c9ff            >        cmp #$ff
                       >        trap_ne     ;wrong bits set or cleared
5907 : f003            >        beq skip2479
                       >        trap            ;failed not equal (non zero)
5909 : 202561          >        jsr report_error
                       >
590c :                 >skip2479
                       >
590c : a900            >        lda #0
590e : 8552            >        sta zpt
                       >        set_a $5a,$ff
                       >            load_flag $ff
5910 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
5912 : 48              >            pha         ;use stack to load status
5913 : a95a            >            lda #$5a     ;precharge accu
5915 : 28              >            plp
                       >
5916 : a752            >        smb 2,zpt
                       >        tst_a $5a,$ff
5918 : 08              >            php         ;save flags
5919 : c95a            >            cmp #$5a     ;test result
                       >            trap_ne
591b : f003            >        beq skip2484
                       >        trap            ;failed not equal (non zero)
591d : 202561          >        jsr report_error
                       >
5920 :                 >skip2484
                       >
5920 : 68              >            pla         ;load status
5921 : 48              >            pha
                       >            cmp_flag $ff
5922 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
5924 : f003            >        beq skip2487
                       >        trap            ;failed not equal (non zero)
5926 : 202561          >        jsr report_error
                       >
5929 :                 >skip2487
                       >
5929 : 28              >            plp         ;restore status
                       >
592a : a552            >        lda zpt
592c : c904            >        cmp #1<<2
                       >        trap_ne     ;wrong bits set or cleared
592e : f003            >        beq skip2489
                       >        trap            ;failed not equal (non zero)
5930 : 202561          >        jsr report_error
                       >
5933 :                 >skip2489
                       >
                        
                                smbt 3
5933 : a9f7            >        lda #$ff-(1<<3)
5935 : 8552            >        sta zpt
                       >        set_a $a5,0
                       >            load_flag 0
5937 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
5939 : 48              >            pha         ;use stack to load status
593a : a9a5            >            lda #$a5     ;precharge accu
593c : 28              >            plp
                       >
593d : b752            >        smb 3,zpt
                       >        tst_a $a5,0
593f : 08              >            php         ;save flags
5940 : c9a5            >            cmp #$a5     ;test result
                       >            trap_ne
5942 : f003            >        beq skip2495
                       >        trap            ;failed not equal (non zero)
5944 : 202561          >        jsr report_error
                       >
5947 :                 >skip2495
                       >
5947 : 68              >            pla         ;load status
5948 : 48              >            pha
                       >            cmp_flag 0
5949 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
594b : f003            >        beq skip2498
                       >        trap            ;failed not equal (non zero)
594d : 202561          >        jsr report_error
                       >
5950 :                 >skip2498
                       >
5950 : 28              >            plp         ;restore status
                       >
5951 : a552            >        lda zpt
5953 : c9ff            >        cmp #$ff
                       >        trap_ne     ;wrong bits set or cleared
5955 : f003            >        beq skip2500
                       >        trap            ;failed not equal (non zero)
5957 : 202561          >        jsr report_error
                       >
595a :                 >skip2500
                       >
595a : a900            >        lda #0
595c : 8552            >        sta zpt
                       >        set_a $5a,$ff
                       >            load_flag $ff
595e : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
5960 : 48              >            pha         ;use stack to load status
5961 : a95a            >            lda #$5a     ;precharge accu
5963 : 28              >            plp
                       >
5964 : b752            >        smb 3,zpt
                       >        tst_a $5a,$ff
5966 : 08              >            php         ;save flags
5967 : c95a            >            cmp #$5a     ;test result
                       >            trap_ne
5969 : f003            >        beq skip2505
                       >        trap            ;failed not equal (non zero)
596b : 202561          >        jsr report_error
                       >
596e :                 >skip2505
                       >
596e : 68              >            pla         ;load status
596f : 48              >            pha
                       >            cmp_flag $ff
5970 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
5972 : f003            >        beq skip2508
                       >        trap            ;failed not equal (non zero)
5974 : 202561          >        jsr report_error
                       >
5977 :                 >skip2508
                       >
5977 : 28              >            plp         ;restore status
                       >
5978 : a552            >        lda zpt
597a : c908            >        cmp #1<<3
                       >        trap_ne     ;wrong bits set or cleared
597c : f003            >        beq skip2510
                       >        trap            ;failed not equal (non zero)
597e : 202561          >        jsr report_error
                       >
5981 :                 >skip2510
                       >
                        
                                smbt 4
5981 : a9ef            >        lda #$ff-(1<<4)
5983 : 8552            >        sta zpt
                       >        set_a $a5,0
                       >            load_flag 0
5985 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
5987 : 48              >            pha         ;use stack to load status
5988 : a9a5            >            lda #$a5     ;precharge accu
598a : 28              >            plp
                       >
598b : c752            >        smb 4,zpt
                       >        tst_a $a5,0
598d : 08              >            php         ;save flags
598e : c9a5            >            cmp #$a5     ;test result
                       >            trap_ne
5990 : f003            >        beq skip2516
                       >        trap            ;failed not equal (non zero)
5992 : 202561          >        jsr report_error
                       >
5995 :                 >skip2516
                       >
5995 : 68              >            pla         ;load status
5996 : 48              >            pha
                       >            cmp_flag 0
5997 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
5999 : f003            >        beq skip2519
                       >        trap            ;failed not equal (non zero)
599b : 202561          >        jsr report_error
                       >
599e :                 >skip2519
                       >
599e : 28              >            plp         ;restore status
                       >
599f : a552            >        lda zpt
59a1 : c9ff            >        cmp #$ff
                       >        trap_ne     ;wrong bits set or cleared
59a3 : f003            >        beq skip2521
                       >        trap            ;failed not equal (non zero)
59a5 : 202561          >        jsr report_error
                       >
59a8 :                 >skip2521
                       >
59a8 : a900            >        lda #0
59aa : 8552            >        sta zpt
                       >        set_a $5a,$ff
                       >            load_flag $ff
59ac : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
59ae : 48              >            pha         ;use stack to load status
59af : a95a            >            lda #$5a     ;precharge accu
59b1 : 28              >            plp
                       >
59b2 : c752            >        smb 4,zpt
                       >        tst_a $5a,$ff
59b4 : 08              >            php         ;save flags
59b5 : c95a            >            cmp #$5a     ;test result
                       >            trap_ne
59b7 : f003            >        beq skip2526
                       >        trap            ;failed not equal (non zero)
59b9 : 202561          >        jsr report_error
                       >
59bc :                 >skip2526
                       >
59bc : 68              >            pla         ;load status
59bd : 48              >            pha
                       >            cmp_flag $ff
59be : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
59c0 : f003            >        beq skip2529
                       >        trap            ;failed not equal (non zero)
59c2 : 202561          >        jsr report_error
                       >
59c5 :                 >skip2529
                       >
59c5 : 28              >            plp         ;restore status
                       >
59c6 : a552            >        lda zpt
59c8 : c910            >        cmp #1<<4
                       >        trap_ne     ;wrong bits set or cleared
59ca : f003            >        beq skip2531
                       >        trap            ;failed not equal (non zero)
59cc : 202561          >        jsr report_error
                       >
59cf :                 >skip2531
                       >
                        
                                smbt 5
59cf : a9df            >        lda #$ff-(1<<5)
59d1 : 8552            >        sta zpt
                       >        set_a $a5,0
                       >            load_flag 0
59d3 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
59d5 : 48              >            pha         ;use stack to load status
59d6 : a9a5            >            lda #$a5     ;precharge accu
59d8 : 28              >            plp
                       >
59d9 : d752            >        smb 5,zpt
                       >        tst_a $a5,0
59db : 08              >            php         ;save flags
59dc : c9a5            >            cmp #$a5     ;test result
                       >            trap_ne
59de : f003            >        beq skip2537
                       >        trap            ;failed not equal (non zero)
59e0 : 202561          >        jsr report_error
                       >
59e3 :                 >skip2537
                       >
59e3 : 68              >            pla         ;load status
59e4 : 48              >            pha
                       >            cmp_flag 0
59e5 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
59e7 : f003            >        beq skip2540
                       >        trap            ;failed not equal (non zero)
59e9 : 202561          >        jsr report_error
                       >
59ec :                 >skip2540
                       >
59ec : 28              >            plp         ;restore status
                       >
59ed : a552            >        lda zpt
59ef : c9ff            >        cmp #$ff
                       >        trap_ne     ;wrong bits set or cleared
59f1 : f003            >        beq skip2542
                       >        trap            ;failed not equal (non zero)
59f3 : 202561          >        jsr report_error
                       >
59f6 :                 >skip2542
                       >
59f6 : a900            >        lda #0
59f8 : 8552            >        sta zpt
                       >        set_a $5a,$ff
                       >            load_flag $ff
59fa : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
59fc : 48              >            pha         ;use stack to load status
59fd : a95a            >            lda #$5a     ;precharge accu
59ff : 28              >            plp
                       >
5a00 : d752            >        smb 5,zpt
                       >        tst_a $5a,$ff
5a02 : 08              >            php         ;save flags
5a03 : c95a            >            cmp #$5a     ;test result
                       >            trap_ne
5a05 : f003            >        beq skip2547
                       >        trap            ;failed not equal (non zero)
5a07 : 202561          >        jsr report_error
                       >
5a0a :                 >skip2547
                       >
5a0a : 68              >            pla         ;load status
5a0b : 48              >            pha
                       >            cmp_flag $ff
5a0c : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
5a0e : f003            >        beq skip2550
                       >        trap            ;failed not equal (non zero)
5a10 : 202561          >        jsr report_error
                       >
5a13 :                 >skip2550
                       >
5a13 : 28              >            plp         ;restore status
                       >
5a14 : a552            >        lda zpt
5a16 : c920            >        cmp #1<<5
                       >        trap_ne     ;wrong bits set or cleared
5a18 : f003            >        beq skip2552
                       >        trap            ;failed not equal (non zero)
5a1a : 202561          >        jsr report_error
                       >
5a1d :                 >skip2552
                       >
                        
                                smbt 6
5a1d : a9bf            >        lda #$ff-(1<<6)
5a1f : 8552            >        sta zpt
                       >        set_a $a5,0
                       >            load_flag 0
5a21 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
5a23 : 48              >            pha         ;use stack to load status
5a24 : a9a5            >            lda #$a5     ;precharge accu
5a26 : 28              >            plp
                       >
5a27 : e752            >        smb 6,zpt
                       >        tst_a $a5,0
5a29 : 08              >            php         ;save flags
5a2a : c9a5            >            cmp #$a5     ;test result
                       >            trap_ne
5a2c : f003            >        beq skip2558
                       >        trap            ;failed not equal (non zero)
5a2e : 202561          >        jsr report_error
                       >
5a31 :                 >skip2558
                       >
5a31 : 68              >            pla         ;load status
5a32 : 48              >            pha
                       >            cmp_flag 0
5a33 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
5a35 : f003            >        beq skip2561
                       >        trap            ;failed not equal (non zero)
5a37 : 202561          >        jsr report_error
                       >
5a3a :                 >skip2561
                       >
5a3a : 28              >            plp         ;restore status
                       >
5a3b : a552            >        lda zpt
5a3d : c9ff            >        cmp #$ff
                       >        trap_ne     ;wrong bits set or cleared
5a3f : f003            >        beq skip2563
                       >        trap            ;failed not equal (non zero)
5a41 : 202561          >        jsr report_error
                       >
5a44 :                 >skip2563
                       >
5a44 : a900            >        lda #0
5a46 : 8552            >        sta zpt
                       >        set_a $5a,$ff
                       >            load_flag $ff
5a48 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
5a4a : 48              >            pha         ;use stack to load status
5a4b : a95a            >            lda #$5a     ;precharge accu
5a4d : 28              >            plp
                       >
5a4e : e752            >        smb 6,zpt
                       >        tst_a $5a,$ff
5a50 : 08              >            php         ;save flags
5a51 : c95a            >            cmp #$5a     ;test result
                       >            trap_ne
5a53 : f003            >        beq skip2568
                       >        trap            ;failed not equal (non zero)
5a55 : 202561          >        jsr report_error
                       >
5a58 :                 >skip2568
                       >
5a58 : 68              >            pla         ;load status
5a59 : 48              >            pha
                       >            cmp_flag $ff
5a5a : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
5a5c : f003            >        beq skip2571
                       >        trap            ;failed not equal (non zero)
5a5e : 202561          >        jsr report_error
                       >
5a61 :                 >skip2571
                       >
5a61 : 28              >            plp         ;restore status
                       >
5a62 : a552            >        lda zpt
5a64 : c940            >        cmp #1<<6
                       >        trap_ne     ;wrong bits set or cleared
5a66 : f003            >        beq skip2573
                       >        trap            ;failed not equal (non zero)
5a68 : 202561          >        jsr report_error
                       >
5a6b :                 >skip2573
                       >
                        
                                smbt 7
5a6b : a97f            >        lda #$ff-(1<<7)
5a6d : 8552            >        sta zpt
                       >        set_a $a5,0
                       >            load_flag 0
5a6f : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
5a71 : 48              >            pha         ;use stack to load status
5a72 : a9a5            >            lda #$a5     ;precharge accu
5a74 : 28              >            plp
                       >
5a75 : f752            >        smb 7,zpt
                       >        tst_a $a5,0
5a77 : 08              >            php         ;save flags
5a78 : c9a5            >            cmp #$a5     ;test result
                       >            trap_ne
5a7a : f003            >        beq skip2579
                       >        trap            ;failed not equal (non zero)
5a7c : 202561          >        jsr report_error
                       >
5a7f :                 >skip2579
                       >
5a7f : 68              >            pla         ;load status
5a80 : 48              >            pha
                       >            cmp_flag 0
5a81 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
5a83 : f003            >        beq skip2582
                       >        trap            ;failed not equal (non zero)
5a85 : 202561          >        jsr report_error
                       >
5a88 :                 >skip2582
                       >
5a88 : 28              >            plp         ;restore status
                       >
5a89 : a552            >        lda zpt
5a8b : c9ff            >        cmp #$ff
                       >        trap_ne     ;wrong bits set or cleared
5a8d : f003            >        beq skip2584
                       >        trap            ;failed not equal (non zero)
5a8f : 202561          >        jsr report_error
                       >
5a92 :                 >skip2584
                       >
5a92 : a900            >        lda #0
5a94 : 8552            >        sta zpt
                       >        set_a $5a,$ff
                       >            load_flag $ff
5a96 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
5a98 : 48              >            pha         ;use stack to load status
5a99 : a95a            >            lda #$5a     ;precharge accu
5a9b : 28              >            plp
                       >
5a9c : f752            >        smb 7,zpt
                       >        tst_a $5a,$ff
5a9e : 08              >            php         ;save flags
5a9f : c95a            >            cmp #$5a     ;test result
                       >            trap_ne
5aa1 : f003            >        beq skip2589
                       >        trap            ;failed not equal (non zero)
5aa3 : 202561          >        jsr report_error
                       >
5aa6 :                 >skip2589
                       >
5aa6 : 68              >            pla         ;load status
5aa7 : 48              >            pha
                       >            cmp_flag $ff
5aa8 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
5aaa : f003            >        beq skip2592
                       >        trap            ;failed not equal (non zero)
5aac : 202561          >        jsr report_error
                       >
5aaf :                 >skip2592
                       >
5aaf : 28              >            plp         ;restore status
                       >
5ab0 : a552            >        lda zpt
5ab2 : c980            >        cmp #1<<7
                       >        trap_ne     ;wrong bits set or cleared
5ab4 : f003            >        beq skip2594
                       >        trap            ;failed not equal (non zero)
5ab6 : 202561          >        jsr report_error
                       >
5ab9 :                 >skip2594
                       >
                        
5ab9 : e0ba                     cpx #$ba
                                trap_ne     ;x altered during test
5abb : f003            >        beq skip2596
                       >        trap            ;failed not equal (non zero)
5abd : 202561          >        jsr report_error
                       >
5ac0 :                 >skip2596
                        
5ac0 : c0d0                     cpy #$d0
                                trap_ne     ;y altered during test
5ac2 : f003            >        beq skip2598
                       >        trap            ;failed not equal (non zero)
5ac4 : 202561          >        jsr report_error
                       >
5ac7 :                 >skip2598
                        
5ac7 : ba                       tsx
5ac8 : e0ff                     cpx #$ff
                                trap_ne     ;sp push/pop mismatch
5aca : f003            >        beq skip2600
                       >        trap            ;failed not equal (non zero)
5acc : 202561          >        jsr report_error
                       >
5acf :                 >skip2600
                        
                                next_test
5acf : ad0232          >            lda test_case   ;previous test
5ad2 : c910            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
5ad4 : f003            >        beq skip2603
                       >        trap            ;failed not equal (non zero)
5ad6 : 202561          >        jsr report_error
                       >
5ad9 :                 >skip2603
                       >
0011 =                 >test_num = test_num + 1
5ad9 : a911            >            lda #test_num   ;*** next tests' number
5adb : 8d0232          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                            endif        
                                 
                        ; testing CMP - (zp)         
5ade : a2de                     ldx #$de    ;protect x & y
5ae0 : a0ad                     ldy #$ad
                                set_a $80,0
                       >            load_flag 0
5ae2 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
5ae4 : 48              >            pha         ;use stack to load status
5ae5 : a980            >            lda #$80     ;precharge accu
5ae7 : 28              >            plp
                        
5ae8 : d272                     cmp (ind1+8)
                                tst_a $80,fc
5aea : 08              >            php         ;save flags
5aeb : c980            >            cmp #$80     ;test result
                       >            trap_ne
5aed : f003            >        beq skip2608
                       >        trap            ;failed not equal (non zero)
5aef : 202561          >        jsr report_error
                       >
5af2 :                 >skip2608
                       >
5af2 : 68              >            pla         ;load status
5af3 : 48              >            pha
                       >            cmp_flag fc
5af4 : c931            >            cmp #(fc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
5af6 : f003            >        beq skip2611
                       >        trap            ;failed not equal (non zero)
5af8 : 202561          >        jsr report_error
                       >
5afb :                 >skip2611
                       >
5afb : 28              >            plp         ;restore status
                        
                                set_a $7f,0
                       >            load_flag 0
5afc : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
5afe : 48              >            pha         ;use stack to load status
5aff : a97f            >            lda #$7f     ;precharge accu
5b01 : 28              >            plp
                        
5b02 : d272                     cmp (ind1+8)
                                tst_a $7f,fzc
5b04 : 08              >            php         ;save flags
5b05 : c97f            >            cmp #$7f     ;test result
                       >            trap_ne
5b07 : f003            >        beq skip2616
                       >        trap            ;failed not equal (non zero)
5b09 : 202561          >        jsr report_error
                       >
5b0c :                 >skip2616
                       >
5b0c : 68              >            pla         ;load status
5b0d : 48              >            pha
                       >            cmp_flag fzc
5b0e : c933            >            cmp #(fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
5b10 : f003            >        beq skip2619
                       >        trap            ;failed not equal (non zero)
5b12 : 202561          >        jsr report_error
                       >
5b15 :                 >skip2619
                       >
5b15 : 28              >            plp         ;restore status
                        
                                set_a $7e,0
                       >            load_flag 0
5b16 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
5b18 : 48              >            pha         ;use stack to load status
5b19 : a97e            >            lda #$7e     ;precharge accu
5b1b : 28              >            plp
                        
5b1c : d272                     cmp (ind1+8)
                                tst_a $7e,fn
5b1e : 08              >            php         ;save flags
5b1f : c97e            >            cmp #$7e     ;test result
                       >            trap_ne
5b21 : f003            >        beq skip2624
                       >        trap            ;failed not equal (non zero)
5b23 : 202561          >        jsr report_error
                       >
5b26 :                 >skip2624
                       >
5b26 : 68              >            pla         ;load status
5b27 : 48              >            pha
                       >            cmp_flag fn
5b28 : c9b0            >            cmp #(fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
5b2a : f003            >        beq skip2627
                       >        trap            ;failed not equal (non zero)
5b2c : 202561          >        jsr report_error
                       >
5b2f :                 >skip2627
                       >
5b2f : 28              >            plp         ;restore status
                        
                                set_a $80,$ff
                       >            load_flag $ff
5b30 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
5b32 : 48              >            pha         ;use stack to load status
5b33 : a980            >            lda #$80     ;precharge accu
5b35 : 28              >            plp
                        
5b36 : d272                     cmp (ind1+8)
                                tst_a $80,~fnz
5b38 : 08              >            php         ;save flags
5b39 : c980            >            cmp #$80     ;test result
                       >            trap_ne
5b3b : f003            >        beq skip2632
                       >        trap            ;failed not equal (non zero)
5b3d : 202561          >        jsr report_error
                       >
5b40 :                 >skip2632
                       >
5b40 : 68              >            pla         ;load status
5b41 : 48              >            pha
                       >            cmp_flag ~fnz
5b42 : c97d            >            cmp #(~fnz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
5b44 : f003            >        beq skip2635
                       >        trap            ;failed not equal (non zero)
5b46 : 202561          >        jsr report_error
                       >
5b49 :                 >skip2635
                       >
5b49 : 28              >            plp         ;restore status
                        
                                set_a $7f,$ff
                       >            load_flag $ff
5b4a : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
5b4c : 48              >            pha         ;use stack to load status
5b4d : a97f            >            lda #$7f     ;precharge accu
5b4f : 28              >            plp
                        
5b50 : d272                     cmp (ind1+8)
                                tst_a $7f,~fn
5b52 : 08              >            php         ;save flags
5b53 : c97f            >            cmp #$7f     ;test result
                       >            trap_ne
5b55 : f003            >        beq skip2640
                       >        trap            ;failed not equal (non zero)
5b57 : 202561          >        jsr report_error
                       >
5b5a :                 >skip2640
                       >
5b5a : 68              >            pla         ;load status
5b5b : 48              >            pha
                       >            cmp_flag ~fn
5b5c : c97f            >            cmp #(~fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
5b5e : f003            >        beq skip2643
                       >        trap            ;failed not equal (non zero)
5b60 : 202561          >        jsr report_error
                       >
5b63 :                 >skip2643
                       >
5b63 : 28              >            plp         ;restore status
                        
                                set_a $7e,$ff
                       >            load_flag $ff
5b64 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
5b66 : 48              >            pha         ;use stack to load status
5b67 : a97e            >            lda #$7e     ;precharge accu
5b69 : 28              >            plp
                        
5b6a : d272                     cmp (ind1+8)
                                tst_a $7e,~fzc
5b6c : 08              >            php         ;save flags
5b6d : c97e            >            cmp #$7e     ;test result
                       >            trap_ne
5b6f : f003            >        beq skip2648
                       >        trap            ;failed not equal (non zero)
5b71 : 202561          >        jsr report_error
                       >
5b74 :                 >skip2648
                       >
5b74 : 68              >            pla         ;load status
5b75 : 48              >            pha
                       >            cmp_flag ~fzc
5b76 : c9fc            >            cmp #(~fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
5b78 : f003            >        beq skip2651
                       >        trap            ;failed not equal (non zero)
5b7a : 202561          >        jsr report_error
                       >
5b7d :                 >skip2651
                       >
5b7d : 28              >            plp         ;restore status
                        
5b7e : e0de                     cpx #$de
                                trap_ne     ;x altered during test
5b80 : f003            >        beq skip2653
                       >        trap            ;failed not equal (non zero)
5b82 : 202561          >        jsr report_error
                       >
5b85 :                 >skip2653
                        
5b85 : c0ad                     cpy #$ad
                                trap_ne     ;y altered during test 
5b87 : f003            >        beq skip2655
                       >        trap            ;failed not equal (non zero)
5b89 : 202561          >        jsr report_error
                       >
5b8c :                 >skip2655
                        
5b8c : ba                       tsx
5b8d : e0ff                     cpx #$ff
                                trap_ne     ;sp push/pop mismatch
5b8f : f003            >        beq skip2657
                       >        trap            ;failed not equal (non zero)
5b91 : 202561          >        jsr report_error
                       >
5b94 :                 >skip2657
                        
                                next_test
5b94 : ad0232          >            lda test_case   ;previous test
5b97 : c911            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
5b99 : f003            >        beq skip2660
                       >        trap            ;failed not equal (non zero)
5b9b : 202561          >        jsr report_error
                       >
5b9e :                 >skip2660
                       >
0012 =                 >test_num = test_num + 1
5b9e : a912            >            lda #test_num   ;*** next tests' number
5ba0 : 8d0232          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; testing logical instructions - AND EOR ORA (zp)
5ba3 : a242                     ldx #$42    ;protect x & y
                        
5ba5 : a000                     ldy #0      ;AND
5ba7 : a580                     lda indAN   ;set indirect address
5ba9 : 8552                     sta zpt
5bab : a581                     lda indAN+1
5bad : 8553                     sta zpt+1
5baf :                  tand1
                                set_ay  absANa,0
                       >            load_flag 0
5baf : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
5bb1 : 48              >            pha         ;use stack to load status
5bb2 : b95332          >            lda absANa,y    ;precharge accu
5bb5 : 28              >            plp
                        
5bb6 : 3252                     and (zpt)
                                tst_ay  absrlo,absflo,0
5bb8 : 08              >            php         ;save flags
5bb9 : d95b32          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
5bbc : f003            >        beq skip2665
                       >        trap            ;failed not equal (non zero)
5bbe : 202561          >        jsr report_error
                       >
5bc1 :                 >skip2665
                       >
5bc1 : 68              >            pla         ;load status
                       >            eor_flag 0
5bc2 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
5bc4 : d95f32          >            cmp absflo,y    ;test flags
                       >            trap_ne
5bc7 : f003            >        beq skip2668
                       >        trap            ;failed not equal (non zero)
5bc9 : 202561          >        jsr report_error
                       >
5bcc :                 >skip2668
                       >
                        
5bcc : e652                     inc zpt
5bce : c8                       iny
5bcf : c004                     cpy #4
5bd1 : d0dc                     bne tand1
5bd3 : 88                       dey
5bd4 : c652                     dec zpt
5bd6 :                  tand2
                                set_ay  absANa,$ff
                       >            load_flag $ff
5bd6 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
5bd8 : 48              >            pha         ;use stack to load status
5bd9 : b95332          >            lda absANa,y    ;precharge accu
5bdc : 28              >            plp
                        
5bdd : 3252                     and (zpt)
                                tst_ay  absrlo,absflo,$ff-fnz
5bdf : 08              >            php         ;save flags
5be0 : d95b32          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
5be3 : f003            >        beq skip2673
                       >        trap            ;failed not equal (non zero)
5be5 : 202561          >        jsr report_error
                       >
5be8 :                 >skip2673
                       >
5be8 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
5be9 : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
5beb : d95f32          >            cmp absflo,y    ;test flags
                       >            trap_ne
5bee : f003            >        beq skip2676
                       >        trap            ;failed not equal (non zero)
5bf0 : 202561          >        jsr report_error
                       >
5bf3 :                 >skip2676
                       >
                        
5bf3 : c652                     dec zpt
5bf5 : 88                       dey
5bf6 : 10de                     bpl tand2
                        
5bf8 : a000                     ldy #0      ;EOR
5bfa : a588                     lda indEO   ;set indirect address
5bfc : 8552                     sta zpt
5bfe : a589                     lda indEO+1
5c00 : 8553                     sta zpt+1
5c02 :                  teor1
                                set_ay  absEOa,0
                       >            load_flag 0
5c02 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
5c04 : 48              >            pha         ;use stack to load status
5c05 : b95732          >            lda absEOa,y    ;precharge accu
5c08 : 28              >            plp
                        
5c09 : 5252                     eor (zpt)
                                tst_ay  absrlo,absflo,0
5c0b : 08              >            php         ;save flags
5c0c : d95b32          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
5c0f : f003            >        beq skip2681
                       >        trap            ;failed not equal (non zero)
5c11 : 202561          >        jsr report_error
                       >
5c14 :                 >skip2681
                       >
5c14 : 68              >            pla         ;load status
                       >            eor_flag 0
5c15 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
5c17 : d95f32          >            cmp absflo,y    ;test flags
                       >            trap_ne
5c1a : f003            >        beq skip2684
                       >        trap            ;failed not equal (non zero)
5c1c : 202561          >        jsr report_error
                       >
5c1f :                 >skip2684
                       >
                        
5c1f : e652                     inc zpt
5c21 : c8                       iny
5c22 : c004                     cpy #4
5c24 : d0dc                     bne teor1
5c26 : 88                       dey
5c27 : c652                     dec zpt
5c29 :                  teor2
                                set_ay  absEOa,$ff
                       >            load_flag $ff
5c29 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
5c2b : 48              >            pha         ;use stack to load status
5c2c : b95732          >            lda absEOa,y    ;precharge accu
5c2f : 28              >            plp
                        
5c30 : 5252                     eor (zpt)
                                tst_ay  absrlo,absflo,$ff-fnz
5c32 : 08              >            php         ;save flags
5c33 : d95b32          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
5c36 : f003            >        beq skip2689
                       >        trap            ;failed not equal (non zero)
5c38 : 202561          >        jsr report_error
                       >
5c3b :                 >skip2689
                       >
5c3b : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
5c3c : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
5c3e : d95f32          >            cmp absflo,y    ;test flags
                       >            trap_ne
5c41 : f003            >        beq skip2692
                       >        trap            ;failed not equal (non zero)
5c43 : 202561          >        jsr report_error
                       >
5c46 :                 >skip2692
                       >
                        
5c46 : c652                     dec zpt
5c48 : 88                       dey
5c49 : 10de                     bpl teor2
                        
5c4b : a000                     ldy #0      ;ORA
5c4d : a590                     lda indOR   ;set indirect address
5c4f : 8552                     sta zpt
5c51 : a591                     lda indOR+1
5c53 : 8553                     sta zpt+1
5c55 :                  tora1
                                set_ay  absORa,0
                       >            load_flag 0
5c55 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
5c57 : 48              >            pha         ;use stack to load status
5c58 : b94f32          >            lda absORa,y    ;precharge accu
5c5b : 28              >            plp
                        
5c5c : 1252                     ora (zpt)
                                tst_ay  absrlo,absflo,0
5c5e : 08              >            php         ;save flags
5c5f : d95b32          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
5c62 : f003            >        beq skip2697
                       >        trap            ;failed not equal (non zero)
5c64 : 202561          >        jsr report_error
                       >
5c67 :                 >skip2697
                       >
5c67 : 68              >            pla         ;load status
                       >            eor_flag 0
5c68 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
5c6a : d95f32          >            cmp absflo,y    ;test flags
                       >            trap_ne
5c6d : f003            >        beq skip2700
                       >        trap            ;failed not equal (non zero)
5c6f : 202561          >        jsr report_error
                       >
5c72 :                 >skip2700
                       >
                        
5c72 : e652                     inc zpt
5c74 : c8                       iny
5c75 : c004                     cpy #4
5c77 : d0dc                     bne tora1
5c79 : 88                       dey
5c7a : c652                     dec zpt
5c7c :                  tora2
                                set_ay  absORa,$ff
                       >            load_flag $ff
5c7c : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
5c7e : 48              >            pha         ;use stack to load status
5c7f : b94f32          >            lda absORa,y    ;precharge accu
5c82 : 28              >            plp
                        
5c83 : 1252                     ora (zpt)
                                tst_ay  absrlo,absflo,$ff-fnz
5c85 : 08              >            php         ;save flags
5c86 : d95b32          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
5c89 : f003            >        beq skip2705
                       >        trap            ;failed not equal (non zero)
5c8b : 202561          >        jsr report_error
                       >
5c8e :                 >skip2705
                       >
5c8e : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
5c8f : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
5c91 : d95f32          >            cmp absflo,y    ;test flags
                       >            trap_ne
5c94 : f003            >        beq skip2708
                       >        trap            ;failed not equal (non zero)
5c96 : 202561          >        jsr report_error
                       >
5c99 :                 >skip2708
                       >
                        
5c99 : c652                     dec zpt
5c9b : 88                       dey
5c9c : 10de                     bpl tora2
                        
5c9e : e042                     cpx #$42
                                trap_ne     ;x altered during test
5ca0 : f003            >        beq skip2710
                       >        trap            ;failed not equal (non zero)
5ca2 : 202561          >        jsr report_error
                       >
5ca5 :                 >skip2710
                        
5ca5 : ba                       tsx
5ca6 : e0ff                     cpx #$ff
                                trap_ne     ;sp push/pop mismatch
5ca8 : f003            >        beq skip2712
                       >        trap            ;failed not equal (non zero)
5caa : 202561          >        jsr report_error
                       >
5cad :                 >skip2712
                        
                                next_test
5cad : ad0232          >            lda test_case   ;previous test
5cb0 : c912            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
5cb2 : f003            >        beq skip2715
                       >        trap            ;failed not equal (non zero)
5cb4 : 202561          >        jsr report_error
                       >
5cb7 :                 >skip2715
                       >
0013 =                 >test_num = test_num + 1
5cb7 : a913            >            lda #test_num   ;*** next tests' number
5cb9 : 8d0232          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                                
                            if I_flag = 3
5cbc : 58                       cli
                            endif                
                        
                        ; full binary add/subtract test - (zp) only
                        ; iterates through all combinations of operands and carry input
                        ; uses increments/decrements to predict result & result flags
5cbd : d8                       cld
5cbe : a254                     ldx #ad2        ;for indexed test
5cc0 : a0ff                     ldy #$ff        ;max range
5cc2 : a900                     lda #0          ;start with adding zeroes & no carry
5cc4 : 8552                     sta adfc        ;carry in - for diag
5cc6 : 8553                     sta ad1         ;operand 1 - accumulator
5cc8 : 8554                     sta ad2         ;operand 2 - memory or immediate
5cca : 8d0532                   sta ada2        ;non zp
5ccd : 8555                     sta adrl        ;expected result bits 0-7
5ccf : 8556                     sta adrh        ;expected result bit 8 (carry out)
5cd1 : a9ff                     lda #$ff        ;complemented operand 2 for subtract
5cd3 : 8558                     sta sb2
5cd5 : 8d0632                   sta sba2        ;non zp
5cd8 : a902                     lda #2          ;expected Z-flag
5cda : 8557                     sta adrf
5cdc : 18               tadd    clc             ;test with carry clear
5cdd : 20d75f                   jsr chkadd
5ce0 : e652                     inc adfc        ;now with carry
5ce2 : e655                     inc adrl        ;result +1
5ce4 : 08                       php             ;save N & Z from low result
5ce5 : 08                       php
5ce6 : 68                       pla             ;accu holds expected flags
5ce7 : 2982                     and #$82        ;mask N & Z
5ce9 : 28                       plp
5cea : d002                     bne tadd1
5cec : e656                     inc adrh        ;result bit 8 - carry
5cee : 0556             tadd1   ora adrh        ;merge C to expected flags
5cf0 : 8557                     sta adrf        ;save expected flags except overflow
5cf2 : 38                       sec             ;test with carry set
5cf3 : 20d75f                   jsr chkadd
5cf6 : c652                     dec adfc        ;same for operand +1 but no carry
5cf8 : e653                     inc ad1
5cfa : d0e0                     bne tadd        ;iterate op1
5cfc : a900                     lda #0          ;preset result to op2 when op1 = 0
5cfe : 8556                     sta adrh
5d00 : ee0532                   inc ada2
5d03 : e654                     inc ad2
5d05 : 08                       php             ;save NZ as operand 2 becomes the new result
5d06 : 68                       pla
5d07 : 2982                     and #$82        ;mask N00000Z0
5d09 : 8557                     sta adrf        ;no need to check carry as we are adding to 0
5d0b : c658                     dec sb2         ;complement subtract operand 2
5d0d : ce0632                   dec sba2
5d10 : a554                     lda ad2         
5d12 : 8555                     sta adrl
5d14 : d0c6                     bne tadd        ;iterate op2
                        
5d16 : e054                     cpx #ad2
                                trap_ne         ;x altered during test
5d18 : f003            >        beq skip2717
                       >        trap            ;failed not equal (non zero)
5d1a : 202561          >        jsr report_error
                       >
5d1d :                 >skip2717
                        
5d1d : c0ff                     cpy #$ff
                                trap_ne         ;y altered during test 
5d1f : f003            >        beq skip2719
                       >        trap            ;failed not equal (non zero)
5d21 : 202561          >        jsr report_error
                       >
5d24 :                 >skip2719
                        
5d24 : ba                       tsx
5d25 : e0ff                     cpx #$ff
                                trap_ne         ;sp push/pop mismatch
5d27 : f003            >        beq skip2721
                       >        trap            ;failed not equal (non zero)
5d29 : 202561          >        jsr report_error
                       >
5d2c :                 >skip2721
                        
                                next_test
5d2c : ad0232          >            lda test_case   ;previous test
5d2f : c913            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
5d31 : f003            >        beq skip2724
                       >        trap            ;failed not equal (non zero)
5d33 : 202561          >        jsr report_error
                       >
5d36 :                 >skip2724
                       >
0014 =                 >test_num = test_num + 1
5d36 : a914            >            lda #test_num   ;*** next tests' number
5d38 : 8d0232          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; decimal add/subtract test
                        ; *** WARNING - tests documented behavior only! ***
                        ;   only valid BCD operands are tested, the V flag is ignored
                        ;   although V is declared as beeing valid on the 65C02 it has absolutely
                        ;   no use in BCD math. No sign = no overflow!
                        ; iterates through all valid combinations of operands and carry input
                        ; uses increments/decrements to predict result & carry flag
5d3b : f8                       sed 
5d3c : a254                     ldx #ad2        ;for indexed test
5d3e : a0ff                     ldy #$ff        ;max range
5d40 : a999                     lda #$99        ;start with adding 99 to 99 with carry
5d42 : 8553                     sta ad1         ;operand 1 - accumulator
5d44 : 8554                     sta ad2         ;operand 2 - memory or immediate
5d46 : 8d0532                   sta ada2        ;non zp
5d49 : 8555                     sta adrl        ;expected result bits 0-7
5d4b : a901                     lda #1          ;set carry in & out
5d4d : 8552                     sta adfc        ;carry in - for diag
5d4f : 8556                     sta adrh        ;expected result bit 8 (carry out)
5d51 : a981                     lda #$81        ;set N & C (99 + 99 + C = 99 + C)
5d53 : 8557                     sta adrf
5d55 : a900                     lda #0          ;complemented operand 2 for subtract
5d57 : 8558                     sta sb2
5d59 : 8d0632                   sta sba2        ;non zp
5d5c : 38               tdad    sec             ;test with carry set
5d5d : 20145e                   jsr chkdad
5d60 : c652                     dec adfc        ;now with carry clear
5d62 : a555                     lda adrl        ;decimal adjust result
5d64 : d008                     bne tdad1       ;skip clear carry & preset result 99 (9A-1)
5d66 : c656                     dec adrh
5d68 : a999                     lda #$99
5d6a : 8555                     sta adrl
5d6c : d012                     bne tdad3
5d6e : 290f             tdad1   and #$f         ;lower nibble mask
5d70 : d00c                     bne tdad2       ;no decimal adjust needed
5d72 : c655                     dec adrl        ;decimal adjust (?0-6)
5d74 : c655                     dec adrl
5d76 : c655                     dec adrl
5d78 : c655                     dec adrl
5d7a : c655                     dec adrl
5d7c : c655                     dec adrl
5d7e : c655             tdad2   dec adrl        ;result -1
5d80 : 08               tdad3   php             ;save valid flags
5d81 : 68                       pla
5d82 : 2982                     and #$82        ;N-----Z-
5d84 : 0556                     ora adrh        ;N-----ZC
5d86 : 8557                     sta adrf
5d88 : 18                       clc             ;test with carry clear
5d89 : 20145e                   jsr chkdad
5d8c : e652                     inc adfc        ;same for operand -1 but with carry
5d8e : a553                     lda ad1         ;decimal adjust operand 1
5d90 : f015                     beq tdad5       ;iterate operand 2
5d92 : 290f                     and #$f         ;lower nibble mask
5d94 : d00c                     bne tdad4       ;skip decimal adjust
5d96 : c653                     dec ad1         ;decimal adjust (?0-6)
5d98 : c653                     dec ad1
5d9a : c653                     dec ad1
5d9c : c653                     dec ad1
5d9e : c653                     dec ad1
5da0 : c653                     dec ad1
5da2 : c653             tdad4   dec ad1         ;operand 1 -1
5da4 : 4c5c5d                   jmp tdad        ;iterate op1
                        
5da7 : a999             tdad5   lda #$99        ;precharge op1 max
5da9 : 8553                     sta ad1
5dab : a554                     lda ad2         ;decimal adjust operand 2
5dad : f039                     beq tdad7       ;end of iteration
5daf : 290f                     and #$f         ;lower nibble mask
5db1 : d018                     bne tdad6       ;skip decimal adjust
5db3 : c654                     dec ad2         ;decimal adjust (?0-6)
5db5 : c654                     dec ad2
5db7 : c654                     dec ad2
5db9 : c654                     dec ad2
5dbb : c654                     dec ad2
5dbd : c654                     dec ad2
5dbf : e658                     inc sb2         ;complemented decimal adjust for subtract (?9+6)
5dc1 : e658                     inc sb2
5dc3 : e658                     inc sb2
5dc5 : e658                     inc sb2
5dc7 : e658                     inc sb2
5dc9 : e658                     inc sb2
5dcb : c654             tdad6   dec ad2         ;operand 2 -1
5dcd : e658                     inc sb2         ;complemented operand for subtract
5dcf : a558                     lda sb2
5dd1 : 8d0632                   sta sba2        ;copy as non zp operand
5dd4 : a554                     lda ad2
5dd6 : 8d0532                   sta ada2        ;copy as non zp operand
5dd9 : 8555                     sta adrl        ;new result since op1+carry=00+carry +op2=op2
5ddb : 08                       php             ;save flags
5ddc : 68                       pla
5ddd : 2982                     and #$82        ;N-----Z-
5ddf : 0901                     ora #1          ;N-----ZC
5de1 : 8557                     sta adrf
5de3 : e656                     inc adrh        ;result carry
5de5 : 4c5c5d                   jmp tdad        ;iterate op2
                        
5de8 : e054             tdad7   cpx #ad2
                                trap_ne         ;x altered during test
5dea : f003            >        beq skip2726
                       >        trap            ;failed not equal (non zero)
5dec : 202561          >        jsr report_error
                       >
5def :                 >skip2726
                        
5def : c0ff                     cpy #$ff
                                trap_ne         ;y altered during test 
5df1 : f003            >        beq skip2728
                       >        trap            ;failed not equal (non zero)
5df3 : 202561          >        jsr report_error
                       >
5df6 :                 >skip2728
                        
5df6 : ba                       tsx
5df7 : e0ff                     cpx #$ff
                                trap_ne         ;sp push/pop mismatch
5df9 : f003            >        beq skip2730
                       >        trap            ;failed not equal (non zero)
5dfb : 202561          >        jsr report_error
                       >
5dfe :                 >skip2730
                        
5dfe : d8                       cld
                        
5dff : ad0232                   lda test_case
5e02 : c914                     cmp #test_num
                                trap_ne         ;previous test is out of sequence
5e04 : f003            >        beq skip2732
                       >        trap            ;failed not equal (non zero)
5e06 : 202561          >        jsr report_error
                       >
5e09 :                 >skip2732
                        
5e09 : a9f0                     lda #$f0        ;mark opcode testing complete
5e0b : 8d0232                   sta test_case
                        
                        ; final RAM integrity test
                        ;   verifies that none of the previous tests has altered RAM outside of the
                        ;   designated write areas.
                                check_ram
                       >            ;RAM check disabled - RAM size not set
                        
                        ; *** DEBUG INFO ***
                        ; to debug checksum errors uncomment check_ram in the next_test macro to 
                        ; narrow down the responsible opcode.
                        ; may give false errors when monitor, OS or other background activity is
                        ; allowed during previous tests.
                        
                        
                        ; S U C C E S S ************************************************       
                        ; -------------       
                                success         ;if you get here everything went well
5e0e : 20ee61          >        jsr report_success
                        
                        ; -------------       
                        ; S U C C E S S ************************************************       
5e11 : 4c0034                   jmp start       ;run again      
                        
                        ; core subroutine of the decimal add/subtract test
                        ; *** WARNING - tests documented behavior only! ***
                        ;   only valid BCD operands are tested, V flag is ignored
                        ; iterates through all valid combinations of operands and carry input
                        ; uses increments/decrements to predict result & carry flag
5e14 :                  chkdad
                        ; decimal ADC / SBC zp
5e14 : 08                       php             ;save carry for subtract
5e15 : a553                     lda ad1
5e17 : 6554                     adc ad2         ;perform add
5e19 : 08                       php          
5e1a : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
5e1c : f003            >        beq skip2736
                       >        trap            ;failed not equal (non zero)
5e1e : 202561          >        jsr report_error
                       >
5e21 :                 >skip2736
                        
5e21 : 68                       pla             ;check flags
5e22 : 2983                     and #$83        ;mask N-----ZC
5e24 : c557                     cmp adrf
                                trap_ne         ;bad flags
5e26 : f003            >        beq skip2738
                       >        trap            ;failed not equal (non zero)
5e28 : 202561          >        jsr report_error
                       >
5e2b :                 >skip2738
                        
5e2b : 28                       plp
5e2c : 08                       php             ;save carry for next add
5e2d : a553                     lda ad1
5e2f : e558                     sbc sb2         ;perform subtract
5e31 : 08                       php          
5e32 : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
5e34 : f003            >        beq skip2740
                       >        trap            ;failed not equal (non zero)
5e36 : 202561          >        jsr report_error
                       >
5e39 :                 >skip2740
                        
5e39 : 68                       pla             ;check flags
5e3a : 2983                     and #$83        ;mask N-----ZC
5e3c : c557                     cmp adrf
                                trap_ne         ;bad flags
5e3e : f003            >        beq skip2742
                       >        trap            ;failed not equal (non zero)
5e40 : 202561          >        jsr report_error
                       >
5e43 :                 >skip2742
                        
5e43 : 28                       plp
                        ; decimal ADC / SBC abs
5e44 : 08                       php             ;save carry for subtract
5e45 : a553                     lda ad1
5e47 : 6d0532                   adc ada2        ;perform add
5e4a : 08                       php          
5e4b : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
5e4d : f003            >        beq skip2744
                       >        trap            ;failed not equal (non zero)
5e4f : 202561          >        jsr report_error
                       >
5e52 :                 >skip2744
                        
5e52 : 68                       pla             ;check flags
5e53 : 2983                     and #$83        ;mask N-----ZC
5e55 : c557                     cmp adrf
                                trap_ne         ;bad flags
5e57 : f003            >        beq skip2746
                       >        trap            ;failed not equal (non zero)
5e59 : 202561          >        jsr report_error
                       >
5e5c :                 >skip2746
                        
5e5c : 28                       plp
5e5d : 08                       php             ;save carry for next add
5e5e : a553                     lda ad1
5e60 : ed0632                   sbc sba2        ;perform subtract
5e63 : 08                       php          
5e64 : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
5e66 : f003            >        beq skip2748
                       >        trap            ;failed not equal (non zero)
5e68 : 202561          >        jsr report_error
                       >
5e6b :                 >skip2748
                        
5e6b : 68                       pla             ;check flags
5e6c : 2983                     and #$83        ;mask N-----ZC
5e6e : c557                     cmp adrf
                                trap_ne         ;bad flags
5e70 : f003            >        beq skip2750
                       >        trap            ;failed not equal (non zero)
5e72 : 202561          >        jsr report_error
                       >
5e75 :                 >skip2750
                        
5e75 : 28                       plp
                        ; decimal ADC / SBC #
5e76 : 08                       php             ;save carry for subtract
5e77 : a554                     lda ad2
5e79 : 8d0b32                   sta ex_adci+1   ;set ADC # operand
5e7c : a553                     lda ad1
5e7e : 200a32                   jsr ex_adci     ;execute ADC # in RAM
5e81 : 08                       php          
5e82 : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
5e84 : f003            >        beq skip2752
                       >        trap            ;failed not equal (non zero)
5e86 : 202561          >        jsr report_error
                       >
5e89 :                 >skip2752
                        
5e89 : 68                       pla             ;check flags
5e8a : 2983                     and #$83        ;mask N-----ZC
5e8c : c557                     cmp adrf
                                trap_ne         ;bad flags
5e8e : f003            >        beq skip2754
                       >        trap            ;failed not equal (non zero)
5e90 : 202561          >        jsr report_error
                       >
5e93 :                 >skip2754
                        
5e93 : 28                       plp
5e94 : 08                       php             ;save carry for next add
5e95 : a558                     lda sb2
5e97 : 8d0e32                   sta ex_sbci+1   ;set SBC # operand
5e9a : a553                     lda ad1
5e9c : 200d32                   jsr ex_sbci     ;execute SBC # in RAM
5e9f : 08                       php          
5ea0 : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
5ea2 : f003            >        beq skip2756
                       >        trap            ;failed not equal (non zero)
5ea4 : 202561          >        jsr report_error
                       >
5ea7 :                 >skip2756
                        
5ea7 : 68                       pla             ;check flags
5ea8 : 2983                     and #$83        ;mask N-----ZC
5eaa : c557                     cmp adrf
                                trap_ne         ;bad flags
5eac : f003            >        beq skip2758
                       >        trap            ;failed not equal (non zero)
5eae : 202561          >        jsr report_error
                       >
5eb1 :                 >skip2758
                        
5eb1 : 28                       plp
                        ; decimal ADC / SBC zp,x
5eb2 : 08                       php             ;save carry for subtract
5eb3 : a553                     lda ad1
5eb5 : 7500                     adc 0,x         ;perform add
5eb7 : 08                       php          
5eb8 : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
5eba : f003            >        beq skip2760
                       >        trap            ;failed not equal (non zero)
5ebc : 202561          >        jsr report_error
                       >
5ebf :                 >skip2760
                        
5ebf : 68                       pla             ;check flags
5ec0 : 2983                     and #$83        ;mask N-----ZC
5ec2 : c557                     cmp adrf
                                trap_ne         ;bad flags
5ec4 : f003            >        beq skip2762
                       >        trap            ;failed not equal (non zero)
5ec6 : 202561          >        jsr report_error
                       >
5ec9 :                 >skip2762
                        
5ec9 : 28                       plp
5eca : 08                       php             ;save carry for next add
5ecb : a553                     lda ad1
5ecd : f504                     sbc sb2-ad2,x   ;perform subtract
5ecf : 08                       php          
5ed0 : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
5ed2 : f003            >        beq skip2764
                       >        trap            ;failed not equal (non zero)
5ed4 : 202561          >        jsr report_error
                       >
5ed7 :                 >skip2764
                        
5ed7 : 68                       pla             ;check flags
5ed8 : 2983                     and #$83        ;mask N-----ZC
5eda : c557                     cmp adrf
                                trap_ne         ;bad flags
5edc : f003            >        beq skip2766
                       >        trap            ;failed not equal (non zero)
5ede : 202561          >        jsr report_error
                       >
5ee1 :                 >skip2766
                        
5ee1 : 28                       plp
                        ; decimal ADC / SBC abs,x
5ee2 : 08                       php             ;save carry for subtract
5ee3 : a553                     lda ad1
5ee5 : 7db131                   adc ada2-ad2,x  ;perform add
5ee8 : 08                       php          
5ee9 : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
5eeb : f003            >        beq skip2768
                       >        trap            ;failed not equal (non zero)
5eed : 202561          >        jsr report_error
                       >
5ef0 :                 >skip2768
                        
5ef0 : 68                       pla             ;check flags
5ef1 : 2983                     and #$83        ;mask N-----ZC
5ef3 : c557                     cmp adrf
                                trap_ne         ;bad flags
5ef5 : f003            >        beq skip2770
                       >        trap            ;failed not equal (non zero)
5ef7 : 202561          >        jsr report_error
                       >
5efa :                 >skip2770
                        
5efa : 28                       plp
5efb : 08                       php             ;save carry for next add
5efc : a553                     lda ad1
5efe : fdb231                   sbc sba2-ad2,x  ;perform subtract
5f01 : 08                       php          
5f02 : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
5f04 : f003            >        beq skip2772
                       >        trap            ;failed not equal (non zero)
5f06 : 202561          >        jsr report_error
                       >
5f09 :                 >skip2772
                        
5f09 : 68                       pla             ;check flags
5f0a : 2983                     and #$83        ;mask N-----ZC
5f0c : c557                     cmp adrf
                                trap_ne         ;bad flags
5f0e : f003            >        beq skip2774
                       >        trap            ;failed not equal (non zero)
5f10 : 202561          >        jsr report_error
                       >
5f13 :                 >skip2774
                        
5f13 : 28                       plp
                        ; decimal ADC / SBC abs,y
5f14 : 08                       php             ;save carry for subtract
5f15 : a553                     lda ad1
5f17 : 790631                   adc ada2-$ff,y  ;perform add
5f1a : 08                       php          
5f1b : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
5f1d : f003            >        beq skip2776
                       >        trap            ;failed not equal (non zero)
5f1f : 202561          >        jsr report_error
                       >
5f22 :                 >skip2776
                        
5f22 : 68                       pla             ;check flags
5f23 : 2983                     and #$83        ;mask N-----ZC
5f25 : c557                     cmp adrf
                                trap_ne         ;bad flags
5f27 : f003            >        beq skip2778
                       >        trap            ;failed not equal (non zero)
5f29 : 202561          >        jsr report_error
                       >
5f2c :                 >skip2778
                        
5f2c : 28                       plp
5f2d : 08                       php             ;save carry for next add
5f2e : a553                     lda ad1
5f30 : f90731                   sbc sba2-$ff,y  ;perform subtract
5f33 : 08                       php          
5f34 : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
5f36 : f003            >        beq skip2780
                       >        trap            ;failed not equal (non zero)
5f38 : 202561          >        jsr report_error
                       >
5f3b :                 >skip2780
                        
5f3b : 68                       pla             ;check flags
5f3c : 2983                     and #$83        ;mask N-----ZC
5f3e : c557                     cmp adrf
                                trap_ne         ;bad flags
5f40 : f003            >        beq skip2782
                       >        trap            ;failed not equal (non zero)
5f42 : 202561          >        jsr report_error
                       >
5f45 :                 >skip2782
                        
5f45 : 28                       plp
                        ; decimal ADC / SBC (zp,x)
5f46 : 08                       php             ;save carry for subtract
5f47 : a553                     lda ad1
5f49 : 6144                     adc (lo adi2-ad2,x) ;perform add
5f4b : 08                       php          
5f4c : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
5f4e : f003            >        beq skip2784
                       >        trap            ;failed not equal (non zero)
5f50 : 202561          >        jsr report_error
                       >
5f53 :                 >skip2784
                        
5f53 : 68                       pla             ;check flags
5f54 : 2983                     and #$83        ;mask N-----ZC
5f56 : c557                     cmp adrf
                                trap_ne         ;bad flags
5f58 : f003            >        beq skip2786
                       >        trap            ;failed not equal (non zero)
5f5a : 202561          >        jsr report_error
                       >
5f5d :                 >skip2786
                        
5f5d : 28                       plp
5f5e : 08                       php             ;save carry for next add
5f5f : a553                     lda ad1
5f61 : e146                     sbc (lo sbi2-ad2,x) ;perform subtract
5f63 : 08                       php          
5f64 : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
5f66 : f003            >        beq skip2788
                       >        trap            ;failed not equal (non zero)
5f68 : 202561          >        jsr report_error
                       >
5f6b :                 >skip2788
                        
5f6b : 68                       pla             ;check flags
5f6c : 2983                     and #$83        ;mask N-----ZC
5f6e : c557                     cmp adrf
                                trap_ne         ;bad flags
5f70 : f003            >        beq skip2790
                       >        trap            ;failed not equal (non zero)
5f72 : 202561          >        jsr report_error
                       >
5f75 :                 >skip2790
                        
5f75 : 28                       plp
                        ; decimal ADC / SBC (abs),y
5f76 : 08                       php             ;save carry for subtract
5f77 : a553                     lda ad1
5f79 : 719c                     adc (adiy2),y   ;perform add
5f7b : 08                       php          
5f7c : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
5f7e : f003            >        beq skip2792
                       >        trap            ;failed not equal (non zero)
5f80 : 202561          >        jsr report_error
                       >
5f83 :                 >skip2792
                        
5f83 : 68                       pla             ;check flags
5f84 : 2983                     and #$83        ;mask N-----ZC
5f86 : c557                     cmp adrf
                                trap_ne         ;bad flags
5f88 : f003            >        beq skip2794
                       >        trap            ;failed not equal (non zero)
5f8a : 202561          >        jsr report_error
                       >
5f8d :                 >skip2794
                        
5f8d : 28                       plp
5f8e : 08                       php             ;save carry for next add
5f8f : a553                     lda ad1
5f91 : f19e                     sbc (sbiy2),y   ;perform subtract
5f93 : 08                       php          
5f94 : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
5f96 : f003            >        beq skip2796
                       >        trap            ;failed not equal (non zero)
5f98 : 202561          >        jsr report_error
                       >
5f9b :                 >skip2796
                        
5f9b : 68                       pla             ;check flags
5f9c : 2983                     and #$83        ;mask N-----ZC
5f9e : c557                     cmp adrf
                                trap_ne         ;bad flags
5fa0 : f003            >        beq skip2798
                       >        trap            ;failed not equal (non zero)
5fa2 : 202561          >        jsr report_error
                       >
5fa5 :                 >skip2798
                        
5fa5 : 28                       plp
                        ; decimal ADC / SBC (zp)
5fa6 : 08                       php             ;save carry for subtract
5fa7 : a553                     lda ad1
5fa9 : 7298                     adc (adi2)      ;perform add
5fab : 08                       php          
5fac : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
5fae : f003            >        beq skip2800
                       >        trap            ;failed not equal (non zero)
5fb0 : 202561          >        jsr report_error
                       >
5fb3 :                 >skip2800
                        
5fb3 : 68                       pla             ;check flags
5fb4 : 2983                     and #$83        ;mask N-----ZC
5fb6 : c557                     cmp adrf
                                trap_ne         ;bad flags
5fb8 : f003            >        beq skip2802
                       >        trap            ;failed not equal (non zero)
5fba : 202561          >        jsr report_error
                       >
5fbd :                 >skip2802
                        
5fbd : 28                       plp
5fbe : 08                       php             ;save carry for next add
5fbf : a553                     lda ad1
5fc1 : f29a                     sbc (sbi2)      ;perform subtract
5fc3 : 08                       php          
5fc4 : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
5fc6 : f003            >        beq skip2804
                       >        trap            ;failed not equal (non zero)
5fc8 : 202561          >        jsr report_error
                       >
5fcb :                 >skip2804
                        
5fcb : 68                       pla             ;check flags
5fcc : 2983                     and #$83        ;mask N-----ZC
5fce : c557                     cmp adrf
                                trap_ne         ;bad flags
5fd0 : f003            >        beq skip2806
                       >        trap            ;failed not equal (non zero)
5fd2 : 202561          >        jsr report_error
                       >
5fd5 :                 >skip2806
                        
5fd5 : 28                       plp
5fd6 : 60                       rts
                        
                        ; core subroutine of the full binary add/subtract test
                        ; iterates through all combinations of operands and carry input
                        ; uses increments/decrements to predict result & result flags
5fd7 : a557             chkadd  lda adrf        ;add V-flag if overflow
5fd9 : 2983                     and #$83        ;keep N-----ZC / clear V
5fdb : 48                       pha
5fdc : a553                     lda ad1         ;test sign unequal between operands
5fde : 4554                     eor ad2
5fe0 : 300a                     bmi ckad1       ;no overflow possible - operands have different sign
5fe2 : a553                     lda ad1         ;test sign equal between operands and result
5fe4 : 4555                     eor adrl
5fe6 : 1004                     bpl ckad1       ;no overflow occured - operand and result have same sign
5fe8 : 68                       pla
5fe9 : 0940                     ora #$40        ;set V
5feb : 48                       pha
5fec : 68               ckad1   pla
5fed : 8557                     sta adrf        ;save expected flags
                        ; binary ADC / SBC (zp)
5fef : 08                       php             ;save carry for subtract
5ff0 : a553                     lda ad1
5ff2 : 7298                     adc (adi2)      ;perform add
5ff4 : 08                       php          
5ff5 : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
5ff7 : f003            >        beq skip2808
                       >        trap            ;failed not equal (non zero)
5ff9 : 202561          >        jsr report_error
                       >
5ffc :                 >skip2808
                        
5ffc : 68                       pla             ;check flags
5ffd : 29c3                     and #$c3        ;mask NV----ZC
5fff : c557                     cmp adrf
                                trap_ne         ;bad flags
6001 : f003            >        beq skip2810
                       >        trap            ;failed not equal (non zero)
6003 : 202561          >        jsr report_error
                       >
6006 :                 >skip2810
                        
6006 : 28                       plp
6007 : 08                       php             ;save carry for next add
6008 : a553                     lda ad1
600a : f29a                     sbc (sbi2)      ;perform subtract
600c : 08                       php          
600d : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
600f : f003            >        beq skip2812
                       >        trap            ;failed not equal (non zero)
6011 : 202561          >        jsr report_error
                       >
6014 :                 >skip2812
                        
6014 : 68                       pla             ;check flags
6015 : 29c3                     and #$c3        ;mask NV----ZC
6017 : c557                     cmp adrf
                                trap_ne         ;bad flags
6019 : f003            >        beq skip2814
                       >        trap            ;failed not equal (non zero)
601b : 202561          >        jsr report_error
                       >
601e :                 >skip2814
                        
601e : 28                       plp
601f : 60                       rts
                                
                        ; target for the jump indirect test
6020 : 2660             ji_adr  dw test_ji
6022 : 374c                     dw ji_ret
                        
6024 : 88                       dey
6025 : 88                       dey
6026 :                  test_ji
6026 : 08                       php             ;either SP or Y count will fail, if we do not hit
6027 : 88                       dey
6028 : 88                       dey
6029 : 88                       dey
602a : 28                       plp
                                trap_cs         ;flags loaded?
602b : 9003            >        bcc skip2816
                       >        trap            ;failed carry set
602d : 202561          >        jsr report_error
                       >
6030 :                 >skip2816
                        
                                trap_vs
6030 : 5003            >        bvc skip2818
                       >        trap            ;failed overflow set
6032 : 202561          >        jsr report_error
                       >
6035 :                 >skip2818
                        
                                trap_mi
6035 : 1003            >        bpl skip2820
                       >        trap            ;failed minus (bit 7 set)
6037 : 202561          >        jsr report_error
                       >
603a :                 >skip2820
                        
                                trap_eq 
603a : d003            >        bne skip2822
                       >        trap           ;failed equal (zero)
603c : 202561          >        jsr report_error
                       >
603f :                 >skip2822
                        
603f : c949                     cmp #'I'        ;registers loaded?
                                trap_ne
6041 : f003            >        beq skip2824
                       >        trap            ;failed not equal (non zero)
6043 : 202561          >        jsr report_error
                       >
6046 :                 >skip2824
                        
6046 : e04e                     cpx #'N'
                                trap_ne        
6048 : f003            >        beq skip2826
                       >        trap            ;failed not equal (non zero)
604a : 202561          >        jsr report_error
                       >
604d :                 >skip2826
                        
604d : c041                     cpy #('D'-3)
                                trap_ne
604f : f003            >        beq skip2828
                       >        trap            ;failed not equal (non zero)
6051 : 202561          >        jsr report_error
                       >
6054 :                 >skip2828
                        
6054 : 48                       pha             ;save a,x
6055 : 8a                       txa
6056 : 48                       pha
6057 : ba                       tsx
6058 : e0fd                     cpx #$fd        ;check SP
                                trap_ne
605a : f003            >        beq skip2830
                       >        trap            ;failed not equal (non zero)
605c : 202561          >        jsr report_error
                       >
605f :                 >skip2830
                        
605f : 68                       pla             ;restore x
6060 : aa                       tax
                                set_stat $ff
                       >            load_flag $ff
6061 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
6063 : 48              >            pha         ;use stack to load status
6064 : 28              >            plp
                        
6065 : 68                       pla             ;restore a
6066 : e8                       inx             ;return registers with modifications
6067 : 49aa                     eor #$aa        ;N=1, V=1, Z=0, C=1
6069 : 6cff32                   jmp (ji_tab+2)
606c : ea                       nop
606d : ea                       nop
                                trap            ;runover protection
606e : 202561          >        jsr report_error
                        
6071 : 4c0034                   jmp start       ;catastrophic error - cannot continue
                        
                        ; target for the jump indirect test
6074 : d360             jxi_adr dw  trap_ind
6076 : d360                     dw  trap_ind
6078 : 8260                     dw  test_jxi    ;+4
607a : a14c                     dw  jxi_ret     ;+6
607c : d360                     dw  trap_ind
607e : d360                     dw  trap_ind
                        
6080 : 88                       dey
6081 : 88                       dey
6082 :                  test_jxi
6082 : 08                       php             ;either SP or Y count will fail, if we do not hit
6083 : 88                       dey
6084 : 88                       dey
6085 : 88                       dey
6086 : 28                       plp
                                trap_cs         ;flags loaded?
6087 : 9003            >        bcc skip2835
                       >        trap            ;failed carry set
6089 : 202561          >        jsr report_error
                       >
608c :                 >skip2835
                        
                                trap_vs
608c : 5003            >        bvc skip2837
                       >        trap            ;failed overflow set
608e : 202561          >        jsr report_error
                       >
6091 :                 >skip2837
                        
                                trap_mi
6091 : 1003            >        bpl skip2839
                       >        trap            ;failed minus (bit 7 set)
6093 : 202561          >        jsr report_error
                       >
6096 :                 >skip2839
                        
                                trap_eq 
6096 : d003            >        bne skip2841
                       >        trap           ;failed equal (zero)
6098 : 202561          >        jsr report_error
                       >
609b :                 >skip2841
                        
609b : c958                     cmp #'X'        ;registers loaded?
                                trap_ne
609d : f003            >        beq skip2843
                       >        trap            ;failed not equal (non zero)
609f : 202561          >        jsr report_error
                       >
60a2 :                 >skip2843
                        
60a2 : e004                     cpx #4
                                trap_ne        
60a4 : f003            >        beq skip2845
                       >        trap            ;failed not equal (non zero)
60a6 : 202561          >        jsr report_error
                       >
60a9 :                 >skip2845
                        
60a9 : c046                     cpy #('I'-3)
                                trap_ne
60ab : f003            >        beq skip2847
                       >        trap            ;failed not equal (non zero)
60ad : 202561          >        jsr report_error
                       >
60b0 :                 >skip2847
                        
60b0 : 48                       pha             ;save a,x
60b1 : 8a                       txa
60b2 : 48                       pha
60b3 : ba                       tsx
60b4 : e0fd                     cpx #$fd        ;check SP
                                trap_ne
60b6 : f003            >        beq skip2849
                       >        trap            ;failed not equal (non zero)
60b8 : 202561          >        jsr report_error
                       >
60bb :                 >skip2849
                        
60bb : 68                       pla             ;restore x
60bc : aa                       tax
                                set_stat $ff
                       >            load_flag $ff
60bd : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
60bf : 48              >            pha         ;use stack to load status
60c0 : 28              >            plp
                        
60c1 : 68                       pla             ;restore a
60c2 : e8                       inx             ;return registers with modifications
60c3 : e8                       inx
60c4 : 49aa                     eor #$aa        ;N=1, V=1, Z=0, C=1
60c6 : 7cf932                   jmp (jxi_tab,x)
60c9 : ea                       nop
60ca : ea                       nop
                                trap            ;runover protection
60cb : 202561          >        jsr report_error
                        
60ce : 4c0034                   jmp start       ;catastrophic error - cannot continue
                        
                        ; JMP (abs,x) with bad x
60d1 : ea                       nop
60d2 : ea                       nop
60d3 :                  trap_ind
60d3 : ea                       nop
60d4 : ea                       nop
                                trap            ;near miss indexed indirect jump
60d5 : 202561          >        jsr report_error
                        
60d8 : 4c0034                   jmp start       ;catastrophic error - cannot continue
                        
                        ;trap in case of unexpected IRQ, NMI, BRK, RESET
60db :                  nmi_trap
                                trap            ;check stack for conditions at NMI
60db : 202561          >        jsr report_error
                        
60de : 4c0034                   jmp start       ;catastrophic error - cannot continue
60e1 :                  res_trap
                                trap            ;unexpected RESET
60e1 : 202561          >        jsr report_error
                        
60e4 : 4c0034                   jmp start       ;catastrophic error - cannot continue
                        
60e7 : 88                       dey
60e8 : 88                       dey
60e9 :                  irq_trap                ;BRK test or unextpected BRK or IRQ
60e9 : 08                       php             ;either SP or Y count will fail, if we do not hit
60ea : 88                       dey
60eb : 88                       dey
60ec : 88                       dey
                                ;next traps could be caused by unexpected BRK or IRQ
                                ;check stack for BREAK and originating location
                                ;possible jump/branch into weeds (uninitialized space)
                            if ROM_vectors = 1               
                                cmp #$ff-'B'    ;BRK pass 2 registers loaded?
                                beq break2
                            endif        
60ed : c942                     cmp #'B'        ;BRK pass 1 registers loaded?
                                trap_ne
60ef : f003            >        beq skip2857
                       >        trap            ;failed not equal (non zero)
60f1 : 202561          >        jsr report_error
                       >
60f4 :                 >skip2857
                        
60f4 : e052                     cpx #'R'
                                trap_ne        
60f6 : f003            >        beq skip2859
                       >        trap            ;failed not equal (non zero)
60f8 : 202561          >        jsr report_error
                       >
60fb :                 >skip2859
                        
60fb : c048                     cpy #'K'-3
                                trap_ne
60fd : f003            >        beq skip2861
                       >        trap            ;failed not equal (non zero)
60ff : 202561          >        jsr report_error
                       >
6102 :                 >skip2861
                        
6102 : 8550                     sta irq_a       ;save registers during break test
6104 : 8651                     stx irq_x
6106 : ba                       tsx             ;test break on stack
6107 : bd0201                   lda $102,x
                                cmp_flag 0      ;break test should have B=1 & unused=1 on stack
610a : c930            >            cmp #(0      |fao)&m8    ;expected flags + always on bits
                        
                                trap_ne         ;possible no break flag on stack
610c : f003            >        beq skip2864
                       >        trap            ;failed not equal (non zero)
610e : 202561          >        jsr report_error
                       >
6111 :                 >skip2864
                        
                            if ROM_vectors = 1       
                                pla
                                cmp_flag intdis ;should have added interrupt disable
                                trap_ne
                                tsx
                                cpx #$fc        ;sp -3? (return addr, flags)
                                trap_ne
                                lda $1ff        ;propper return on stack
                                cmp #hi(brk_ret0)
                                trap_ne
                                lda $1fe
                                cmp #lo(brk_ret0)
                                trap_ne
                                load_flag $ff
                                pha
                                ldx irq_x
                                inx             ;return registers with modifications
                                lda irq_a
                                eor #$aa
                                plp             ;N=1, V=1, Z=1, C=1 but original flags should be restored
                                rti
                                trap            ;runover protection
                                jmp start       ;catastrophic error - cannot continue
                                
                        break2                  ;BRK pass 2        
                                cpx #$ff-'R'
                                trap_ne        
                                cpy #$ff-'K'-3
                                trap_ne
                                sta irq_a       ;save registers during break test
                                stx irq_x
                                tsx             ;test break on stack
                                lda $102,x
                                cmp_flag $ff    ;break test should have B=1
                                trap_ne         ;possibly no break flag on stack
                                pla
                                cmp_flag $ff-decmode ;actual passed flags should have decmode cleared
                                trap_ne
                                tsx
                                cpx #$fc        ;sp -3? (return addr, flags)
                                trap_ne
                                lda $1ff        ;propper return on stack
                                cmp #hi(brk_ret1)
                                trap_ne
                                lda $1fe
                                cmp #lo(brk_ret1)
                                trap_ne
                                load_flag intdis
                                pha      
                                ldx irq_x
                                inx             ;return registers with modifications
                                lda irq_a
                                eor #$aa
                                plp             ;N=0, V=0, Z=0, C=0 but original flags should be restored
                                rti
                                trap            ;runover protection
                                jmp start       ;catastrophic error - cannot continue
                            else
                                trap_eq         ;check stack for conditions at BRK
6111 : d003            >        bne skip2866
                       >        trap           ;failed equal (zero)
6113 : 202561          >        jsr report_error
                       >
6116 :                 >skip2866
                        
                            endif
                        
                            if report = 1
                                include "report.i65"
0001 =                  T_ATOM = 1
0002 =                  T_BEEB = 2
                        
                          if (TARGET = T_ATOM)
                        OSRDCH = $FFE3
                        OSWRCH = $FFF4
                          else
                            if (TARGET = T_BEEB)
ffe0 =                  OSRDCH = $FFE0
ffee =                  OSWRCH = $FFEE
                            else
                        ERROR TARGET must be 1 or 2
                            endif
                          endif
                        
                        
                        ;**** report 6502 funtional test errors to standard I/O ****
                        ;
                        ;this include file is part of the 6502 functional tests
                        ;it is used when you configure report = 1 in the tests
                        ;
                        ;to adopt the standard output vectors of your test environment
                        ;you must modify the rchar and rget subroutines in this include
                        ;
                        ;I/O hardware may have to be initialized in report_init
                        
                        ;print message macro - \1 = message location
                        rprt    macro
                                ldx #0
                                lda \1
                        loop\?
                                jsr rchar
                                inx
                                lda \1,x
                                bne loop\?
                                endm
                        
                        ;initialize I/O as required (example: configure & enable ACIA)
6116 :                  report_init
                                ;nothing to initialize
                                rprt rmsg_start
6116 : a200            >        ldx #0
6118 : ad3362          >        lda rmsg_start
611b :                 >loop2868
611b : 202f62          >        jsr rchar
611e : e8              >        inx
611f : bd3362          >        lda rmsg_start,x
6122 : d0f7            >        bne loop2868
                        
6124 : 60                       rts
                                
                        ;show stack (with saved registers), zeropage and absolute memory workspace
                        ;after an error was trapped in the test program
6125 :                  report_error
                        ;save registers
6125 : 08                       php
6126 : 48                       pha
6127 : 8a                       txa
6128 : 48                       pha
6129 : 98                       tya
612a : 48                       pha
612b : d8                       cld
                        ;show stack with index to registers at error
                                rprt rmsg_stack
612c : a200            >        ldx #0
612e : ad4762          >        lda rmsg_stack
6131 :                 >loop2869
6131 : 202f62          >        jsr rchar
6134 : e8              >        inx
6135 : bd4762          >        lda rmsg_stack,x
6138 : d0f7            >        bne loop2869
                        
613a : ba                       tsx
613b : e8                       inx
613c : a901                     lda #1      ;address high
613e : 201b62                   jsr rhex
6141 : 8a                       txa         ;address low
6142 : 201b62                   jsr rhex
6145 : 201762           rstack  jsr rspace
6148 : bd0001                   lda $100,x  ;stack data
614b : 201b62                   jsr rhex
614e : e8                       inx
614f : d0f4                     bne rstack
6151 : 200e62                   jsr rcrlf   ;new line
                        ;show zero page workspace
6154 : a900                     lda #0
6156 : 201b62                   jsr rhex
6159 : a952                     lda #zpt
615b : aa                       tax
615c : 201b62                   jsr rhex
615f : 201762           rzp     jsr rspace
6162 : b500                     lda 0,x
6164 : 201b62                   jsr rhex
6167 : e8                       inx
6168 : e059                     cpx #zp_bss
616a : d0f3                     bne rzp
616c : 200e62                   jsr rcrlf
                        ;show absolute workspace
616f : a932                     lda #hi(data_segment)
6171 : 201b62                   jsr rhex
6174 : a900                     lda #lo(data_segment)
6176 : 201b62                   jsr rhex
6179 : a200                     ldx #0
617b : 201762           rabs    jsr rspace
617e : bd0032                   lda data_segment,x
6181 : 201b62                   jsr rhex
6184 : e8                       inx
6185 : e00a                     cpx #(data_bss-data_segment)
6187 : d0f2                     bne rabs
                        ;ask to continue
                                rprt rmsg_cont
6189 : a200            >        ldx #0
618b : ad6362          >        lda rmsg_cont
618e :                 >loop2870
618e : 202f62          >        jsr rchar
6191 : e8              >        inx
6192 : bd6362          >        lda rmsg_cont,x
6195 : d0f7            >        bne loop2870
                        
6197 : 200462           rerr1   jsr rget
619a : c953                     cmp #'S'
619c : f00b                     beq rskip
619e : c943                     cmp #'C'
61a0 : d0f5                     bne rerr1        
                        ;restore registers
61a2 : 68                       pla
61a3 : a8                       tay
61a4 : 68                       pla
61a5 : aa                       tax
61a6 : 68                       pla 
61a7 : 28                       plp
61a8 : 60                       rts
                        ;skip the current test
61a9 : a9f0             rskip   lda #$f0            ;already end of tests?
61ab : cd0232                   cmp test_case
61ae : f0e7                     beq rerr1           ;skip is not available
61b0 : a2ff                     ldx #$ff            ;clear stack
61b2 : 9a                       txs
61b3 : ee0232                   inc test_case       ;next test
61b6 : a900                     lda #lo(start)      ;find begin of test
61b8 : 8552                     sta zpt
61ba : a934                     lda #hi(start)
61bc : 8553                     sta zpt+1
61be : a004             rskipl1 ldy #4              ;search pattern
61c0 : b152             rskipl2 lda (zpt),y         ;next byte
61c2 : d9e961                   cmp rmark,y
61c5 : d00a                     bne rskipnx         ;no match
61c7 : 88                       dey
61c8 : 300f                     bmi rskipf          ;found pattern        
61ca : c001                     cpy #1              ;skip immediate value
61cc : d0f2                     bne rskipl2
61ce : 88                       dey
61cf : f0ef                     beq rskipl2
                                
61d1 : e652             rskipnx inc zpt             ;next RAM location
61d3 : d0e9                     bne rskipl1
61d5 : e653                     inc zpt+1
61d7 : d0e5                     bne rskipl1
                        
61d9 : a001             rskipf  ldy #1              ;pattern found - check test number
61db : b152                     lda (zpt),y         ;test number
61dd : c9f0                     cmp #$f0            ;end of last test?
61df : f005                     beq rskipe          ;ask to rerun all
61e1 : cd0232                   cmp test_case       ;is next test?
61e4 : d0eb                     bne rskipnx         ;continue searching
61e6 : 6c5200           rskipe  jmp (zpt)           ;start next test or rerun at end of tests
                                
61e9 : a900             rmark   lda #0              ;begin of test search pattern
61eb : 8d0232                   sta test_case
                        
                        ;show test has ended, ask to repeat
61ee :                  report_success
                            if rep_int = 1
                                rprt rmsg_priority
                                lda data_segment    ;show interrupt sequence
                                jsr rhex
                                jsr rspace
                                lda data_segment+1
                                jsr rhex
                                jsr rspace
                                lda data_segment+2
                                jsr rhex
                            endif
                                rprt rmsg_success
61ee : a200            >        ldx #0
61f0 : ad9562          >        lda rmsg_success
61f3 :                 >loop2871
61f3 : 202f62          >        jsr rchar
61f6 : e8              >        inx
61f7 : bd9562          >        lda rmsg_success,x
61fa : d0f7            >        bne loop2871
                        
61fc : 200462           rsuc1   jsr rget
61ff : c952                     cmp #'R'
6201 : d0f9                     bne rsuc1        
6203 : 60                       rts
                        
                        ;input subroutine
                        ;get a character from standard input 
                        ;adjust according to the needs in your test environment
6204 :                  rget                ;get character in A
6204 : 20e0ff                   jsr OSRDCH  ;example: OSRDCH on a Beeb/Atom
                        ;rget1
                        ;        lda $bff1   ;wait RDRF
                        ;        and #8
                        ;        beq rget1
                        ;not a real ACIA - so RDRF is not checked
                        ;        lda $bff0   ;read acia rx reg
                        ;       lda $f004   ;Kowalski simulator default
                        ;the load can be replaced by a call to a kernal routine
                        ;        jsr $ffcf   ;example: CHRIN for a C64
6207 : c961                     cmp #'a'    ;lower case
6209 : 9002                     bcc rget1
620b : 295f                     and #$5f    ;convert to upper case
620d : 60               rget1   rts
                        
                        ;output subroutines
620e : a90a             rcrlf   lda #10
6210 : 202f62                   jsr rchar
6213 : a90d                     lda #13
6215 : d018                     bne rchar
                        
6217 : a920             rspace  lda #' '
6219 : d014                     bne rchar
                                
621b : 48               rhex    pha         ;report hex byte in A
621c : 4a                       lsr a       ;high nibble first
621d : 4a                       lsr a
621e : 4a                       lsr a
621f : 4a                       lsr a
6220 : 202662                   jsr rnib
6223 : 68                       pla         ;now low nibble
6224 : 290f                     and #$f
                        
6226 : 18               rnib    clc         ;report nibble in A
6227 : 6930                     adc #'0'    ;make printable 0-9
6229 : c93a                     cmp #'9'+1
622b : 9002                     bcc rchar
622d : 6906                     adc #6      ;make printable A-F
                        
                        ;send a character to standard output 
                        ;adjust according to the needs in your test environment
                        ;register X needs to be preserved!
622f :                  rchar               ;report character in A
622f : 20eeff                   jsr OSWRCH  ;example: OSWRCH on a Beeb/Atom
                        ;        pha         ;wait TDRF
                        ;rchar1  lda $bff1
                        ;        and #$10
                        ;        beq rchar1
                        ;        pla
                        ;not a real ACIA - so TDRF is not checked
                        ;        sta $bff0   ;write acia tx reg
                        ;        sta $f001   ;Kowalski simulator default
                        ;the store can be replaced by a call to a kernal routine
                        ;        jsr $ffd2   ;example: CHROUT for a C64
6232 : 60                       rts
                        
6233 :                  rmsg_start
6233 : 0a0d5374617274..         db  10,13,"Started testing",10,13,0
6247 :                  rmsg_stack
6247 : 0a0d7265677320..         db  10,13,"regs Y  X  A  PS PCLPCH",10,13,0
6263 :                  rmsg_cont
6263 : 0a0d7072657373..         db  10,13,"press C to continue or S to skip current test",10,13,0
6295 :                  rmsg_success
6295 : 0a0d416c6c2074..         db  10,13,"All tests completed, press R to repeat",10,13,0
                            if rep_int = 1
                        rmsg_priority
                                db  10,13,"interrupt sequence (NMI IRQ BRK) ",0
                            endif
                           
                            endif
                                    
                        ;copy of data to initialize BSS segment
                            if load_data_direct != 1
62c0 :                  zp_init
62c0 : c3824100         zp1_    db  $c3,$82,$41,0   ;test patterns for LDx BIT ROL ROR ASL LSR
62c4 : 7f               zp7f_   db  $7f             ;test pattern for compare  
                        ;logical zeropage operands
62c5 : 001f7180         zpOR_   db  0,$1f,$71,$80   ;test pattern for OR
62c9 : 0fff7f80         zpAN_   db  $0f,$ff,$7f,$80 ;test pattern for AND
62cd : ff0f8f8f         zpEO_   db  $ff,$0f,$8f,$8f ;test pattern for EOR
                        ;indirect addressing pointers
62d1 : 1032             ind1_   dw  abs1            ;indirect pointer to pattern in absolute memory
62d3 : 1132                     dw  abs1+1
62d5 : 1232                     dw  abs1+2
62d7 : 1332                     dw  abs1+3
62d9 : 1432                     dw  abs7f
62db : 1831             inw1_   dw  abs1-$f8        ;indirect pointer for wrap-test pattern
62dd : 0532             indt_   dw  abst            ;indirect pointer to store area in absolute memory
62df : 0632                     dw  abst+1
62e1 : 0732                     dw  abst+2
62e3 : 0832                     dw  abst+3
62e5 : 0d31             inwt_   dw  abst-$f8        ;indirect pointer for wrap-test store
62e7 : 4732             indAN_  dw  absAN           ;indirect pointer to AND pattern in absolute memory
62e9 : 4832                     dw  absAN+1
62eb : 4932                     dw  absAN+2
62ed : 4a32                     dw  absAN+3
62ef : 4b32             indEO_  dw  absEO           ;indirect pointer to EOR pattern in absolute memory
62f1 : 4c32                     dw  absEO+1
62f3 : 4d32                     dw  absEO+2
62f5 : 4e32                     dw  absEO+3
62f7 : 4332             indOR_  dw  absOR           ;indirect pointer to OR pattern in absolute memory
62f9 : 4432                     dw  absOR+1
62fb : 4532                     dw  absOR+2
62fd : 4632                     dw  absOR+3
                        ;add/subtract indirect pointers
62ff : 0532             adi2_   dw  ada2            ;indirect pointer to operand 2 in absolute memory
6301 : 0632             sbi2_   dw  sba2            ;indirect pointer to complemented operand 2 (SBC)
6303 : 0631             adiy2_  dw  ada2-$ff        ;with offset for indirect indexed
6305 : 0731             sbiy2_  dw  sba2-$ff
6307 :                  zp_end
                            if (zp_end - zp_init) != (zp_bss_end - zp_bss)   
                                ;force assembler error if size is different   
                                ERROR ERROR ERROR   ;mismatch between bss and zeropage data
                            endif 
6307 :                  data_init
6307 : 6900             ex_adc_ adc #0              ;execute immediate opcodes
6309 : 60                       rts
630a : e900             ex_sbc_ sbc #0              ;execute immediate opcodes
630c : 60                       rts
630d : c3824100         abs1_   db  $c3,$82,$41,0   ;test patterns for LDx BIT ROL ROR ASL LSR
6311 : 7f               abs7f_  db  $7f             ;test pattern for compare
                        ;loads
6312 : 80800002         fLDx_   db  fn,fn,0,fz      ;expected flags for load
                        ;shifts
6316 :                  rASL_                       ;expected result ASL & ROL -carry  
6316 : 86048200         rROL_   db  $86,$04,$82,0   ; "
631a : 87058301         rROLc_  db  $87,$05,$83,1   ;expected result ROL +carry
631e :                  rLSR_                       ;expected result LSR & ROR -carry
631e : 61412000         rROR_   db  $61,$41,$20,0   ; "
6322 : e1c1a080         rRORc_  db  $e1,$c1,$a0,$80 ;expected result ROR +carry
6326 :                  fASL_                       ;expected flags for shifts
6326 : 81018002         fROL_   db  fnc,fc,fn,fz    ;no carry in
632a : 81018000         fROLc_  db  fnc,fc,fn,0     ;carry in
632e :                  fLSR_
632e : 01000102         fROR_   db  fc,0,fc,fz      ;no carry in
6332 : 81808180         fRORc_  db  fnc,fn,fnc,fn   ;carry in
                        ;increments (decrements)
6336 : 7f80ff0001       rINC_   db  $7f,$80,$ff,0,1 ;expected result for INC/DEC
633b : 0080800200       fINC_   db  0,fn,fn,fz,0    ;expected flags for INC/DEC
                        ;logical memory operand
6340 : 001f7180         absOR_  db  0,$1f,$71,$80   ;test pattern for OR
6344 : 0fff7f80         absAN_  db  $0f,$ff,$7f,$80 ;test pattern for AND
6348 : ff0f8f8f         absEO_  db  $ff,$0f,$8f,$8f ;test pattern for EOR
                        ;logical accu operand
634c : 00f11f00         absORa_ db  0,$f1,$1f,0     ;test pattern for OR
6350 : f0ffffff         absANa_ db  $f0,$ff,$ff,$ff ;test pattern for AND
6354 : fff0f00f         absEOa_ db  $ff,$f0,$f0,$0f ;test pattern for EOR
                        ;logical results
6358 : 00ff7f80         absrlo_ db  0,$ff,$7f,$80
635c : 02800080         absflo_ db  fz,fn,0,fn
6360 :                  data_end
                            if (data_end - data_init) != (data_bss_end - data_bss)
                                ;force assembler error if size is different   
                                ERROR ERROR ERROR   ;mismatch between bss and data
                            endif 
                        
6360 :                  vec_init
6360 : db60                     dw  nmi_trap
6362 : e160                     dw  res_trap
6364 : e960                     dw  irq_trap
fffa =                  vec_bss equ $fffa
                            endif                   ;end of RAM init data
                            
                        ; code at end of image due to the need to add blank space as required
                            if ($ff & (ji_ret - * - 2)) < ($ff & (jxi_ret - * - 2))
                        ; JMP (abs) when $xxff and $xx00 are from same page
                                ds  lo(ji_ret - * - 2)
                                nop
                                nop
                        ji_px   nop             ;low address byte matched with ji_ret 
                                nop
                                trap            ;jmp indirect page cross bug
                        
                        ; JMP (abs,x) when $xxff and $xx00 are from same page
                                ds  lo(jxi_ret - * - 2)
                                nop
                                nop
                        jxi_px  nop             ;low address byte matched with jxi_ret 
                                nop
                                trap            ;jmp indexed indirect page cross bug
                            else
                        ; JMP (abs,x) when $xxff and $xx00 are from same page
6366 : 00000000000000..         ds  lo(jxi_ret - * - 2)
639f : ea                       nop
63a0 : ea                       nop
63a1 : ea               jxi_px  nop             ;low address byte matched with jxi_ret 
63a2 : ea                       nop
                                trap            ;jmp indexed indirect page cross bug
63a3 : 202561          >        jsr report_error
                        
                        
                        ; JMP (abs) when $xxff and $xx00 are from same page
63a6 : 00000000000000..         ds  lo(ji_ret - * - 2)
6435 : ea                       nop
6436 : ea                       nop
6437 : ea               ji_px   nop             ;low address byte matched with ji_ret 
6438 : ea                       nop
                                trap            ;jmp indirect page cross bug
6439 : 202561          >        jsr report_error
                        
                            endif
                            
                            if (load_data_direct = 1) & (ROM_vectors = 1)  
                                org $fffa       ;vectors
                                dw  nmi_trap
                                dw  res_trap
                                dw  irq_trap
                            endif
                        
6437 =                          end start
                        
No errors in pass 2.
Wrote binary from address $3400 through $643b.
Total size 12348 bytes.
Program start address is at $3400 (13312).
