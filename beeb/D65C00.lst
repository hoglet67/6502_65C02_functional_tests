AS65 Assembler for R6502 [1.42].  Copyright 1994-2007, Frank A. Kingswood                                                Page    1
------------------------------------------------ 65C02_extended_opcodes_test.a65c ------------------------------------------------

3125 lines read, no errors in pass 1.
                        ;
                        ; 6 5 C 0 2   E X T E N D E D   O P C O D E S   T E S T
                        ;
                        ; Copyright (C) 2013-2017  Klaus Dormann
                        ;
                        ; This program is free software: you can redistribute it and/or modify
                        ; it under the terms of the GNU General Public License as published by
                        ; the Free Software Foundation, either version 3 of the License, or
                        ; (at your option) any later version.
                        ;
                        ; This program is distributed in the hope that it will be useful,
                        ; but WITHOUT ANY WARRANTY; without even the implied warranty of
                        ; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
                        ; GNU General Public License for more details.
                        ;
                        ; You should have received a copy of the GNU General Public License
                        ; along with this program.  If not, see <http://www.gnu.org/licenses/>.
                        
                        
                        ; This program is designed to test all additional 65C02 opcodes, addressing
                        ; modes and functionality not available in the NMOS version of the 6502.
                        ; The 6502_functional_test is a prerequisite to this test.
                        ; NMI, IRQ, STP & WAI are covered in the 6502_interrupt_test.
                        ; 
                        ; version 04-dec-2017
                        ; contact info at http://2m5.de or email K@2m5.de
                        ;
                        ; assembled with AS65 from http://www.kingswood-consulting.co.uk/assemblers/
                        ; command line switches: -l -m -s2 -w -x -h0
                        ;                         |  |  |   |  |  no page headers in listing
                        ;                         |  |  |   |  65C02 extensions
                        ;                         |  |  |   wide listing (133 char/col)
                        ;                         |  |  write intel hex file instead of binary
                        ;                         |  expand macros in listing
                        ;                         generate pass2 listing
                        ;
                        ; No IO - should be run from a monitor with access to registers.
                        ; To run load intel hex image with a load command, than alter PC to 400 hex
                        ; (code_segment) and enter a go command.
                        ; Loop on program counter determines error or successful completion of test.
                        ; Check listing for relevant traps (jump/branch *).
                        ; Please note that in early tests some instructions will have to be used before
                        ; they are actually tested!
                        ;
                        ; RESET, NMI or IRQ should not occur and will be trapped if vectors are enabled.
                        ; Tests documented behavior of the original 65C02 only!
                        ; Decimal ops will only be tested with valid BCD operands and the V flag will
                        ; be ignored as it is absolutely useless in decimal mode.
                        ;
                        ; Debugging hints:
                        ;     Most of the code is written sequentially. if you hit a trap, check the
                        ;   immediately preceeding code for the instruction to be tested. Results are
                        ;   tested first, flags are checked second by pushing them onto the stack and
                        ;   pulling them to the accumulator after the result was checked. The "real"
                        ;   flags are no longer valid for the tested instruction at this time!
                        ;     If the tested instruction was indexed, the relevant index (X or Y) must
                        ;   also be checked. Opposed to the flags, X and Y registers are still valid.
                        ;
                        ; versions:
                        ;   19-jul-2013  1st version distributed for testing
                        ;   23-jul-2013  fixed BRA out of range due to larger trap macros
                        ;                added RAM integrity check
                        ;   16-aug-2013  added error report to standard output option
                        ;   23-aug-2015  change revoked
                        ;   24-aug-2015  all self modifying immediate opcodes now execute in data RAM
                        ;   28-aug-2015  fixed decimal adc/sbc immediate only testing carry
                        ;   09-feb-2017  fixed RMB/SMB tested when they shouldn't be tested
                        ;   04-dec-2017  fixed BRK not tested for actually going through the IRQ vector
                        ;                added option to skip the remainder of a failing test
                        ;                in report.i65
                        ;                added skip override to undefined opcode as NOP test
                        
                        
                        ; C O N F I G U R A T I O N
                        
                        ;ROM_vectors writable (0=no, 1=yes)
                        ;if ROM vectors can not be used interrupts will not be trapped
                        ;as a consequence BRK can not be tested but will be emulated to test RTI
0000 =                  ROM_vectors = 0
                        
                        ;load_data_direct (0=move from code segment, 1=load directly)
                        ;loading directly is preferred but may not be supported by your platform
                        ;0 produces only consecutive object code, 1 is not suitable for a binary image
0000 =                  load_data_direct = 0
                        
                        ;I_flag behavior (0=force enabled, 1=force disabled, 2=prohibit change, 3=allow
                        ;change) 2 requires extra code and is not recommended.
0003 =                  I_flag = 3
                        
                        ;configure memory - try to stay away from memory used by the system
                        ;zero_page memory start address, $4e (78) consecutive Bytes required
                        ;                                add 2 if I_flag = 2
0050 =                  zero_page = $50
                        
                        ;data_segment memory start address, $63 (99) consecutive Bytes required
                        ; + 12 Bytes at data_segment + $f9 (JMP indirect page cross test)
3200 =                  data_segment = $3200
                            if (data_segment & $ff) != 0
                                ERROR ERROR ERROR low byte of data_segment MUST be $00 !!
                            endif  
                        
                        ;code_segment memory start address, 10kB of consecutive space required
                        ;                                   add 1 kB if I_flag = 2
3400 =                  code_segment = $3400
                        
                        ;added WDC only opcodes WAI & STP (0=test as NOPs, >0=no test)
0000 =                  wdc_op = WDC_OP
                        
                        ;added Rockwell & WDC opcodes BBR, BBS, RMB & SMB
                        ;(0=test as NOPs, 1=full test, >1=no test) 
0000 =                  rkwl_wdc_op = RKWL_OP
                        
                        ;skip testing all undefined opcodes override
                        ;0=test as NOP, >0=skip
0000 =                  skip_nop = 0
                        
                        ;report errors through I/O channel (0=use standard self trap loops, 1=include
                        ;report.i65 as I/O channel, add 3 kB)
0001 =                  report = 1
                        
                        ;RAM integrity test option. Checks for undesired RAM writes.
                        ;set lowest non RAM or RAM mirror address page (-1=disable, 0=64k, $40=16k)
                        ;leave disabled if a monitor, OS or background interrupt is allowed to alter RAM
ffff =                  ram_top = -1
                        
                                noopt       ;do not take shortcuts
                                
                        ;macros for error & success traps to allow user modification
                        ;example:
                        ;trap    macro
                        ;        jsr my_error_handler
                        ;        endm
                        ;trap_eq macro
                        ;        bne skip\?
                        ;        trap           ;failed equal (zero)
                        ;skip\?
                        ;        endm
                        ;
                        ; my_error_handler should pop the calling address from the stack and report it.
                        ; putting larger portions of code (more than 3 bytes) inside the trap macro
                        ; may lead to branch range problems for some tests.
                            if report = 0
                        trap    macro
                                jmp *           ;failed anyway
                                endm
                        trap_eq macro
                                beq *           ;failed equal (zero)
                                endm
                        trap_ne macro
                                bne *           ;failed not equal (non zero)
                                endm
                        trap_cs macro
                                bcs *           ;failed carry set
                                endm
                        trap_cc macro
                                bcc *           ;failed carry clear
                                endm
                        trap_mi macro
                                bmi *           ;failed minus (bit 7 set)
                                endm
                        trap_pl macro
                                bpl *           ;failed plus (bit 7 clear)
                                endm
                        trap_vs macro
                                bvs *           ;failed overflow set
                                endm
                        trap_vc macro
                                bvc *           ;failed overflow clear
                                endm
                        ; please observe that during the test the stack gets invalidated
                        ; therefore a RTS inside the success macro is not possible
                        success macro
                                jmp *           ;test passed, no errors
                                endm
                            endif
                            if report = 1
                        trap    macro
                                jsr report_error
                                endm
                        trap_eq macro
                                bne skip\?
                                trap           ;failed equal (zero)
                        skip\?
                                endm
                        trap_ne macro
                                beq skip\?
                                trap            ;failed not equal (non zero)
                        skip\?
                                endm
                        trap_cs macro
                                bcc skip\?
                                trap            ;failed carry set
                        skip\?
                                endm
                        trap_cc macro
                                bcs skip\?
                                trap            ;failed carry clear
                        skip\?
                                endm
                        trap_mi macro
                                bpl skip\?
                                trap            ;failed minus (bit 7 set)
                        skip\?
                                endm
                        trap_pl macro
                                bmi skip\?
                                trap            ;failed plus (bit 7 clear)
                        skip\?
                                endm
                        trap_vs macro
                                bvc skip\?
                                trap            ;failed overflow set
                        skip\?
                                endm
                        trap_vc macro
                                bvs skip\?
                                trap            ;failed overflow clear
                        skip\?
                                endm
                        ; please observe that during the test the stack gets invalidated
                        ; therefore a RTS inside the success macro is not possible
                        success macro
                                jsr report_success
                                endm
                            endif
                        
                        
0001 =                  carry   equ %00000001   ;flag bits in status
0002 =                  zero    equ %00000010
0004 =                  intdis  equ %00000100
0008 =                  decmode equ %00001000
0010 =                  break   equ %00010000
0020 =                  reserv  equ %00100000
0040 =                  overfl  equ %01000000
0080 =                  minus   equ %10000000
                        
0001 =                  fc      equ carry
0002 =                  fz      equ zero
0003 =                  fzc     equ carry+zero
0040 =                  fv      equ overfl
0042 =                  fvz     equ overfl+zero
0080 =                  fn      equ minus
0081 =                  fnc     equ minus+carry
0082 =                  fnz     equ minus+zero
0083 =                  fnzc    equ minus+zero+carry
00c0 =                  fnv     equ minus+overfl
                        
0030 =                  fao     equ break+reserv    ;bits always on after PHP, BRK
0034 =                  fai     equ fao+intdis      ;+ forced interrupt disable
00ff =                  m8      equ $ff             ;8 bit mask
00fb =                  m8i     equ $ff&~intdis     ;8 bit mask - interrupt disable
                        
                        ;macros to allow masking of status bits.
                        ;masking of interrupt enable/disable on load and compare
                        ;masking of always on bits after PHP or BRK (unused & break) on compare
                                if I_flag = 0
                        load_flag   macro
                                    lda #\1&m8i         ;force enable interrupts (mask I)
                                    endm
                        cmp_flag    macro
                                    cmp #(\1|fao)&m8i   ;I_flag is always enabled + always on bits
                                    endm
                        eor_flag    macro
                                    eor #(\1&m8i|fao)   ;mask I, invert expected flags + always on bits
                                    endm
                                endif
                                if I_flag = 1
                        load_flag   macro
                                    lda #\1|intdis      ;force disable interrupts
                                    endm
                        cmp_flag    macro
                                    cmp #(\1|fai)&m8    ;I_flag is always disabled + always on bits
                                    endm
                        eor_flag    macro
                                    eor #(\1|fai)       ;invert expected flags + always on bits + I
                                    endm
                                endif
                                if I_flag = 2
                        load_flag   macro
                                    lda #\1
                                    ora flag_I_on       ;restore I-flag
                                    and flag_I_off
                                    endm
                        cmp_flag    macro
                                    eor flag_I_on       ;I_flag is never changed
                                    cmp #(\1|fao)&m8i   ;expected flags + always on bits, mask I
                                    endm
                        eor_flag    macro
                                    eor flag_I_on       ;I_flag is never changed
                                    eor #(\1&m8i|fao)   ;mask I, invert expected flags + always on bits
                                    endm
                                endif
                                if I_flag = 3
                        load_flag   macro
                                    lda #\1             ;allow test to change I-flag (no mask)
                                    endm
                        cmp_flag    macro
                                    cmp #(\1|fao)&m8    ;expected flags + always on bits
                                    endm
                        eor_flag    macro
                                    eor #\1|fao         ;invert expected flags + always on bits
                                    endm
                                endif
                        
                        ;macros to set (register|memory|zeropage) & status
                        set_stat    macro       ;setting flags in the processor status register
                                    load_flag \1
                                    pha         ;use stack to load status
                                    plp
                                    endm
                        
                        set_a       macro       ;precharging accu & status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    lda #\1     ;precharge accu
                                    plp
                                    endm
                        
                        set_x       macro       ;precharging index & status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    ldx #\1     ;precharge index x
                                    plp
                                    endm
                        
                        set_y       macro       ;precharging index & status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    ldy #\1     ;precharge index y
                                    plp
                                    endm
                        
                        set_ax      macro       ;precharging indexed accu & immediate status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    lda \1,x    ;precharge accu
                                    plp
                                    endm
                        
                        set_ay      macro       ;precharging indexed accu & immediate status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    lda \1,y    ;precharge accu
                                    plp
                                    endm
                        
                        set_z       macro       ;precharging indexed zp & immediate status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    lda \1,x    ;load to zeropage
                                    sta zpt
                                    plp
                                    endm
                        
                        set_zx      macro       ;precharging zp,x & immediate status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    lda \1,x    ;load to indexed zeropage
                                    sta zpt,x
                                    plp
                                    endm
                        
                        set_abs     macro       ;precharging indexed memory & immediate status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    lda \1,x    ;load to memory
                                    sta abst
                                    plp
                                    endm
                        
                        set_absx    macro       ;precharging abs,x & immediate status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    lda \1,x    ;load to indexed memory
                                    sta abst,x
                                    plp
                                    endm
                        
                        ;macros to test (register|memory|zeropage) & status & (mask)
                        tst_stat    macro       ;testing flags in the processor status register
                                    php         ;save status
                                    pla         ;use stack to retrieve status
                                    pha
                                    cmp_flag \1
                                    trap_ne
                                    plp         ;restore status
                                    endm
                                    
                        tst_a       macro       ;testing result in accu & flags
                                    php         ;save flags
                                    cmp #\1     ;test result
                                    trap_ne
                                    pla         ;load status
                                    pha
                                    cmp_flag \2
                                    trap_ne
                                    plp         ;restore status
                                    endm
                        
                        tst_as      macro       ;testing result in accu & flags, save accu
                                    pha
                                    php         ;save flags
                                    cmp #\1     ;test result
                                    trap_ne
                                    pla         ;load status
                                    pha
                                    cmp_flag \2
                                    trap_ne
                                    plp         ;restore status
                                    pla
                                    endm
                        
                        tst_x       macro       ;testing result in x index & flags
                                    php         ;save flags
                                    cpx #\1     ;test result
                                    trap_ne
                                    pla         ;load status
                                    pha
                                    cmp_flag \2
                                    trap_ne
                                    plp         ;restore status
                                    endm
                        
                        tst_y       macro       ;testing result in y index & flags
                                    php         ;save flags
                                    cpy #\1     ;test result
                                    trap_ne
                                    pla         ;load status
                                    pha
                                    cmp_flag \2
                                    trap_ne
                                    plp         ;restore status
                                    endm
                        
                        tst_ax      macro       ;indexed testing result in accu & flags
                                    php         ;save flags
                                    cmp \1,x    ;test result
                                    trap_ne
                                    pla         ;load status
                                    eor_flag \3
                                    cmp \2,x    ;test flags
                                    trap_ne     ;
                                    endm
                        
                        tst_ay      macro       ;indexed testing result in accu & flags
                                    php         ;save flags
                                    cmp \1,y    ;test result
                                    trap_ne     ;
                                    pla         ;load status
                                    eor_flag \3
                                    cmp \2,y    ;test flags
                                    trap_ne
                                    endm
                                
                        tst_z       macro       ;indexed testing result in zp & flags
                                    php         ;save flags
                                    lda zpt
                                    cmp \1,x    ;test result
                                    trap_ne
                                    pla         ;load status
                                    eor_flag \3
                                    cmp \2,x    ;test flags
                                    trap_ne
                                    endm
                        
                        tst_zx      macro       ;testing result in zp,x & flags
                                    php         ;save flags
                                    lda zpt,x
                                    cmp \1,x    ;test result
                                    trap_ne
                                    pla         ;load status
                                    eor_flag \3
                                    cmp \2,x    ;test flags
                                    trap_ne
                                    endm
                        
                        tst_abs     macro       ;indexed testing result in memory & flags
                                    php         ;save flags
                                    lda abst
                                    cmp \1,x    ;test result
                                    trap_ne
                                    pla         ;load status
                                    eor_flag \3
                                    cmp \2,x    ;test flags
                                    trap_ne
                                    endm
                        
                        tst_absx    macro       ;testing result in abs,x & flags
                                    php         ;save flags
                                    lda abst,x
                                    cmp \1,x    ;test result
                                    trap_ne
                                    pla         ;load status
                                    eor_flag \3
                                    cmp \2,x    ;test flags
                                    trap_ne
                                    endm
                                    
                        ; RAM integrity test
                        ;   verifies that none of the previous tests has altered RAM outside of the
                        ;   designated write areas.
                        ;   uses zpt word as indirect pointer, zpt+2 word as checksum
                                if ram_top > -1
                        check_ram   macro 
                                    cld
                                    lda #0
                                    sta zpt         ;set low byte of indirect pointer
                                    sta zpt+3       ;checksum high byte
                                    ldx #11         ;reset modifiable RAM
                        ccs1\?      sta jxi_tab,x   ;JMP indirect page cross area
                                    dex
                                    bpl ccs1\?
                                    clc
                                    ldx #zp_bss-zero_page ;zeropage - write test area
                        ccs3\?      adc zero_page,x
                                    bcc ccs2\?
                                    inc zpt+3       ;carry to high byte
                                    clc
                        ccs2\?      inx
                                    bne ccs3\?
                                    ldx #hi(abs1)   ;set high byte of indirect pointer
                                    stx zpt+1
                                    ldy #lo(abs1)   ;data after write & execute test area
                        ccs5\?      adc (zpt),y
                                    bcc ccs4\?
                                    inc zpt+3       ;carry to high byte
                                    clc
                        ccs4\?      iny
                                    bne ccs5\?
                                    inx             ;advance RAM high address
                                    stx zpt+1
                                    cpx #ram_top
                                    bne ccs5\?
                                    sta zpt+2       ;checksum low is
                                    cmp ram_chksm   ;checksum low expected
                                    trap_ne         ;checksum mismatch
                                    lda zpt+3       ;checksum high is
                                    cmp ram_chksm+1 ;checksum high expected
                                    trap_ne         ;checksum mismatch
                                    endm            
                                else
                        check_ram   macro
                                    ;RAM check disabled - RAM size not set
                                    endm
                                endif
                                    
                        next_test   macro           ;make sure, tests don't jump the fence
                                    lda test_case   ;previous test
                                    cmp #test_num
                                    trap_ne         ;test is out of sequence
                        test_num = test_num + 1
                                    lda #test_num   ;*** next tests' number
                                    sta test_case
                                    ;check_ram       ;uncomment to find altered RAM after each test
                                    endm
                        
                            if load_data_direct = 1
                                data
                            else
                                bss                 ;uninitialized segment, copy of data at end of code!
                            endif
0050 =                          org zero_page
                        ;break test interrupt save
0050 =                  irq_a   ds  1               ;a register
0051 =                  irq_x   ds  1               ;x register
                            if I_flag = 2
                        ;masking for I bit in status
                        flag_I_on   ds  1           ;or mask to load flags   
                        flag_I_off  ds  1           ;and mask to load flags
                            endif
0052 =                  zpt                         ;5 bytes store/modify test area
                        ;add/subtract operand generation and result/flag prediction
0052 =                  adfc    ds  1               ;carry flag before op
0053 =                  ad1     ds  1               ;operand 1 - accumulator
0054 =                  ad2     ds  1               ;operand 2 - memory / immediate
0055 =                  adrl    ds  1               ;expected result bits 0-7
0056 =                  adrh    ds  1               ;expected result bit 8 (carry)
0057 =                  adrf    ds  1               ;expected flags NV0000ZC (-V in decimal mode)
0058 =                  sb2     ds  1               ;operand 2 complemented for subtract
0059 =                  zp_bss
0059 =                  zp1     db  $c3,$82,$41,0   ;test patterns for LDx BIT ROL ROR ASL LSR
005d =                  zp7f    db  $7f             ;test pattern for compare  
                        ;logical zeropage operands
005e =                  zpOR    db  0,$1f,$71,$80   ;test pattern for OR
0062 =                  zpAN    db  $0f,$ff,$7f,$80 ;test pattern for AND
0066 =                  zpEO    db  $ff,$0f,$8f,$8f ;test pattern for EOR
                        ;indirect addressing pointers
006a =                  ind1    dw  abs1            ;indirect pointer to pattern in absolute memory
006c =                          dw  abs1+1
006e =                          dw  abs1+2
0070 =                          dw  abs1+3
0072 =                          dw  abs7f
0074 =                  inw1    dw  abs1-$f8        ;indirect pointer for wrap-test pattern
0076 =                  indt    dw  abst            ;indirect pointer to store area in absolute memory
0078 =                          dw  abst+1
007a =                          dw  abst+2
007c =                          dw  abst+3
007e =                  inwt    dw  abst-$f8        ;indirect pointer for wrap-test store
0080 =                  indAN   dw  absAN           ;indirect pointer to AND pattern in absolute memory
0082 =                          dw  absAN+1
0084 =                          dw  absAN+2
0086 =                          dw  absAN+3
0088 =                  indEO   dw  absEO           ;indirect pointer to EOR pattern in absolute memory
008a =                          dw  absEO+1
008c =                          dw  absEO+2
008e =                          dw  absEO+3
0090 =                  indOR   dw  absOR           ;indirect pointer to OR pattern in absolute memory
0092 =                          dw  absOR+1
0094 =                          dw  absOR+2
0096 =                          dw  absOR+3
                        ;add/subtract indirect pointers
0098 =                  adi2    dw  ada2            ;indirect pointer to operand 2 in absolute memory
009a =                  sbi2    dw  sba2            ;indirect pointer to complemented operand 2 (SBC)
009c =                  adiy2   dw  ada2-$ff        ;with offset for indirect indexed
009e =                  sbiy2   dw  sba2-$ff
00a0 =                  zp_bss_end
                            
3200 =                          org data_segment
3200 =                  pg_x    ds  2               ;high JMP indirect address for page cross bug
3202 =                  test_case   ds  1           ;current test number
3203 =                  ram_chksm   ds  2           ;checksum for RAM integrity test
                        ;add/subtract operand copy - abs tests write area
3205 =                  abst                        ;5 bytes store/modify test area
3205 =                  ada2    ds  1               ;operand 2
3206 =                  sba2    ds  1               ;operand 2 complemented for subtract
3207 =                          ds  3               ;fill remaining bytes
320a =                  data_bss
                            if load_data_direct = 1
                        ex_adci adc #0              ;execute immediate opcodes
                                rts
                        ex_sbci sbc #0              ;execute immediate opcodes
                                rts
                            else
320a =                  ex_adci ds  3
320d =                  ex_sbci ds  3
                            endif
3210 =                  abs1    db  $c3,$82,$41,0   ;test patterns for LDx BIT ROL ROR ASL LSR
3214 =                  abs7f   db  $7f             ;test pattern for compare
                        ;loads
3215 =                  fLDx    db  fn,fn,0,fz      ;expected flags for load
                        ;shifts
3219 =                  rASL                        ;expected result ASL & ROL -carry  
3219 =                  rROL    db  $86,$04,$82,0   ; "
321d =                  rROLc   db  $87,$05,$83,1   ;expected result ROL +carry
3221 =                  rLSR                        ;expected result LSR & ROR -carry
3221 =                  rROR    db  $61,$41,$20,0   ; "
3225 =                  rRORc   db  $e1,$c1,$a0,$80 ;expected result ROR +carry
3229 =                  fASL                        ;expected flags for shifts
3229 =                  fROL    db  fnc,fc,fn,fz    ;no carry in
322d =                  fROLc   db  fnc,fc,fn,0     ;carry in
3231 =                  fLSR
3231 =                  fROR    db  fc,0,fc,fz      ;no carry in
3235 =                  fRORc   db  fnc,fn,fnc,fn   ;carry in
                        ;increments (decrements)
3239 =                  rINC    db  $7f,$80,$ff,0,1 ;expected result for INC/DEC
323e =                  fINC    db  0,fn,fn,fz,0    ;expected flags for INC/DEC
                        ;logical memory operand
3243 =                  absOR   db  0,$1f,$71,$80   ;test pattern for OR
3247 =                  absAN   db  $0f,$ff,$7f,$80 ;test pattern for AND
324b =                  absEO   db  $ff,$0f,$8f,$8f ;test pattern for EOR
                        ;logical accu operand
324f =                  absORa  db  0,$f1,$1f,0     ;test pattern for OR
3253 =                  absANa  db  $f0,$ff,$ff,$ff ;test pattern for AND
3257 =                  absEOa  db  $ff,$f0,$f0,$0f ;test pattern for EOR
                        ;logical results
325b =                  absrlo  db  0,$ff,$7f,$80
325f =                  absflo  db  fz,fn,0,fn
3263 =                  data_bss_end
                        ;define area for page crossing JMP (abs) & JMP (abs,x) test
32f9 =                  jxi_tab equ data_segment + $100 - 7     ;JMP (jxi_tab,x) x=6
32fd =                  ji_tab  equ data_segment + $100 - 3     ;JMP (ji_tab+2)
3300 =                  jxp_tab equ data_segment + $100         ;JMP (jxp_tab-255) x=255
                        
                        
                                code
3400 =                          org code_segment
3400 : d8               start   cld
3401 : a2ff                     ldx #$ff
3403 : 9a                       txs
3404 : a900                     lda #0          ;*** test 0 = initialize
3406 : 8d0232                   sta test_case
0000 =                  test_num = 0
                        
                        ;stop interrupts before initializing BSS
                            if I_flag = 1
                                sei
                            endif
                            
                        ;initialize I/O for report channel
                            if report = 1
3409 : 20f560                   jsr report_init
                            endif
                            
                        ;initialize BSS segment
                            if load_data_direct != 1
340c : a246                     ldx #zp_end-zp_init-1
340e : bd9f62           ld_zp   lda zp_init,x
3411 : 9559                     sta zp_bss,x
3413 : ca                       dex
3414 : 10f8                     bpl ld_zp
3416 : a258                     ldx #data_end-data_init-1
3418 : bde662           ld_data lda data_init,x
341b : 9d0a32                   sta data_bss,x
341e : ca                       dex
341f : 10f7                     bpl ld_data
                              if ROM_vectors = 1
                                ldx #5
                        ld_vect lda vec_init,x
                                sta vec_bss,x
                                dex
                                bpl ld_vect
                              endif
                            endif
                        
                        ;retain status of interrupt flag
                            if I_flag = 2
                                php
                                pla
                                and #4          ;isolate flag
                                sta flag_I_on   ;or mask
                                eor #lo(~4)     ;reverse
                                sta flag_I_off  ;and mask
                            endif
                                
                        ;generate checksum for RAM integrity test
                            if ram_top > -1
                                lda #0 
                                sta zpt         ;set low byte of indirect pointer
                                sta ram_chksm+1 ;checksum high byte
                                ldx #11         ;reset modifiable RAM
                        gcs1    sta jxi_tab,x   ;JMP indirect page cross area
                                dex
                                bpl gcs1
                                clc
                                ldx #zp_bss-zero_page ;zeropage - write test area
                        gcs3    adc zero_page,x
                                bcc gcs2
                                inc ram_chksm+1 ;carry to high byte
                                clc
                        gcs2    inx
                                bne gcs3
                                ldx #hi(abs1)   ;set high byte of indirect pointer
                                stx zpt+1
                                ldy #lo(abs1)   ;data after write & execute test area
                        gcs5    adc (zpt),y
                                bcc gcs4
                                inc ram_chksm+1 ;carry to high byte
                                clc
                        gcs4    iny
                                bne gcs5
                                inx             ;advance RAM high address
                                stx zpt+1
                                cpx #ram_top
                                bne gcs5
                                sta ram_chksm   ;checksum complete
                            endif
                                next_test            
3421 : ad0232          >            lda test_case   ;previous test
3424 : c900            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
3426 : f003            >        beq skip0002
                       >        trap            ;failed not equal (non zero)
3428 : 200461          >        jsr report_error
                       >
342b :                 >skip0002
                       >
0001 =                 >test_num = test_num + 1
342b : a901            >            lda #test_num   ;*** next tests' number
342d : 8d0232          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ;testing stack operations PHX PHY PLX PLY
3430 : a999                     lda #$99        ;protect a
3432 : a2ff                     ldx #$ff        ;initialize stack
3434 : 9a                       txs
3435 : a255                     ldx #$55
3437 : da                       phx
3438 : a2aa                     ldx #$aa
343a : da                       phx
343b : ecfe01                   cpx $1fe        ;on stack ?
                                trap_ne
343e : f003            >        beq skip0004
                       >        trap            ;failed not equal (non zero)
3440 : 200461          >        jsr report_error
                       >
3443 :                 >skip0004
                        
3443 : ba                       tsx
3444 : e0fd                     cpx #$fd        ;sp decremented?
                                trap_ne
3446 : f003            >        beq skip0006
                       >        trap            ;failed not equal (non zero)
3448 : 200461          >        jsr report_error
                       >
344b :                 >skip0006
                        
344b : 7a                       ply
344c : c0aa                     cpy #$aa        ;successful retreived from stack?
                                trap_ne
344e : f003            >        beq skip0008
                       >        trap            ;failed not equal (non zero)
3450 : 200461          >        jsr report_error
                       >
3453 :                 >skip0008
                        
3453 : 7a                       ply
3454 : c055                     cpy #$55
                                trap_ne
3456 : f003            >        beq skip0010
                       >        trap            ;failed not equal (non zero)
3458 : 200461          >        jsr report_error
                       >
345b :                 >skip0010
                        
345b : ccff01                   cpy $1ff        ;remains on stack?
                                trap_ne
345e : f003            >        beq skip0012
                       >        trap            ;failed not equal (non zero)
3460 : 200461          >        jsr report_error
                       >
3463 :                 >skip0012
                        
3463 : ba                       tsx
3464 : e0ff                     cpx #$ff        ;sp incremented?
                                trap_ne
3466 : f003            >        beq skip0014
                       >        trap            ;failed not equal (non zero)
3468 : 200461          >        jsr report_error
                       >
346b :                 >skip0014
                        
                                
346b : a0a5                     ldy #$a5
346d : 5a                       phy
346e : a05a                     ldy #$5a
3470 : 5a                       phy
3471 : ccfe01                   cpy $1fe        ;on stack ?
                                trap_ne
3474 : f003            >        beq skip0016
                       >        trap            ;failed not equal (non zero)
3476 : 200461          >        jsr report_error
                       >
3479 :                 >skip0016
                        
3479 : ba                       tsx
347a : e0fd                     cpx #$fd        ;sp decremented?
                                trap_ne
347c : f003            >        beq skip0018
                       >        trap            ;failed not equal (non zero)
347e : 200461          >        jsr report_error
                       >
3481 :                 >skip0018
                        
3481 : fa                       plx
3482 : e05a                     cpx #$5a        ;successful retreived from stack?
                                trap_ne
3484 : f003            >        beq skip0020
                       >        trap            ;failed not equal (non zero)
3486 : 200461          >        jsr report_error
                       >
3489 :                 >skip0020
                        
3489 : fa                       plx
348a : e0a5                     cpx #$a5
                                trap_ne
348c : f003            >        beq skip0022
                       >        trap            ;failed not equal (non zero)
348e : 200461          >        jsr report_error
                       >
3491 :                 >skip0022
                        
3491 : ecff01                   cpx $1ff        ;remains on stack?
                                trap_ne
3494 : f003            >        beq skip0024
                       >        trap            ;failed not equal (non zero)
3496 : 200461          >        jsr report_error
                       >
3499 :                 >skip0024
                        
3499 : ba                       tsx
349a : e0ff                     cpx #$ff        ;sp incremented?
                                trap_ne
349c : f003            >        beq skip0026
                       >        trap            ;failed not equal (non zero)
349e : 200461          >        jsr report_error
                       >
34a1 :                 >skip0026
                        
34a1 : c999                     cmp #$99        ;unchanged?
                                trap_ne
34a3 : f003            >        beq skip0028
                       >        trap            ;failed not equal (non zero)
34a5 : 200461          >        jsr report_error
                       >
34a8 :                 >skip0028
                        
                                next_test            
34a8 : ad0232          >            lda test_case   ;previous test
34ab : c901            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
34ad : f003            >        beq skip0031
                       >        trap            ;failed not equal (non zero)
34af : 200461          >        jsr report_error
                       >
34b2 :                 >skip0031
                       >
0002 =                 >test_num = test_num + 1
34b2 : a902            >            lda #test_num   ;*** next tests' number
34b4 : 8d0232          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                                
                        ; test PHX does not alter flags or X but PLX does
34b7 : a0aa                     ldy #$aa        ;protect y
                                set_x 1,$ff     ;push
                       >            load_flag $ff     
34b9 : a9ff            >            lda #$ff                  ;allow test to change I-flag (no mask)
                       >
34bb : 48              >            pha         ;use stack to load status
34bc : a201            >            ldx #1     ;precharge index x
34be : 28              >            plp
                        
34bf : da                       phx
                                tst_x 1,$ff
34c0 : 08              >            php         ;save flags
34c1 : e001            >            cpx #1     ;test result
                       >            trap_ne
34c3 : f003            >        beq skip0036
                       >        trap            ;failed not equal (non zero)
34c5 : 200461          >        jsr report_error
                       >
34c8 :                 >skip0036
                       >
34c8 : 68              >            pla         ;load status
34c9 : 48              >            pha
                       >            cmp_flag $ff
34ca : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
34cc : f003            >        beq skip0039
                       >        trap            ;failed not equal (non zero)
34ce : 200461          >        jsr report_error
                       >
34d1 :                 >skip0039
                       >
34d1 : 28              >            plp         ;restore status
                        
                                set_x 0,0
                       >            load_flag 0
34d2 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
34d4 : 48              >            pha         ;use stack to load status
34d5 : a200            >            ldx #0     ;precharge index x
34d7 : 28              >            plp
                        
34d8 : da                       phx
                                tst_x 0,0
34d9 : 08              >            php         ;save flags
34da : e000            >            cpx #0     ;test result
                       >            trap_ne
34dc : f003            >        beq skip0044
                       >        trap            ;failed not equal (non zero)
34de : 200461          >        jsr report_error
                       >
34e1 :                 >skip0044
                       >
34e1 : 68              >            pla         ;load status
34e2 : 48              >            pha
                       >            cmp_flag 0
34e3 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
34e5 : f003            >        beq skip0047
                       >        trap            ;failed not equal (non zero)
34e7 : 200461          >        jsr report_error
                       >
34ea :                 >skip0047
                       >
34ea : 28              >            plp         ;restore status
                        
                                set_x $ff,$ff
                       >            load_flag $ff
34eb : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
34ed : 48              >            pha         ;use stack to load status
34ee : a2ff            >            ldx #$ff     ;precharge index x
34f0 : 28              >            plp
                        
34f1 : da                       phx
                                tst_x $ff,$ff
34f2 : 08              >            php         ;save flags
34f3 : e0ff            >            cpx #$ff     ;test result
                       >            trap_ne
34f5 : f003            >        beq skip0052
                       >        trap            ;failed not equal (non zero)
34f7 : 200461          >        jsr report_error
                       >
34fa :                 >skip0052
                       >
34fa : 68              >            pla         ;load status
34fb : 48              >            pha
                       >            cmp_flag $ff
34fc : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
34fe : f003            >        beq skip0055
                       >        trap            ;failed not equal (non zero)
3500 : 200461          >        jsr report_error
                       >
3503 :                 >skip0055
                       >
3503 : 28              >            plp         ;restore status
                        
                                set_x 1,0
                       >            load_flag 0
3504 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3506 : 48              >            pha         ;use stack to load status
3507 : a201            >            ldx #1     ;precharge index x
3509 : 28              >            plp
                        
350a : da                       phx
                                tst_x 1,0
350b : 08              >            php         ;save flags
350c : e001            >            cpx #1     ;test result
                       >            trap_ne
350e : f003            >        beq skip0060
                       >        trap            ;failed not equal (non zero)
3510 : 200461          >        jsr report_error
                       >
3513 :                 >skip0060
                       >
3513 : 68              >            pla         ;load status
3514 : 48              >            pha
                       >            cmp_flag 0
3515 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3517 : f003            >        beq skip0063
                       >        trap            ;failed not equal (non zero)
3519 : 200461          >        jsr report_error
                       >
351c :                 >skip0063
                       >
351c : 28              >            plp         ;restore status
                        
                                set_x 0,$ff
                       >            load_flag $ff
351d : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
351f : 48              >            pha         ;use stack to load status
3520 : a200            >            ldx #0     ;precharge index x
3522 : 28              >            plp
                        
3523 : da                       phx
                                tst_x 0,$ff
3524 : 08              >            php         ;save flags
3525 : e000            >            cpx #0     ;test result
                       >            trap_ne
3527 : f003            >        beq skip0068
                       >        trap            ;failed not equal (non zero)
3529 : 200461          >        jsr report_error
                       >
352c :                 >skip0068
                       >
352c : 68              >            pla         ;load status
352d : 48              >            pha
                       >            cmp_flag $ff
352e : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3530 : f003            >        beq skip0071
                       >        trap            ;failed not equal (non zero)
3532 : 200461          >        jsr report_error
                       >
3535 :                 >skip0071
                       >
3535 : 28              >            plp         ;restore status
                        
                                set_x $ff,0
                       >            load_flag 0
3536 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3538 : 48              >            pha         ;use stack to load status
3539 : a2ff            >            ldx #$ff     ;precharge index x
353b : 28              >            plp
                        
353c : da                       phx
                                tst_x $ff,0
353d : 08              >            php         ;save flags
353e : e0ff            >            cpx #$ff     ;test result
                       >            trap_ne
3540 : f003            >        beq skip0076
                       >        trap            ;failed not equal (non zero)
3542 : 200461          >        jsr report_error
                       >
3545 :                 >skip0076
                       >
3545 : 68              >            pla         ;load status
3546 : 48              >            pha
                       >            cmp_flag 0
3547 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3549 : f003            >        beq skip0079
                       >        trap            ;failed not equal (non zero)
354b : 200461          >        jsr report_error
                       >
354e :                 >skip0079
                       >
354e : 28              >            plp         ;restore status
                        
                                set_x 0,$ff     ;pull
                       >            load_flag $ff     
354f : a9ff            >            lda #$ff                  ;allow test to change I-flag (no mask)
                       >
3551 : 48              >            pha         ;use stack to load status
3552 : a200            >            ldx #0     ;precharge index x
3554 : 28              >            plp
                        
3555 : fa                       plx
                                tst_x $ff,$ff-zero
3556 : 08              >            php         ;save flags
3557 : e0ff            >            cpx #$ff     ;test result
                       >            trap_ne
3559 : f003            >        beq skip0084
                       >        trap            ;failed not equal (non zero)
355b : 200461          >        jsr report_error
                       >
355e :                 >skip0084
                       >
355e : 68              >            pla         ;load status
355f : 48              >            pha
                       >            cmp_flag $ff-zero
3560 : c9fd            >            cmp #($ff-zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3562 : f003            >        beq skip0087
                       >        trap            ;failed not equal (non zero)
3564 : 200461          >        jsr report_error
                       >
3567 :                 >skip0087
                       >
3567 : 28              >            plp         ;restore status
                        
                                set_x $ff,0
                       >            load_flag 0
3568 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
356a : 48              >            pha         ;use stack to load status
356b : a2ff            >            ldx #$ff     ;precharge index x
356d : 28              >            plp
                        
356e : fa                       plx
                                tst_x 0,zero
356f : 08              >            php         ;save flags
3570 : e000            >            cpx #0     ;test result
                       >            trap_ne
3572 : f003            >        beq skip0092
                       >        trap            ;failed not equal (non zero)
3574 : 200461          >        jsr report_error
                       >
3577 :                 >skip0092
                       >
3577 : 68              >            pla         ;load status
3578 : 48              >            pha
                       >            cmp_flag zero
3579 : c932            >            cmp #(zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
357b : f003            >        beq skip0095
                       >        trap            ;failed not equal (non zero)
357d : 200461          >        jsr report_error
                       >
3580 :                 >skip0095
                       >
3580 : 28              >            plp         ;restore status
                        
                                set_x $fe,$ff
                       >            load_flag $ff
3581 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3583 : 48              >            pha         ;use stack to load status
3584 : a2fe            >            ldx #$fe     ;precharge index x
3586 : 28              >            plp
                        
3587 : fa                       plx
                                tst_x 1,$ff-zero-minus
3588 : 08              >            php         ;save flags
3589 : e001            >            cpx #1     ;test result
                       >            trap_ne
358b : f003            >        beq skip0100
                       >        trap            ;failed not equal (non zero)
358d : 200461          >        jsr report_error
                       >
3590 :                 >skip0100
                       >
3590 : 68              >            pla         ;load status
3591 : 48              >            pha
                       >            cmp_flag $ff-zero-minus
3592 : c97d            >            cmp #($ff-zero-minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3594 : f003            >        beq skip0103
                       >        trap            ;failed not equal (non zero)
3596 : 200461          >        jsr report_error
                       >
3599 :                 >skip0103
                       >
3599 : 28              >            plp         ;restore status
                        
                                set_x 0,0
                       >            load_flag 0
359a : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
359c : 48              >            pha         ;use stack to load status
359d : a200            >            ldx #0     ;precharge index x
359f : 28              >            plp
                        
35a0 : fa                       plx
                                tst_x $ff,minus
35a1 : 08              >            php         ;save flags
35a2 : e0ff            >            cpx #$ff     ;test result
                       >            trap_ne
35a4 : f003            >        beq skip0108
                       >        trap            ;failed not equal (non zero)
35a6 : 200461          >        jsr report_error
                       >
35a9 :                 >skip0108
                       >
35a9 : 68              >            pla         ;load status
35aa : 48              >            pha
                       >            cmp_flag minus
35ab : c9b0            >            cmp #(minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
35ad : f003            >        beq skip0111
                       >        trap            ;failed not equal (non zero)
35af : 200461          >        jsr report_error
                       >
35b2 :                 >skip0111
                       >
35b2 : 28              >            plp         ;restore status
                        
                                set_x $ff,$ff
                       >            load_flag $ff
35b3 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
35b5 : 48              >            pha         ;use stack to load status
35b6 : a2ff            >            ldx #$ff     ;precharge index x
35b8 : 28              >            plp
                        
35b9 : fa                       plx
                                tst_x 0,$ff-minus
35ba : 08              >            php         ;save flags
35bb : e000            >            cpx #0     ;test result
                       >            trap_ne
35bd : f003            >        beq skip0116
                       >        trap            ;failed not equal (non zero)
35bf : 200461          >        jsr report_error
                       >
35c2 :                 >skip0116
                       >
35c2 : 68              >            pla         ;load status
35c3 : 48              >            pha
                       >            cmp_flag $ff-minus
35c4 : c97f            >            cmp #($ff-minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
35c6 : f003            >        beq skip0119
                       >        trap            ;failed not equal (non zero)
35c8 : 200461          >        jsr report_error
                       >
35cb :                 >skip0119
                       >
35cb : 28              >            plp         ;restore status
                        
                                set_x $fe,0
                       >            load_flag 0
35cc : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
35ce : 48              >            pha         ;use stack to load status
35cf : a2fe            >            ldx #$fe     ;precharge index x
35d1 : 28              >            plp
                        
35d2 : fa                       plx
                                tst_x 1,0
35d3 : 08              >            php         ;save flags
35d4 : e001            >            cpx #1     ;test result
                       >            trap_ne
35d6 : f003            >        beq skip0124
                       >        trap            ;failed not equal (non zero)
35d8 : 200461          >        jsr report_error
                       >
35db :                 >skip0124
                       >
35db : 68              >            pla         ;load status
35dc : 48              >            pha
                       >            cmp_flag 0
35dd : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
35df : f003            >        beq skip0127
                       >        trap            ;failed not equal (non zero)
35e1 : 200461          >        jsr report_error
                       >
35e4 :                 >skip0127
                       >
35e4 : 28              >            plp         ;restore status
                        
35e5 : c0aa                     cpy #$aa        ;Y unchanged
                                trap_ne
35e7 : f003            >        beq skip0129
                       >        trap            ;failed not equal (non zero)
35e9 : 200461          >        jsr report_error
                       >
35ec :                 >skip0129
                        
                                next_test            
35ec : ad0232          >            lda test_case   ;previous test
35ef : c902            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
35f1 : f003            >        beq skip0132
                       >        trap            ;failed not equal (non zero)
35f3 : 200461          >        jsr report_error
                       >
35f6 :                 >skip0132
                       >
0003 =                 >test_num = test_num + 1
35f6 : a903            >            lda #test_num   ;*** next tests' number
35f8 : 8d0232          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                         
                        ; test PHY does not alter flags or Y but PLY does
35fb : a255                     ldx #$55        ;x & a protected
                                set_y 1,$ff     ;push
                       >            load_flag $ff     
35fd : a9ff            >            lda #$ff                  ;allow test to change I-flag (no mask)
                       >
35ff : 48              >            pha         ;use stack to load status
3600 : a001            >            ldy #1     ;precharge index y
3602 : 28              >            plp
                        
3603 : 5a                       phy
                                tst_y 1,$ff
3604 : 08              >            php         ;save flags
3605 : c001            >            cpy #1     ;test result
                       >            trap_ne
3607 : f003            >        beq skip0137
                       >        trap            ;failed not equal (non zero)
3609 : 200461          >        jsr report_error
                       >
360c :                 >skip0137
                       >
360c : 68              >            pla         ;load status
360d : 48              >            pha
                       >            cmp_flag $ff
360e : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3610 : f003            >        beq skip0140
                       >        trap            ;failed not equal (non zero)
3612 : 200461          >        jsr report_error
                       >
3615 :                 >skip0140
                       >
3615 : 28              >            plp         ;restore status
                        
                                set_y 0,0
                       >            load_flag 0
3616 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3618 : 48              >            pha         ;use stack to load status
3619 : a000            >            ldy #0     ;precharge index y
361b : 28              >            plp
                        
361c : 5a                       phy
                                tst_y 0,0
361d : 08              >            php         ;save flags
361e : c000            >            cpy #0     ;test result
                       >            trap_ne
3620 : f003            >        beq skip0145
                       >        trap            ;failed not equal (non zero)
3622 : 200461          >        jsr report_error
                       >
3625 :                 >skip0145
                       >
3625 : 68              >            pla         ;load status
3626 : 48              >            pha
                       >            cmp_flag 0
3627 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3629 : f003            >        beq skip0148
                       >        trap            ;failed not equal (non zero)
362b : 200461          >        jsr report_error
                       >
362e :                 >skip0148
                       >
362e : 28              >            plp         ;restore status
                        
                                set_y $ff,$ff
                       >            load_flag $ff
362f : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3631 : 48              >            pha         ;use stack to load status
3632 : a0ff            >            ldy #$ff     ;precharge index y
3634 : 28              >            plp
                        
3635 : 5a                       phy
                                tst_y $ff,$ff
3636 : 08              >            php         ;save flags
3637 : c0ff            >            cpy #$ff     ;test result
                       >            trap_ne
3639 : f003            >        beq skip0153
                       >        trap            ;failed not equal (non zero)
363b : 200461          >        jsr report_error
                       >
363e :                 >skip0153
                       >
363e : 68              >            pla         ;load status
363f : 48              >            pha
                       >            cmp_flag $ff
3640 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3642 : f003            >        beq skip0156
                       >        trap            ;failed not equal (non zero)
3644 : 200461          >        jsr report_error
                       >
3647 :                 >skip0156
                       >
3647 : 28              >            plp         ;restore status
                        
                                set_y 1,0
                       >            load_flag 0
3648 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
364a : 48              >            pha         ;use stack to load status
364b : a001            >            ldy #1     ;precharge index y
364d : 28              >            plp
                        
364e : 5a                       phy
                                tst_y 1,0
364f : 08              >            php         ;save flags
3650 : c001            >            cpy #1     ;test result
                       >            trap_ne
3652 : f003            >        beq skip0161
                       >        trap            ;failed not equal (non zero)
3654 : 200461          >        jsr report_error
                       >
3657 :                 >skip0161
                       >
3657 : 68              >            pla         ;load status
3658 : 48              >            pha
                       >            cmp_flag 0
3659 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
365b : f003            >        beq skip0164
                       >        trap            ;failed not equal (non zero)
365d : 200461          >        jsr report_error
                       >
3660 :                 >skip0164
                       >
3660 : 28              >            plp         ;restore status
                        
                                set_y 0,$ff
                       >            load_flag $ff
3661 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3663 : 48              >            pha         ;use stack to load status
3664 : a000            >            ldy #0     ;precharge index y
3666 : 28              >            plp
                        
3667 : 5a                       phy
                                tst_y 0,$ff
3668 : 08              >            php         ;save flags
3669 : c000            >            cpy #0     ;test result
                       >            trap_ne
366b : f003            >        beq skip0169
                       >        trap            ;failed not equal (non zero)
366d : 200461          >        jsr report_error
                       >
3670 :                 >skip0169
                       >
3670 : 68              >            pla         ;load status
3671 : 48              >            pha
                       >            cmp_flag $ff
3672 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3674 : f003            >        beq skip0172
                       >        trap            ;failed not equal (non zero)
3676 : 200461          >        jsr report_error
                       >
3679 :                 >skip0172
                       >
3679 : 28              >            plp         ;restore status
                        
                                set_y $ff,0
                       >            load_flag 0
367a : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
367c : 48              >            pha         ;use stack to load status
367d : a0ff            >            ldy #$ff     ;precharge index y
367f : 28              >            plp
                        
3680 : 5a                       phy
                                tst_y $ff,0
3681 : 08              >            php         ;save flags
3682 : c0ff            >            cpy #$ff     ;test result
                       >            trap_ne
3684 : f003            >        beq skip0177
                       >        trap            ;failed not equal (non zero)
3686 : 200461          >        jsr report_error
                       >
3689 :                 >skip0177
                       >
3689 : 68              >            pla         ;load status
368a : 48              >            pha
                       >            cmp_flag 0
368b : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
368d : f003            >        beq skip0180
                       >        trap            ;failed not equal (non zero)
368f : 200461          >        jsr report_error
                       >
3692 :                 >skip0180
                       >
3692 : 28              >            plp         ;restore status
                        
                                set_y 0,$ff     ;pull
                       >            load_flag $ff     
3693 : a9ff            >            lda #$ff                  ;allow test to change I-flag (no mask)
                       >
3695 : 48              >            pha         ;use stack to load status
3696 : a000            >            ldy #0     ;precharge index y
3698 : 28              >            plp
                        
3699 : 7a                       ply
                                tst_y $ff,$ff-zero
369a : 08              >            php         ;save flags
369b : c0ff            >            cpy #$ff     ;test result
                       >            trap_ne
369d : f003            >        beq skip0185
                       >        trap            ;failed not equal (non zero)
369f : 200461          >        jsr report_error
                       >
36a2 :                 >skip0185
                       >
36a2 : 68              >            pla         ;load status
36a3 : 48              >            pha
                       >            cmp_flag $ff-zero
36a4 : c9fd            >            cmp #($ff-zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
36a6 : f003            >        beq skip0188
                       >        trap            ;failed not equal (non zero)
36a8 : 200461          >        jsr report_error
                       >
36ab :                 >skip0188
                       >
36ab : 28              >            plp         ;restore status
                        
                                set_y $ff,0
                       >            load_flag 0
36ac : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
36ae : 48              >            pha         ;use stack to load status
36af : a0ff            >            ldy #$ff     ;precharge index y
36b1 : 28              >            plp
                        
36b2 : 7a                       ply
                                tst_y 0,zero
36b3 : 08              >            php         ;save flags
36b4 : c000            >            cpy #0     ;test result
                       >            trap_ne
36b6 : f003            >        beq skip0193
                       >        trap            ;failed not equal (non zero)
36b8 : 200461          >        jsr report_error
                       >
36bb :                 >skip0193
                       >
36bb : 68              >            pla         ;load status
36bc : 48              >            pha
                       >            cmp_flag zero
36bd : c932            >            cmp #(zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
36bf : f003            >        beq skip0196
                       >        trap            ;failed not equal (non zero)
36c1 : 200461          >        jsr report_error
                       >
36c4 :                 >skip0196
                       >
36c4 : 28              >            plp         ;restore status
                        
                                set_y $fe,$ff
                       >            load_flag $ff
36c5 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
36c7 : 48              >            pha         ;use stack to load status
36c8 : a0fe            >            ldy #$fe     ;precharge index y
36ca : 28              >            plp
                        
36cb : 7a                       ply
                                tst_y 1,$ff-zero-minus
36cc : 08              >            php         ;save flags
36cd : c001            >            cpy #1     ;test result
                       >            trap_ne
36cf : f003            >        beq skip0201
                       >        trap            ;failed not equal (non zero)
36d1 : 200461          >        jsr report_error
                       >
36d4 :                 >skip0201
                       >
36d4 : 68              >            pla         ;load status
36d5 : 48              >            pha
                       >            cmp_flag $ff-zero-minus
36d6 : c97d            >            cmp #($ff-zero-minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
36d8 : f003            >        beq skip0204
                       >        trap            ;failed not equal (non zero)
36da : 200461          >        jsr report_error
                       >
36dd :                 >skip0204
                       >
36dd : 28              >            plp         ;restore status
                        
                                set_y 0,0
                       >            load_flag 0
36de : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
36e0 : 48              >            pha         ;use stack to load status
36e1 : a000            >            ldy #0     ;precharge index y
36e3 : 28              >            plp
                        
36e4 : 7a                       ply
                                tst_y $ff,minus
36e5 : 08              >            php         ;save flags
36e6 : c0ff            >            cpy #$ff     ;test result
                       >            trap_ne
36e8 : f003            >        beq skip0209
                       >        trap            ;failed not equal (non zero)
36ea : 200461          >        jsr report_error
                       >
36ed :                 >skip0209
                       >
36ed : 68              >            pla         ;load status
36ee : 48              >            pha
                       >            cmp_flag minus
36ef : c9b0            >            cmp #(minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
36f1 : f003            >        beq skip0212
                       >        trap            ;failed not equal (non zero)
36f3 : 200461          >        jsr report_error
                       >
36f6 :                 >skip0212
                       >
36f6 : 28              >            plp         ;restore status
                        
                                set_y $ff,$ff
                       >            load_flag $ff
36f7 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
36f9 : 48              >            pha         ;use stack to load status
36fa : a0ff            >            ldy #$ff     ;precharge index y
36fc : 28              >            plp
                        
36fd : 7a                       ply
                                tst_y 0,$ff-minus
36fe : 08              >            php         ;save flags
36ff : c000            >            cpy #0     ;test result
                       >            trap_ne
3701 : f003            >        beq skip0217
                       >        trap            ;failed not equal (non zero)
3703 : 200461          >        jsr report_error
                       >
3706 :                 >skip0217
                       >
3706 : 68              >            pla         ;load status
3707 : 48              >            pha
                       >            cmp_flag $ff-minus
3708 : c97f            >            cmp #($ff-minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
370a : f003            >        beq skip0220
                       >        trap            ;failed not equal (non zero)
370c : 200461          >        jsr report_error
                       >
370f :                 >skip0220
                       >
370f : 28              >            plp         ;restore status
                        
                                set_y $fe,0
                       >            load_flag 0
3710 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3712 : 48              >            pha         ;use stack to load status
3713 : a0fe            >            ldy #$fe     ;precharge index y
3715 : 28              >            plp
                        
3716 : 7a                       ply
                                tst_y 1,0
3717 : 08              >            php         ;save flags
3718 : c001            >            cpy #1     ;test result
                       >            trap_ne
371a : f003            >        beq skip0225
                       >        trap            ;failed not equal (non zero)
371c : 200461          >        jsr report_error
                       >
371f :                 >skip0225
                       >
371f : 68              >            pla         ;load status
3720 : 48              >            pha
                       >            cmp_flag 0
3721 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3723 : f003            >        beq skip0228
                       >        trap            ;failed not equal (non zero)
3725 : 200461          >        jsr report_error
                       >
3728 :                 >skip0228
                       >
3728 : 28              >            plp         ;restore status
                        
3729 : e055                     cpx #$55        ;x unchanged?
                                trap_ne
372b : f003            >        beq skip0230
                       >        trap            ;failed not equal (non zero)
372d : 200461          >        jsr report_error
                       >
3730 :                 >skip0230
                        
                                next_test            
3730 : ad0232          >            lda test_case   ;previous test
3733 : c903            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
3735 : f003            >        beq skip0233
                       >        trap            ;failed not equal (non zero)
3737 : 200461          >        jsr report_error
                       >
373a :                 >skip0233
                       >
0004 =                 >test_num = test_num + 1
373a : a904            >            lda #test_num   ;*** next tests' number
373c : 8d0232          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                         
                        ; PC modifying instructions (BRA, BBR, BBS, 1, 2, 3 byte NOPs, JMP(abs,x))
                        ; testing unconditional branch BRA
                        
373f : a281                     ldx #$81        ;protect unused registers
3741 : a07e                     ldy #$7e
                                set_a 0,$ff
                       >            load_flag $ff
3743 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3745 : 48              >            pha         ;use stack to load status
3746 : a900            >            lda #0     ;precharge accu
3748 : 28              >            plp
                        
3749 : 8003                     bra br1         ;branch should always be taken
                                trap 
374b : 200461          >        jsr report_error
                        
374e :                  br1
                                tst_a 0,$ff
374e : 08              >            php         ;save flags
374f : c900            >            cmp #0     ;test result
                       >            trap_ne
3751 : f003            >        beq skip0239
                       >        trap            ;failed not equal (non zero)
3753 : 200461          >        jsr report_error
                       >
3756 :                 >skip0239
                       >
3756 : 68              >            pla         ;load status
3757 : 48              >            pha
                       >            cmp_flag $ff
3758 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
375a : f003            >        beq skip0242
                       >        trap            ;failed not equal (non zero)
375c : 200461          >        jsr report_error
                       >
375f :                 >skip0242
                       >
375f : 28              >            plp         ;restore status
                        
                                set_a $ff,0
                       >            load_flag 0
3760 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3762 : 48              >            pha         ;use stack to load status
3763 : a9ff            >            lda #$ff     ;precharge accu
3765 : 28              >            plp
                        
3766 : 8003                     bra br2         ;branch should always be taken
                                trap 
3768 : 200461          >        jsr report_error
                        
376b :                  br2
                                tst_a $ff,0
376b : 08              >            php         ;save flags
376c : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
376e : f003            >        beq skip0248
                       >        trap            ;failed not equal (non zero)
3770 : 200461          >        jsr report_error
                       >
3773 :                 >skip0248
                       >
3773 : 68              >            pla         ;load status
3774 : 48              >            pha
                       >            cmp_flag 0
3775 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3777 : f003            >        beq skip0251
                       >        trap            ;failed not equal (non zero)
3779 : 200461          >        jsr report_error
                       >
377c :                 >skip0251
                       >
377c : 28              >            plp         ;restore status
                        
377d : e081                     cpx #$81
                                trap_ne
377f : f003            >        beq skip0253
                       >        trap            ;failed not equal (non zero)
3781 : 200461          >        jsr report_error
                       >
3784 :                 >skip0253
                        
3784 : c07e                     cpy #$7e
                                trap_ne
3786 : f003            >        beq skip0255
                       >        trap            ;failed not equal (non zero)
3788 : 200461          >        jsr report_error
                       >
378b :                 >skip0255
                        
                                next_test            
378b : ad0232          >            lda test_case   ;previous test
378e : c904            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
3790 : f003            >        beq skip0258
                       >        trap            ;failed not equal (non zero)
3792 : 200461          >        jsr report_error
                       >
3795 :                 >skip0258
                       >
0005 =                 >test_num = test_num + 1
3795 : a905            >            lda #test_num   ;*** next tests' number
3797 : 8d0232          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                                
379a : a000                     ldy #0          ;branch range test  
379c : 8076                     bra bra0
                                
379e : c001             bra1    cpy #1
                                trap_ne         ;long range backward
37a0 : f003            >        beq skip0260
                       >        trap            ;failed not equal (non zero)
37a2 : 200461          >        jsr report_error
                       >
37a5 :                 >skip0260
                        
37a5 : c8                       iny        
37a6 : 8062                     bra bra2
                                        
37a8 : c003             bra3    cpy #3
                                trap_ne         ;long range backward
37aa : f003            >        beq skip0262
                       >        trap            ;failed not equal (non zero)
37ac : 200461          >        jsr report_error
                       >
37af :                 >skip0262
                        
37af : c8                       iny        
37b0 : 804e                     bra bra4
                                        
37b2 : c005             bra5    cpy #5
                                trap_ne         ;long range backward
37b4 : f003            >        beq skip0264
                       >        trap            ;failed not equal (non zero)
37b6 : 200461          >        jsr report_error
                       >
37b9 :                 >skip0264
                        
37b9 : c8                       iny        
37ba : a000                     ldy #0
37bc : 8004                     bra brf0
                                
37be : c8                       iny
37bf : c8                       iny
37c0 : c8                       iny
37c1 : c8                       iny        
37c2 : 8003             brf0    bra brf1
                        
37c4 : c8                       iny
37c5 : c8                       iny
37c6 : c8                       iny
37c7 : c8               brf1    iny        
37c8 : 8002                     bra brf2
                                
37ca : c8                       iny
37cb : c8                       iny
37cc : c8               brf2    iny
37cd : c8                       iny        
37ce : 8001                     bra brf3
                                
37d0 : c8                       iny
37d1 : c8               brf3    iny
37d2 : c8                       iny
37d3 : c8                       iny        
37d4 : 8000                     bra brf4
                                
37d6 : c8               brf4    iny
37d7 : c8                       iny
37d8 : c8                       iny
37d9 : c8                       iny
37da : c00a                     cpy #10
                                trap_ne     ;short range forward
37dc : f003            >        beq skip0266
                       >        trap            ;failed not equal (non zero)
37de : 200461          >        jsr report_error
                       >
37e1 :                 >skip0266
                        
37e1 : 8012                     bra brb0
                        
37e3 : 88               brb4    dey
37e4 : 88                       dey
37e5 : 88                       dey
37e6 : 88                       dey
37e7 : 800e                     bra brb5        
                        
37e9 : 88               brb3    dey
37ea : 88                       dey
37eb : 88                       dey
37ec : 80f5                     bra brb4        
                        
37ee : 88               brb2    dey
37ef : 88                       dey
37f0 : 80f7                     bra brb3        
                        
37f2 : 88               brb1    dey
37f3 : 80f9                     bra brb2        
                        
37f5 : 80fb             brb0    bra brb1        
                        
37f7 : c000             brb5    cpy #0
                                trap_ne     ;short range backward
37f9 : f003            >        beq skip0268
                       >        trap            ;failed not equal (non zero)
37fb : 200461          >        jsr report_error
                       >
37fe :                 >skip0268
                        
37fe : 801e                     bra bra6
                        
3800 : c004             bra4    cpy #4
                                trap_ne     ;long range forward
3802 : f003            >        beq skip0270
                       >        trap            ;failed not equal (non zero)
3804 : 200461          >        jsr report_error
                       >
3807 :                 >skip0270
                        
3807 : c8                       iny        
3808 : 80a8                     bra bra5
                                        
380a : c002             bra2    cpy #2
                                trap_ne     ;long range forward
380c : f003            >        beq skip0272
                       >        trap            ;failed not equal (non zero)
380e : 200461          >        jsr report_error
                       >
3811 :                 >skip0272
                        
3811 : c8                       iny        
3812 : 8094                     bra bra3
                                        
3814 : c000             bra0    cpy #0
                                trap_ne     ;long range forward
3816 : f003            >        beq skip0274
                       >        trap            ;failed not equal (non zero)
3818 : 200461          >        jsr report_error
                       >
381b :                 >skip0274
                        
381b : c8                       iny        
381c : 8080                     bra bra1
                                        
381e :                  bra6
                                next_test
381e : ad0232          >            lda test_case   ;previous test
3821 : c905            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
3823 : f003            >        beq skip0277
                       >        trap            ;failed not equal (non zero)
3825 : 200461          >        jsr report_error
                       >
3828 :                 >skip0277
                       >
0006 =                 >test_num = test_num + 1
3828 : a906            >            lda #test_num   ;*** next tests' number
382a : 8d0232          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                                
                            if rkwl_wdc_op = 1
                        ; testing BBR & BBS
                        
                        bbt     macro           ;\1 = bitnum
                                lda #(1<<\1)    ;testing 1 bit on
                                sta zpt
                                set_a $33,0     ;with flags off
                                bbr \1,zpt,fail1\?
                                bbs \1,zpt,ok1\?
                                trap            ;bbs branch not taken
                        fail1\?
                                trap            ;bbr branch taken
                        ok1\?   
                                tst_a $33,0
                                set_a $cc,$ff   ;with flags on
                                bbr \1,zpt,fail2\?
                                bbs \1,zpt,ok2\?
                                trap            ;bbs branch not taken
                        fail2\? 
                                trap            ;bbr branch taken
                        ok2\?   
                                tst_a $cc,$ff
                                lda zpt
                                cmp #(1<<\1)
                                trap_ne         ;zp altered
                                lda #$ff-(1<<\1) ;testing 1 bit off
                                sta zpt
                                set_a $33,0     ;with flags off
                                bbs \1,zpt,fail3\?
                                bbr \1,zpt,ok3\?
                                trap            ;bbr branch not taken
                        fail3\? 
                                trap            ;bbs branch taken
                        ok3\?   
                                tst_a $33,0
                                set_a $cc,$ff   ;with flags on
                                bbs \1,zpt,fail4\?
                                bbr \1,zpt,ok4\?
                                trap            ;bbr branch not taken
                        fail4\? 
                                trap            ;bbs branch taken
                        ok4\?   
                                tst_a $cc,$ff
                                lda zpt
                                cmp #$ff-(1<<\1)
                                trap_ne         ;zp altered
                                endm
                        
                                ldx #$11        ;test bbr/bbs integrity
                                ldy #$22
                                bbt 0
                                bbt 1
                                bbt 2
                                bbt 3
                                bbt 4
                                bbt 5
                                bbt 6
                                bbt 7
                                cpx #$11
                                trap_ne         ;x overwritten
                                cpy #$22
                                trap_ne         ;y overwritten
                                next_test 
                        
                        bbrc    macro           ;\1 = bitnum
                                bbr \1,zpt,skip\?
                                eor #(1<<\1)       
                        skip\?
                                endm
                        bbsc    macro           ;\1 = bitnum
                                bbs \1,zpt,skip\?
                                eor #(1<<\1)       
                        skip\?
                                endm
                        
                                lda #0          ;combined bit test
                                sta zpt
                        bbcl    lda #0
                                bbrc 0
                                bbrc 1
                                bbrc 2
                                bbrc 3
                                bbrc 4
                                bbrc 5
                                bbrc 6
                                bbrc 7
                                eor zpt
                                trap_ne         ;failed bbr bitnum in accu       
                                lda #$ff
                                bbsc 0
                                bbsc 1
                                bbsc 2
                                bbsc 3
                                bbsc 4
                                bbsc 5
                                bbsc 6
                                bbsc 7
                                eor zpt
                                trap_ne         ;failed bbs bitnum in accu       
                                inc zpt
                                bne bbcl
                                next_test            
                            endif
                            
                        ; testing NOP
                        
                        nop_test    macro       ;\1 = opcode, \2 = # of bytes
                                    ldy #$42
                                    ldx #4-\2
                                    db  \1          ;test nop length
                                if \2 = 1
                                    dex
                                    dex
                                endif
                                if \2 = 2
                                    iny
                                    dex
                                endif
                                if \2 = 3
                                    iny
                                    iny
                                endif
                                    dex
                                    trap_ne         ;wrong number of bytes
                                    set_a $ff-\1,0
                                    db  \1          ;test nop integrity - flags off
                                    nop
                                    nop
                                    tst_a $ff-\1,0
                                    set_a $aa-\1,$ff
                                    db  \1          ;test nop integrity - flags on
                                    nop
                                    nop
                                    tst_a $aa-\1,$ff
                                    cpy #$42
                                    trap_ne         ;y changed
                                    cpx #0
                                    trap_ne         ;x changed
                                    endm
                        
                            if skip_nop = 0
                                nop_test $02,2
382d : a042            >            ldy #$42
382f : a202            >            ldx #4-2
3831 : 02              >            db  $02          ;test nop length
                       >        if 2 = 1
                       >            dex
                       >            dex
                       >        endif
                       >        if 2 = 2
3832 : c8              >            iny
3833 : ca              >            dex
                       >        endif
                       >        if 2 = 3
                       >            iny
                       >            iny
                       >        endif
3834 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
3835 : f003            >        beq skip0280
                       >        trap            ;failed not equal (non zero)
3837 : 200461          >        jsr report_error
                       >
383a :                 >skip0280
                       >
                       >            set_a $ff-$02,0
                       >            load_flag 0
383a : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
383c : 48              >            pha         ;use stack to load status
383d : a9fd            >            lda #$ff-$02     ;precharge accu
383f : 28              >            plp
                       >
3840 : 02              >            db  $02          ;test nop integrity - flags off
3841 : ea              >            nop
3842 : ea              >            nop
                       >            tst_a $ff-$02,0
3843 : 08              >            php         ;save flags
3844 : c9fd            >            cmp #$ff-$02     ;test result
                       >            trap_ne
3846 : f003            >        beq skip0285
                       >        trap            ;failed not equal (non zero)
3848 : 200461          >        jsr report_error
                       >
384b :                 >skip0285
                       >
384b : 68              >            pla         ;load status
384c : 48              >            pha
                       >            cmp_flag 0
384d : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
384f : f003            >        beq skip0288
                       >        trap            ;failed not equal (non zero)
3851 : 200461          >        jsr report_error
                       >
3854 :                 >skip0288
                       >
3854 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$02,$ff
                       >            load_flag $ff
3855 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3857 : 48              >            pha         ;use stack to load status
3858 : a9a8            >            lda #$aa-$02     ;precharge accu
385a : 28              >            plp
                       >
385b : 02              >            db  $02          ;test nop integrity - flags on
385c : ea              >            nop
385d : ea              >            nop
                       >            tst_a $aa-$02,$ff
385e : 08              >            php         ;save flags
385f : c9a8            >            cmp #$aa-$02     ;test result
                       >            trap_ne
3861 : f003            >        beq skip0293
                       >        trap            ;failed not equal (non zero)
3863 : 200461          >        jsr report_error
                       >
3866 :                 >skip0293
                       >
3866 : 68              >            pla         ;load status
3867 : 48              >            pha
                       >            cmp_flag $ff
3868 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
386a : f003            >        beq skip0296
                       >        trap            ;failed not equal (non zero)
386c : 200461          >        jsr report_error
                       >
386f :                 >skip0296
                       >
386f : 28              >            plp         ;restore status
                       >
3870 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
3872 : f003            >        beq skip0298
                       >        trap            ;failed not equal (non zero)
3874 : 200461          >        jsr report_error
                       >
3877 :                 >skip0298
                       >
3877 : e000            >            cpx #0
                       >            trap_ne         ;x changed
3879 : f003            >        beq skip0300
                       >        trap            ;failed not equal (non zero)
387b : 200461          >        jsr report_error
                       >
387e :                 >skip0300
                       >
                        
                                nop_test $22,2
387e : a042            >            ldy #$42
3880 : a202            >            ldx #4-2
3882 : 22              >            db  $22          ;test nop length
                       >        if 2 = 1
                       >            dex
                       >            dex
                       >        endif
                       >        if 2 = 2
3883 : c8              >            iny
3884 : ca              >            dex
                       >        endif
                       >        if 2 = 3
                       >            iny
                       >            iny
                       >        endif
3885 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
3886 : f003            >        beq skip0303
                       >        trap            ;failed not equal (non zero)
3888 : 200461          >        jsr report_error
                       >
388b :                 >skip0303
                       >
                       >            set_a $ff-$22,0
                       >            load_flag 0
388b : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
388d : 48              >            pha         ;use stack to load status
388e : a9dd            >            lda #$ff-$22     ;precharge accu
3890 : 28              >            plp
                       >
3891 : 22              >            db  $22          ;test nop integrity - flags off
3892 : ea              >            nop
3893 : ea              >            nop
                       >            tst_a $ff-$22,0
3894 : 08              >            php         ;save flags
3895 : c9dd            >            cmp #$ff-$22     ;test result
                       >            trap_ne
3897 : f003            >        beq skip0308
                       >        trap            ;failed not equal (non zero)
3899 : 200461          >        jsr report_error
                       >
389c :                 >skip0308
                       >
389c : 68              >            pla         ;load status
389d : 48              >            pha
                       >            cmp_flag 0
389e : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
38a0 : f003            >        beq skip0311
                       >        trap            ;failed not equal (non zero)
38a2 : 200461          >        jsr report_error
                       >
38a5 :                 >skip0311
                       >
38a5 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$22,$ff
                       >            load_flag $ff
38a6 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
38a8 : 48              >            pha         ;use stack to load status
38a9 : a988            >            lda #$aa-$22     ;precharge accu
38ab : 28              >            plp
                       >
38ac : 22              >            db  $22          ;test nop integrity - flags on
38ad : ea              >            nop
38ae : ea              >            nop
                       >            tst_a $aa-$22,$ff
38af : 08              >            php         ;save flags
38b0 : c988            >            cmp #$aa-$22     ;test result
                       >            trap_ne
38b2 : f003            >        beq skip0316
                       >        trap            ;failed not equal (non zero)
38b4 : 200461          >        jsr report_error
                       >
38b7 :                 >skip0316
                       >
38b7 : 68              >            pla         ;load status
38b8 : 48              >            pha
                       >            cmp_flag $ff
38b9 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
38bb : f003            >        beq skip0319
                       >        trap            ;failed not equal (non zero)
38bd : 200461          >        jsr report_error
                       >
38c0 :                 >skip0319
                       >
38c0 : 28              >            plp         ;restore status
                       >
38c1 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
38c3 : f003            >        beq skip0321
                       >        trap            ;failed not equal (non zero)
38c5 : 200461          >        jsr report_error
                       >
38c8 :                 >skip0321
                       >
38c8 : e000            >            cpx #0
                       >            trap_ne         ;x changed
38ca : f003            >        beq skip0323
                       >        trap            ;failed not equal (non zero)
38cc : 200461          >        jsr report_error
                       >
38cf :                 >skip0323
                       >
                        
                                nop_test $42,2
38cf : a042            >            ldy #$42
38d1 : a202            >            ldx #4-2
38d3 : 42              >            db  $42          ;test nop length
                       >        if 2 = 1
                       >            dex
                       >            dex
                       >        endif
                       >        if 2 = 2
38d4 : c8              >            iny
38d5 : ca              >            dex
                       >        endif
                       >        if 2 = 3
                       >            iny
                       >            iny
                       >        endif
38d6 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
38d7 : f003            >        beq skip0326
                       >        trap            ;failed not equal (non zero)
38d9 : 200461          >        jsr report_error
                       >
38dc :                 >skip0326
                       >
                       >            set_a $ff-$42,0
                       >            load_flag 0
38dc : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
38de : 48              >            pha         ;use stack to load status
38df : a9bd            >            lda #$ff-$42     ;precharge accu
38e1 : 28              >            plp
                       >
38e2 : 42              >            db  $42          ;test nop integrity - flags off
38e3 : ea              >            nop
38e4 : ea              >            nop
                       >            tst_a $ff-$42,0
38e5 : 08              >            php         ;save flags
38e6 : c9bd            >            cmp #$ff-$42     ;test result
                       >            trap_ne
38e8 : f003            >        beq skip0331
                       >        trap            ;failed not equal (non zero)
38ea : 200461          >        jsr report_error
                       >
38ed :                 >skip0331
                       >
38ed : 68              >            pla         ;load status
38ee : 48              >            pha
                       >            cmp_flag 0
38ef : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
38f1 : f003            >        beq skip0334
                       >        trap            ;failed not equal (non zero)
38f3 : 200461          >        jsr report_error
                       >
38f6 :                 >skip0334
                       >
38f6 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$42,$ff
                       >            load_flag $ff
38f7 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
38f9 : 48              >            pha         ;use stack to load status
38fa : a968            >            lda #$aa-$42     ;precharge accu
38fc : 28              >            plp
                       >
38fd : 42              >            db  $42          ;test nop integrity - flags on
38fe : ea              >            nop
38ff : ea              >            nop
                       >            tst_a $aa-$42,$ff
3900 : 08              >            php         ;save flags
3901 : c968            >            cmp #$aa-$42     ;test result
                       >            trap_ne
3903 : f003            >        beq skip0339
                       >        trap            ;failed not equal (non zero)
3905 : 200461          >        jsr report_error
                       >
3908 :                 >skip0339
                       >
3908 : 68              >            pla         ;load status
3909 : 48              >            pha
                       >            cmp_flag $ff
390a : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
390c : f003            >        beq skip0342
                       >        trap            ;failed not equal (non zero)
390e : 200461          >        jsr report_error
                       >
3911 :                 >skip0342
                       >
3911 : 28              >            plp         ;restore status
                       >
3912 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
3914 : f003            >        beq skip0344
                       >        trap            ;failed not equal (non zero)
3916 : 200461          >        jsr report_error
                       >
3919 :                 >skip0344
                       >
3919 : e000            >            cpx #0
                       >            trap_ne         ;x changed
391b : f003            >        beq skip0346
                       >        trap            ;failed not equal (non zero)
391d : 200461          >        jsr report_error
                       >
3920 :                 >skip0346
                       >
                        
                                nop_test $62,2
3920 : a042            >            ldy #$42
3922 : a202            >            ldx #4-2
3924 : 62              >            db  $62          ;test nop length
                       >        if 2 = 1
                       >            dex
                       >            dex
                       >        endif
                       >        if 2 = 2
3925 : c8              >            iny
3926 : ca              >            dex
                       >        endif
                       >        if 2 = 3
                       >            iny
                       >            iny
                       >        endif
3927 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
3928 : f003            >        beq skip0349
                       >        trap            ;failed not equal (non zero)
392a : 200461          >        jsr report_error
                       >
392d :                 >skip0349
                       >
                       >            set_a $ff-$62,0
                       >            load_flag 0
392d : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
392f : 48              >            pha         ;use stack to load status
3930 : a99d            >            lda #$ff-$62     ;precharge accu
3932 : 28              >            plp
                       >
3933 : 62              >            db  $62          ;test nop integrity - flags off
3934 : ea              >            nop
3935 : ea              >            nop
                       >            tst_a $ff-$62,0
3936 : 08              >            php         ;save flags
3937 : c99d            >            cmp #$ff-$62     ;test result
                       >            trap_ne
3939 : f003            >        beq skip0354
                       >        trap            ;failed not equal (non zero)
393b : 200461          >        jsr report_error
                       >
393e :                 >skip0354
                       >
393e : 68              >            pla         ;load status
393f : 48              >            pha
                       >            cmp_flag 0
3940 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3942 : f003            >        beq skip0357
                       >        trap            ;failed not equal (non zero)
3944 : 200461          >        jsr report_error
                       >
3947 :                 >skip0357
                       >
3947 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$62,$ff
                       >            load_flag $ff
3948 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
394a : 48              >            pha         ;use stack to load status
394b : a948            >            lda #$aa-$62     ;precharge accu
394d : 28              >            plp
                       >
394e : 62              >            db  $62          ;test nop integrity - flags on
394f : ea              >            nop
3950 : ea              >            nop
                       >            tst_a $aa-$62,$ff
3951 : 08              >            php         ;save flags
3952 : c948            >            cmp #$aa-$62     ;test result
                       >            trap_ne
3954 : f003            >        beq skip0362
                       >        trap            ;failed not equal (non zero)
3956 : 200461          >        jsr report_error
                       >
3959 :                 >skip0362
                       >
3959 : 68              >            pla         ;load status
395a : 48              >            pha
                       >            cmp_flag $ff
395b : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
395d : f003            >        beq skip0365
                       >        trap            ;failed not equal (non zero)
395f : 200461          >        jsr report_error
                       >
3962 :                 >skip0365
                       >
3962 : 28              >            plp         ;restore status
                       >
3963 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
3965 : f003            >        beq skip0367
                       >        trap            ;failed not equal (non zero)
3967 : 200461          >        jsr report_error
                       >
396a :                 >skip0367
                       >
396a : e000            >            cpx #0
                       >            trap_ne         ;x changed
396c : f003            >        beq skip0369
                       >        trap            ;failed not equal (non zero)
396e : 200461          >        jsr report_error
                       >
3971 :                 >skip0369
                       >
                        
                                nop_test $82,2
3971 : a042            >            ldy #$42
3973 : a202            >            ldx #4-2
3975 : 82              >            db  $82          ;test nop length
                       >        if 2 = 1
                       >            dex
                       >            dex
                       >        endif
                       >        if 2 = 2
3976 : c8              >            iny
3977 : ca              >            dex
                       >        endif
                       >        if 2 = 3
                       >            iny
                       >            iny
                       >        endif
3978 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
3979 : f003            >        beq skip0372
                       >        trap            ;failed not equal (non zero)
397b : 200461          >        jsr report_error
                       >
397e :                 >skip0372
                       >
                       >            set_a $ff-$82,0
                       >            load_flag 0
397e : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3980 : 48              >            pha         ;use stack to load status
3981 : a97d            >            lda #$ff-$82     ;precharge accu
3983 : 28              >            plp
                       >
3984 : 82              >            db  $82          ;test nop integrity - flags off
3985 : ea              >            nop
3986 : ea              >            nop
                       >            tst_a $ff-$82,0
3987 : 08              >            php         ;save flags
3988 : c97d            >            cmp #$ff-$82     ;test result
                       >            trap_ne
398a : f003            >        beq skip0377
                       >        trap            ;failed not equal (non zero)
398c : 200461          >        jsr report_error
                       >
398f :                 >skip0377
                       >
398f : 68              >            pla         ;load status
3990 : 48              >            pha
                       >            cmp_flag 0
3991 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3993 : f003            >        beq skip0380
                       >        trap            ;failed not equal (non zero)
3995 : 200461          >        jsr report_error
                       >
3998 :                 >skip0380
                       >
3998 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$82,$ff
                       >            load_flag $ff
3999 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
399b : 48              >            pha         ;use stack to load status
399c : a928            >            lda #$aa-$82     ;precharge accu
399e : 28              >            plp
                       >
399f : 82              >            db  $82          ;test nop integrity - flags on
39a0 : ea              >            nop
39a1 : ea              >            nop
                       >            tst_a $aa-$82,$ff
39a2 : 08              >            php         ;save flags
39a3 : c928            >            cmp #$aa-$82     ;test result
                       >            trap_ne
39a5 : f003            >        beq skip0385
                       >        trap            ;failed not equal (non zero)
39a7 : 200461          >        jsr report_error
                       >
39aa :                 >skip0385
                       >
39aa : 68              >            pla         ;load status
39ab : 48              >            pha
                       >            cmp_flag $ff
39ac : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
39ae : f003            >        beq skip0388
                       >        trap            ;failed not equal (non zero)
39b0 : 200461          >        jsr report_error
                       >
39b3 :                 >skip0388
                       >
39b3 : 28              >            plp         ;restore status
                       >
39b4 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
39b6 : f003            >        beq skip0390
                       >        trap            ;failed not equal (non zero)
39b8 : 200461          >        jsr report_error
                       >
39bb :                 >skip0390
                       >
39bb : e000            >            cpx #0
                       >            trap_ne         ;x changed
39bd : f003            >        beq skip0392
                       >        trap            ;failed not equal (non zero)
39bf : 200461          >        jsr report_error
                       >
39c2 :                 >skip0392
                       >
                        
                                nop_test $c2,2
39c2 : a042            >            ldy #$42
39c4 : a202            >            ldx #4-2
39c6 : c2              >            db  $c2          ;test nop length
                       >        if 2 = 1
                       >            dex
                       >            dex
                       >        endif
                       >        if 2 = 2
39c7 : c8              >            iny
39c8 : ca              >            dex
                       >        endif
                       >        if 2 = 3
                       >            iny
                       >            iny
                       >        endif
39c9 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
39ca : f003            >        beq skip0395
                       >        trap            ;failed not equal (non zero)
39cc : 200461          >        jsr report_error
                       >
39cf :                 >skip0395
                       >
                       >            set_a $ff-$c2,0
                       >            load_flag 0
39cf : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
39d1 : 48              >            pha         ;use stack to load status
39d2 : a93d            >            lda #$ff-$c2     ;precharge accu
39d4 : 28              >            plp
                       >
39d5 : c2              >            db  $c2          ;test nop integrity - flags off
39d6 : ea              >            nop
39d7 : ea              >            nop
                       >            tst_a $ff-$c2,0
39d8 : 08              >            php         ;save flags
39d9 : c93d            >            cmp #$ff-$c2     ;test result
                       >            trap_ne
39db : f003            >        beq skip0400
                       >        trap            ;failed not equal (non zero)
39dd : 200461          >        jsr report_error
                       >
39e0 :                 >skip0400
                       >
39e0 : 68              >            pla         ;load status
39e1 : 48              >            pha
                       >            cmp_flag 0
39e2 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
39e4 : f003            >        beq skip0403
                       >        trap            ;failed not equal (non zero)
39e6 : 200461          >        jsr report_error
                       >
39e9 :                 >skip0403
                       >
39e9 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$c2,$ff
                       >            load_flag $ff
39ea : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
39ec : 48              >            pha         ;use stack to load status
39ed : a9e8            >            lda #$aa-$c2     ;precharge accu
39ef : 28              >            plp
                       >
39f0 : c2              >            db  $c2          ;test nop integrity - flags on
39f1 : ea              >            nop
39f2 : ea              >            nop
                       >            tst_a $aa-$c2,$ff
39f3 : 08              >            php         ;save flags
39f4 : c9e8            >            cmp #$aa-$c2     ;test result
                       >            trap_ne
39f6 : f003            >        beq skip0408
                       >        trap            ;failed not equal (non zero)
39f8 : 200461          >        jsr report_error
                       >
39fb :                 >skip0408
                       >
39fb : 68              >            pla         ;load status
39fc : 48              >            pha
                       >            cmp_flag $ff
39fd : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
39ff : f003            >        beq skip0411
                       >        trap            ;failed not equal (non zero)
3a01 : 200461          >        jsr report_error
                       >
3a04 :                 >skip0411
                       >
3a04 : 28              >            plp         ;restore status
                       >
3a05 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
3a07 : f003            >        beq skip0413
                       >        trap            ;failed not equal (non zero)
3a09 : 200461          >        jsr report_error
                       >
3a0c :                 >skip0413
                       >
3a0c : e000            >            cpx #0
                       >            trap_ne         ;x changed
3a0e : f003            >        beq skip0415
                       >        trap            ;failed not equal (non zero)
3a10 : 200461          >        jsr report_error
                       >
3a13 :                 >skip0415
                       >
                        
                                nop_test $e2,2
3a13 : a042            >            ldy #$42
3a15 : a202            >            ldx #4-2
3a17 : e2              >            db  $e2          ;test nop length
                       >        if 2 = 1
                       >            dex
                       >            dex
                       >        endif
                       >        if 2 = 2
3a18 : c8              >            iny
3a19 : ca              >            dex
                       >        endif
                       >        if 2 = 3
                       >            iny
                       >            iny
                       >        endif
3a1a : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
3a1b : f003            >        beq skip0418
                       >        trap            ;failed not equal (non zero)
3a1d : 200461          >        jsr report_error
                       >
3a20 :                 >skip0418
                       >
                       >            set_a $ff-$e2,0
                       >            load_flag 0
3a20 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3a22 : 48              >            pha         ;use stack to load status
3a23 : a91d            >            lda #$ff-$e2     ;precharge accu
3a25 : 28              >            plp
                       >
3a26 : e2              >            db  $e2          ;test nop integrity - flags off
3a27 : ea              >            nop
3a28 : ea              >            nop
                       >            tst_a $ff-$e2,0
3a29 : 08              >            php         ;save flags
3a2a : c91d            >            cmp #$ff-$e2     ;test result
                       >            trap_ne
3a2c : f003            >        beq skip0423
                       >        trap            ;failed not equal (non zero)
3a2e : 200461          >        jsr report_error
                       >
3a31 :                 >skip0423
                       >
3a31 : 68              >            pla         ;load status
3a32 : 48              >            pha
                       >            cmp_flag 0
3a33 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3a35 : f003            >        beq skip0426
                       >        trap            ;failed not equal (non zero)
3a37 : 200461          >        jsr report_error
                       >
3a3a :                 >skip0426
                       >
3a3a : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$e2,$ff
                       >            load_flag $ff
3a3b : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3a3d : 48              >            pha         ;use stack to load status
3a3e : a9c8            >            lda #$aa-$e2     ;precharge accu
3a40 : 28              >            plp
                       >
3a41 : e2              >            db  $e2          ;test nop integrity - flags on
3a42 : ea              >            nop
3a43 : ea              >            nop
                       >            tst_a $aa-$e2,$ff
3a44 : 08              >            php         ;save flags
3a45 : c9c8            >            cmp #$aa-$e2     ;test result
                       >            trap_ne
3a47 : f003            >        beq skip0431
                       >        trap            ;failed not equal (non zero)
3a49 : 200461          >        jsr report_error
                       >
3a4c :                 >skip0431
                       >
3a4c : 68              >            pla         ;load status
3a4d : 48              >            pha
                       >            cmp_flag $ff
3a4e : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3a50 : f003            >        beq skip0434
                       >        trap            ;failed not equal (non zero)
3a52 : 200461          >        jsr report_error
                       >
3a55 :                 >skip0434
                       >
3a55 : 28              >            plp         ;restore status
                       >
3a56 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
3a58 : f003            >        beq skip0436
                       >        trap            ;failed not equal (non zero)
3a5a : 200461          >        jsr report_error
                       >
3a5d :                 >skip0436
                       >
3a5d : e000            >            cpx #0
                       >            trap_ne         ;x changed
3a5f : f003            >        beq skip0438
                       >        trap            ;failed not equal (non zero)
3a61 : 200461          >        jsr report_error
                       >
3a64 :                 >skip0438
                       >
                        
                                nop_test $44,2
3a64 : a042            >            ldy #$42
3a66 : a202            >            ldx #4-2
3a68 : 44              >            db  $44          ;test nop length
                       >        if 2 = 1
                       >            dex
                       >            dex
                       >        endif
                       >        if 2 = 2
3a69 : c8              >            iny
3a6a : ca              >            dex
                       >        endif
                       >        if 2 = 3
                       >            iny
                       >            iny
                       >        endif
3a6b : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
3a6c : f003            >        beq skip0441
                       >        trap            ;failed not equal (non zero)
3a6e : 200461          >        jsr report_error
                       >
3a71 :                 >skip0441
                       >
                       >            set_a $ff-$44,0
                       >            load_flag 0
3a71 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3a73 : 48              >            pha         ;use stack to load status
3a74 : a9bb            >            lda #$ff-$44     ;precharge accu
3a76 : 28              >            plp
                       >
3a77 : 44              >            db  $44          ;test nop integrity - flags off
3a78 : ea              >            nop
3a79 : ea              >            nop
                       >            tst_a $ff-$44,0
3a7a : 08              >            php         ;save flags
3a7b : c9bb            >            cmp #$ff-$44     ;test result
                       >            trap_ne
3a7d : f003            >        beq skip0446
                       >        trap            ;failed not equal (non zero)
3a7f : 200461          >        jsr report_error
                       >
3a82 :                 >skip0446
                       >
3a82 : 68              >            pla         ;load status
3a83 : 48              >            pha
                       >            cmp_flag 0
3a84 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3a86 : f003            >        beq skip0449
                       >        trap            ;failed not equal (non zero)
3a88 : 200461          >        jsr report_error
                       >
3a8b :                 >skip0449
                       >
3a8b : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$44,$ff
                       >            load_flag $ff
3a8c : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3a8e : 48              >            pha         ;use stack to load status
3a8f : a966            >            lda #$aa-$44     ;precharge accu
3a91 : 28              >            plp
                       >
3a92 : 44              >            db  $44          ;test nop integrity - flags on
3a93 : ea              >            nop
3a94 : ea              >            nop
                       >            tst_a $aa-$44,$ff
3a95 : 08              >            php         ;save flags
3a96 : c966            >            cmp #$aa-$44     ;test result
                       >            trap_ne
3a98 : f003            >        beq skip0454
                       >        trap            ;failed not equal (non zero)
3a9a : 200461          >        jsr report_error
                       >
3a9d :                 >skip0454
                       >
3a9d : 68              >            pla         ;load status
3a9e : 48              >            pha
                       >            cmp_flag $ff
3a9f : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3aa1 : f003            >        beq skip0457
                       >        trap            ;failed not equal (non zero)
3aa3 : 200461          >        jsr report_error
                       >
3aa6 :                 >skip0457
                       >
3aa6 : 28              >            plp         ;restore status
                       >
3aa7 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
3aa9 : f003            >        beq skip0459
                       >        trap            ;failed not equal (non zero)
3aab : 200461          >        jsr report_error
                       >
3aae :                 >skip0459
                       >
3aae : e000            >            cpx #0
                       >            trap_ne         ;x changed
3ab0 : f003            >        beq skip0461
                       >        trap            ;failed not equal (non zero)
3ab2 : 200461          >        jsr report_error
                       >
3ab5 :                 >skip0461
                       >
                        
                                nop_test $54,2
3ab5 : a042            >            ldy #$42
3ab7 : a202            >            ldx #4-2
3ab9 : 54              >            db  $54          ;test nop length
                       >        if 2 = 1
                       >            dex
                       >            dex
                       >        endif
                       >        if 2 = 2
3aba : c8              >            iny
3abb : ca              >            dex
                       >        endif
                       >        if 2 = 3
                       >            iny
                       >            iny
                       >        endif
3abc : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
3abd : f003            >        beq skip0464
                       >        trap            ;failed not equal (non zero)
3abf : 200461          >        jsr report_error
                       >
3ac2 :                 >skip0464
                       >
                       >            set_a $ff-$54,0
                       >            load_flag 0
3ac2 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3ac4 : 48              >            pha         ;use stack to load status
3ac5 : a9ab            >            lda #$ff-$54     ;precharge accu
3ac7 : 28              >            plp
                       >
3ac8 : 54              >            db  $54          ;test nop integrity - flags off
3ac9 : ea              >            nop
3aca : ea              >            nop
                       >            tst_a $ff-$54,0
3acb : 08              >            php         ;save flags
3acc : c9ab            >            cmp #$ff-$54     ;test result
                       >            trap_ne
3ace : f003            >        beq skip0469
                       >        trap            ;failed not equal (non zero)
3ad0 : 200461          >        jsr report_error
                       >
3ad3 :                 >skip0469
                       >
3ad3 : 68              >            pla         ;load status
3ad4 : 48              >            pha
                       >            cmp_flag 0
3ad5 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3ad7 : f003            >        beq skip0472
                       >        trap            ;failed not equal (non zero)
3ad9 : 200461          >        jsr report_error
                       >
3adc :                 >skip0472
                       >
3adc : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$54,$ff
                       >            load_flag $ff
3add : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3adf : 48              >            pha         ;use stack to load status
3ae0 : a956            >            lda #$aa-$54     ;precharge accu
3ae2 : 28              >            plp
                       >
3ae3 : 54              >            db  $54          ;test nop integrity - flags on
3ae4 : ea              >            nop
3ae5 : ea              >            nop
                       >            tst_a $aa-$54,$ff
3ae6 : 08              >            php         ;save flags
3ae7 : c956            >            cmp #$aa-$54     ;test result
                       >            trap_ne
3ae9 : f003            >        beq skip0477
                       >        trap            ;failed not equal (non zero)
3aeb : 200461          >        jsr report_error
                       >
3aee :                 >skip0477
                       >
3aee : 68              >            pla         ;load status
3aef : 48              >            pha
                       >            cmp_flag $ff
3af0 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3af2 : f003            >        beq skip0480
                       >        trap            ;failed not equal (non zero)
3af4 : 200461          >        jsr report_error
                       >
3af7 :                 >skip0480
                       >
3af7 : 28              >            plp         ;restore status
                       >
3af8 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
3afa : f003            >        beq skip0482
                       >        trap            ;failed not equal (non zero)
3afc : 200461          >        jsr report_error
                       >
3aff :                 >skip0482
                       >
3aff : e000            >            cpx #0
                       >            trap_ne         ;x changed
3b01 : f003            >        beq skip0484
                       >        trap            ;failed not equal (non zero)
3b03 : 200461          >        jsr report_error
                       >
3b06 :                 >skip0484
                       >
                        
                                nop_test $d4,2
3b06 : a042            >            ldy #$42
3b08 : a202            >            ldx #4-2
3b0a : d4              >            db  $d4          ;test nop length
                       >        if 2 = 1
                       >            dex
                       >            dex
                       >        endif
                       >        if 2 = 2
3b0b : c8              >            iny
3b0c : ca              >            dex
                       >        endif
                       >        if 2 = 3
                       >            iny
                       >            iny
                       >        endif
3b0d : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
3b0e : f003            >        beq skip0487
                       >        trap            ;failed not equal (non zero)
3b10 : 200461          >        jsr report_error
                       >
3b13 :                 >skip0487
                       >
                       >            set_a $ff-$d4,0
                       >            load_flag 0
3b13 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3b15 : 48              >            pha         ;use stack to load status
3b16 : a92b            >            lda #$ff-$d4     ;precharge accu
3b18 : 28              >            plp
                       >
3b19 : d4              >            db  $d4          ;test nop integrity - flags off
3b1a : ea              >            nop
3b1b : ea              >            nop
                       >            tst_a $ff-$d4,0
3b1c : 08              >            php         ;save flags
3b1d : c92b            >            cmp #$ff-$d4     ;test result
                       >            trap_ne
3b1f : f003            >        beq skip0492
                       >        trap            ;failed not equal (non zero)
3b21 : 200461          >        jsr report_error
                       >
3b24 :                 >skip0492
                       >
3b24 : 68              >            pla         ;load status
3b25 : 48              >            pha
                       >            cmp_flag 0
3b26 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3b28 : f003            >        beq skip0495
                       >        trap            ;failed not equal (non zero)
3b2a : 200461          >        jsr report_error
                       >
3b2d :                 >skip0495
                       >
3b2d : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$d4,$ff
                       >            load_flag $ff
3b2e : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3b30 : 48              >            pha         ;use stack to load status
3b31 : a9d6            >            lda #$aa-$d4     ;precharge accu
3b33 : 28              >            plp
                       >
3b34 : d4              >            db  $d4          ;test nop integrity - flags on
3b35 : ea              >            nop
3b36 : ea              >            nop
                       >            tst_a $aa-$d4,$ff
3b37 : 08              >            php         ;save flags
3b38 : c9d6            >            cmp #$aa-$d4     ;test result
                       >            trap_ne
3b3a : f003            >        beq skip0500
                       >        trap            ;failed not equal (non zero)
3b3c : 200461          >        jsr report_error
                       >
3b3f :                 >skip0500
                       >
3b3f : 68              >            pla         ;load status
3b40 : 48              >            pha
                       >            cmp_flag $ff
3b41 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3b43 : f003            >        beq skip0503
                       >        trap            ;failed not equal (non zero)
3b45 : 200461          >        jsr report_error
                       >
3b48 :                 >skip0503
                       >
3b48 : 28              >            plp         ;restore status
                       >
3b49 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
3b4b : f003            >        beq skip0505
                       >        trap            ;failed not equal (non zero)
3b4d : 200461          >        jsr report_error
                       >
3b50 :                 >skip0505
                       >
3b50 : e000            >            cpx #0
                       >            trap_ne         ;x changed
3b52 : f003            >        beq skip0507
                       >        trap            ;failed not equal (non zero)
3b54 : 200461          >        jsr report_error
                       >
3b57 :                 >skip0507
                       >
                        
                                nop_test $f4,2
3b57 : a042            >            ldy #$42
3b59 : a202            >            ldx #4-2
3b5b : f4              >            db  $f4          ;test nop length
                       >        if 2 = 1
                       >            dex
                       >            dex
                       >        endif
                       >        if 2 = 2
3b5c : c8              >            iny
3b5d : ca              >            dex
                       >        endif
                       >        if 2 = 3
                       >            iny
                       >            iny
                       >        endif
3b5e : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
3b5f : f003            >        beq skip0510
                       >        trap            ;failed not equal (non zero)
3b61 : 200461          >        jsr report_error
                       >
3b64 :                 >skip0510
                       >
                       >            set_a $ff-$f4,0
                       >            load_flag 0
3b64 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3b66 : 48              >            pha         ;use stack to load status
3b67 : a90b            >            lda #$ff-$f4     ;precharge accu
3b69 : 28              >            plp
                       >
3b6a : f4              >            db  $f4          ;test nop integrity - flags off
3b6b : ea              >            nop
3b6c : ea              >            nop
                       >            tst_a $ff-$f4,0
3b6d : 08              >            php         ;save flags
3b6e : c90b            >            cmp #$ff-$f4     ;test result
                       >            trap_ne
3b70 : f003            >        beq skip0515
                       >        trap            ;failed not equal (non zero)
3b72 : 200461          >        jsr report_error
                       >
3b75 :                 >skip0515
                       >
3b75 : 68              >            pla         ;load status
3b76 : 48              >            pha
                       >            cmp_flag 0
3b77 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3b79 : f003            >        beq skip0518
                       >        trap            ;failed not equal (non zero)
3b7b : 200461          >        jsr report_error
                       >
3b7e :                 >skip0518
                       >
3b7e : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$f4,$ff
                       >            load_flag $ff
3b7f : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3b81 : 48              >            pha         ;use stack to load status
3b82 : a9b6            >            lda #$aa-$f4     ;precharge accu
3b84 : 28              >            plp
                       >
3b85 : f4              >            db  $f4          ;test nop integrity - flags on
3b86 : ea              >            nop
3b87 : ea              >            nop
                       >            tst_a $aa-$f4,$ff
3b88 : 08              >            php         ;save flags
3b89 : c9b6            >            cmp #$aa-$f4     ;test result
                       >            trap_ne
3b8b : f003            >        beq skip0523
                       >        trap            ;failed not equal (non zero)
3b8d : 200461          >        jsr report_error
                       >
3b90 :                 >skip0523
                       >
3b90 : 68              >            pla         ;load status
3b91 : 48              >            pha
                       >            cmp_flag $ff
3b92 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3b94 : f003            >        beq skip0526
                       >        trap            ;failed not equal (non zero)
3b96 : 200461          >        jsr report_error
                       >
3b99 :                 >skip0526
                       >
3b99 : 28              >            plp         ;restore status
                       >
3b9a : c042            >            cpy #$42
                       >            trap_ne         ;y changed
3b9c : f003            >        beq skip0528
                       >        trap            ;failed not equal (non zero)
3b9e : 200461          >        jsr report_error
                       >
3ba1 :                 >skip0528
                       >
3ba1 : e000            >            cpx #0
                       >            trap_ne         ;x changed
3ba3 : f003            >        beq skip0530
                       >        trap            ;failed not equal (non zero)
3ba5 : 200461          >        jsr report_error
                       >
3ba8 :                 >skip0530
                       >
                        
                                nop_test $5c,3
3ba8 : a042            >            ldy #$42
3baa : a201            >            ldx #4-3
3bac : 5c              >            db  $5c          ;test nop length
                       >        if 3 = 1
                       >            dex
                       >            dex
                       >        endif
                       >        if 3 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 3 = 3
3bad : c8              >            iny
3bae : c8              >            iny
                       >        endif
3baf : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
3bb0 : f003            >        beq skip0533
                       >        trap            ;failed not equal (non zero)
3bb2 : 200461          >        jsr report_error
                       >
3bb5 :                 >skip0533
                       >
                       >            set_a $ff-$5c,0
                       >            load_flag 0
3bb5 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3bb7 : 48              >            pha         ;use stack to load status
3bb8 : a9a3            >            lda #$ff-$5c     ;precharge accu
3bba : 28              >            plp
                       >
3bbb : 5c              >            db  $5c          ;test nop integrity - flags off
3bbc : ea              >            nop
3bbd : ea              >            nop
                       >            tst_a $ff-$5c,0
3bbe : 08              >            php         ;save flags
3bbf : c9a3            >            cmp #$ff-$5c     ;test result
                       >            trap_ne
3bc1 : f003            >        beq skip0538
                       >        trap            ;failed not equal (non zero)
3bc3 : 200461          >        jsr report_error
                       >
3bc6 :                 >skip0538
                       >
3bc6 : 68              >            pla         ;load status
3bc7 : 48              >            pha
                       >            cmp_flag 0
3bc8 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3bca : f003            >        beq skip0541
                       >        trap            ;failed not equal (non zero)
3bcc : 200461          >        jsr report_error
                       >
3bcf :                 >skip0541
                       >
3bcf : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$5c,$ff
                       >            load_flag $ff
3bd0 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3bd2 : 48              >            pha         ;use stack to load status
3bd3 : a94e            >            lda #$aa-$5c     ;precharge accu
3bd5 : 28              >            plp
                       >
3bd6 : 5c              >            db  $5c          ;test nop integrity - flags on
3bd7 : ea              >            nop
3bd8 : ea              >            nop
                       >            tst_a $aa-$5c,$ff
3bd9 : 08              >            php         ;save flags
3bda : c94e            >            cmp #$aa-$5c     ;test result
                       >            trap_ne
3bdc : f003            >        beq skip0546
                       >        trap            ;failed not equal (non zero)
3bde : 200461          >        jsr report_error
                       >
3be1 :                 >skip0546
                       >
3be1 : 68              >            pla         ;load status
3be2 : 48              >            pha
                       >            cmp_flag $ff
3be3 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3be5 : f003            >        beq skip0549
                       >        trap            ;failed not equal (non zero)
3be7 : 200461          >        jsr report_error
                       >
3bea :                 >skip0549
                       >
3bea : 28              >            plp         ;restore status
                       >
3beb : c042            >            cpy #$42
                       >            trap_ne         ;y changed
3bed : f003            >        beq skip0551
                       >        trap            ;failed not equal (non zero)
3bef : 200461          >        jsr report_error
                       >
3bf2 :                 >skip0551
                       >
3bf2 : e000            >            cpx #0
                       >            trap_ne         ;x changed
3bf4 : f003            >        beq skip0553
                       >        trap            ;failed not equal (non zero)
3bf6 : 200461          >        jsr report_error
                       >
3bf9 :                 >skip0553
                       >
                        
                                nop_test $dc,3
3bf9 : a042            >            ldy #$42
3bfb : a201            >            ldx #4-3
3bfd : dc              >            db  $dc          ;test nop length
                       >        if 3 = 1
                       >            dex
                       >            dex
                       >        endif
                       >        if 3 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 3 = 3
3bfe : c8              >            iny
3bff : c8              >            iny
                       >        endif
3c00 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
3c01 : f003            >        beq skip0556
                       >        trap            ;failed not equal (non zero)
3c03 : 200461          >        jsr report_error
                       >
3c06 :                 >skip0556
                       >
                       >            set_a $ff-$dc,0
                       >            load_flag 0
3c06 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3c08 : 48              >            pha         ;use stack to load status
3c09 : a923            >            lda #$ff-$dc     ;precharge accu
3c0b : 28              >            plp
                       >
3c0c : dc              >            db  $dc          ;test nop integrity - flags off
3c0d : ea              >            nop
3c0e : ea              >            nop
                       >            tst_a $ff-$dc,0
3c0f : 08              >            php         ;save flags
3c10 : c923            >            cmp #$ff-$dc     ;test result
                       >            trap_ne
3c12 : f003            >        beq skip0561
                       >        trap            ;failed not equal (non zero)
3c14 : 200461          >        jsr report_error
                       >
3c17 :                 >skip0561
                       >
3c17 : 68              >            pla         ;load status
3c18 : 48              >            pha
                       >            cmp_flag 0
3c19 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3c1b : f003            >        beq skip0564
                       >        trap            ;failed not equal (non zero)
3c1d : 200461          >        jsr report_error
                       >
3c20 :                 >skip0564
                       >
3c20 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$dc,$ff
                       >            load_flag $ff
3c21 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3c23 : 48              >            pha         ;use stack to load status
3c24 : a9ce            >            lda #$aa-$dc     ;precharge accu
3c26 : 28              >            plp
                       >
3c27 : dc              >            db  $dc          ;test nop integrity - flags on
3c28 : ea              >            nop
3c29 : ea              >            nop
                       >            tst_a $aa-$dc,$ff
3c2a : 08              >            php         ;save flags
3c2b : c9ce            >            cmp #$aa-$dc     ;test result
                       >            trap_ne
3c2d : f003            >        beq skip0569
                       >        trap            ;failed not equal (non zero)
3c2f : 200461          >        jsr report_error
                       >
3c32 :                 >skip0569
                       >
3c32 : 68              >            pla         ;load status
3c33 : 48              >            pha
                       >            cmp_flag $ff
3c34 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3c36 : f003            >        beq skip0572
                       >        trap            ;failed not equal (non zero)
3c38 : 200461          >        jsr report_error
                       >
3c3b :                 >skip0572
                       >
3c3b : 28              >            plp         ;restore status
                       >
3c3c : c042            >            cpy #$42
                       >            trap_ne         ;y changed
3c3e : f003            >        beq skip0574
                       >        trap            ;failed not equal (non zero)
3c40 : 200461          >        jsr report_error
                       >
3c43 :                 >skip0574
                       >
3c43 : e000            >            cpx #0
                       >            trap_ne         ;x changed
3c45 : f003            >        beq skip0576
                       >        trap            ;failed not equal (non zero)
3c47 : 200461          >        jsr report_error
                       >
3c4a :                 >skip0576
                       >
                        
                                nop_test $fc,3
3c4a : a042            >            ldy #$42
3c4c : a201            >            ldx #4-3
3c4e : fc              >            db  $fc          ;test nop length
                       >        if 3 = 1
                       >            dex
                       >            dex
                       >        endif
                       >        if 3 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 3 = 3
3c4f : c8              >            iny
3c50 : c8              >            iny
                       >        endif
3c51 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
3c52 : f003            >        beq skip0579
                       >        trap            ;failed not equal (non zero)
3c54 : 200461          >        jsr report_error
                       >
3c57 :                 >skip0579
                       >
                       >            set_a $ff-$fc,0
                       >            load_flag 0
3c57 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3c59 : 48              >            pha         ;use stack to load status
3c5a : a903            >            lda #$ff-$fc     ;precharge accu
3c5c : 28              >            plp
                       >
3c5d : fc              >            db  $fc          ;test nop integrity - flags off
3c5e : ea              >            nop
3c5f : ea              >            nop
                       >            tst_a $ff-$fc,0
3c60 : 08              >            php         ;save flags
3c61 : c903            >            cmp #$ff-$fc     ;test result
                       >            trap_ne
3c63 : f003            >        beq skip0584
                       >        trap            ;failed not equal (non zero)
3c65 : 200461          >        jsr report_error
                       >
3c68 :                 >skip0584
                       >
3c68 : 68              >            pla         ;load status
3c69 : 48              >            pha
                       >            cmp_flag 0
3c6a : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3c6c : f003            >        beq skip0587
                       >        trap            ;failed not equal (non zero)
3c6e : 200461          >        jsr report_error
                       >
3c71 :                 >skip0587
                       >
3c71 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$fc,$ff
                       >            load_flag $ff
3c72 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3c74 : 48              >            pha         ;use stack to load status
3c75 : a9ae            >            lda #$aa-$fc     ;precharge accu
3c77 : 28              >            plp
                       >
3c78 : fc              >            db  $fc          ;test nop integrity - flags on
3c79 : ea              >            nop
3c7a : ea              >            nop
                       >            tst_a $aa-$fc,$ff
3c7b : 08              >            php         ;save flags
3c7c : c9ae            >            cmp #$aa-$fc     ;test result
                       >            trap_ne
3c7e : f003            >        beq skip0592
                       >        trap            ;failed not equal (non zero)
3c80 : 200461          >        jsr report_error
                       >
3c83 :                 >skip0592
                       >
3c83 : 68              >            pla         ;load status
3c84 : 48              >            pha
                       >            cmp_flag $ff
3c85 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3c87 : f003            >        beq skip0595
                       >        trap            ;failed not equal (non zero)
3c89 : 200461          >        jsr report_error
                       >
3c8c :                 >skip0595
                       >
3c8c : 28              >            plp         ;restore status
                       >
3c8d : c042            >            cpy #$42
                       >            trap_ne         ;y changed
3c8f : f003            >        beq skip0597
                       >        trap            ;failed not equal (non zero)
3c91 : 200461          >        jsr report_error
                       >
3c94 :                 >skip0597
                       >
3c94 : e000            >            cpx #0
                       >            trap_ne         ;x changed
3c96 : f003            >        beq skip0599
                       >        trap            ;failed not equal (non zero)
3c98 : 200461          >        jsr report_error
                       >
3c9b :                 >skip0599
                       >
                        
                                nop_test $03,1
3c9b : a042            >            ldy #$42
3c9d : a203            >            ldx #4-1
3c9f : 03              >            db  $03          ;test nop length
                       >        if 1 = 1
3ca0 : ca              >            dex
3ca1 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
3ca2 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
3ca3 : f003            >        beq skip0602
                       >        trap            ;failed not equal (non zero)
3ca5 : 200461          >        jsr report_error
                       >
3ca8 :                 >skip0602
                       >
                       >            set_a $ff-$03,0
                       >            load_flag 0
3ca8 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3caa : 48              >            pha         ;use stack to load status
3cab : a9fc            >            lda #$ff-$03     ;precharge accu
3cad : 28              >            plp
                       >
3cae : 03              >            db  $03          ;test nop integrity - flags off
3caf : ea              >            nop
3cb0 : ea              >            nop
                       >            tst_a $ff-$03,0
3cb1 : 08              >            php         ;save flags
3cb2 : c9fc            >            cmp #$ff-$03     ;test result
                       >            trap_ne
3cb4 : f003            >        beq skip0607
                       >        trap            ;failed not equal (non zero)
3cb6 : 200461          >        jsr report_error
                       >
3cb9 :                 >skip0607
                       >
3cb9 : 68              >            pla         ;load status
3cba : 48              >            pha
                       >            cmp_flag 0
3cbb : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3cbd : f003            >        beq skip0610
                       >        trap            ;failed not equal (non zero)
3cbf : 200461          >        jsr report_error
                       >
3cc2 :                 >skip0610
                       >
3cc2 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$03,$ff
                       >            load_flag $ff
3cc3 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3cc5 : 48              >            pha         ;use stack to load status
3cc6 : a9a7            >            lda #$aa-$03     ;precharge accu
3cc8 : 28              >            plp
                       >
3cc9 : 03              >            db  $03          ;test nop integrity - flags on
3cca : ea              >            nop
3ccb : ea              >            nop
                       >            tst_a $aa-$03,$ff
3ccc : 08              >            php         ;save flags
3ccd : c9a7            >            cmp #$aa-$03     ;test result
                       >            trap_ne
3ccf : f003            >        beq skip0615
                       >        trap            ;failed not equal (non zero)
3cd1 : 200461          >        jsr report_error
                       >
3cd4 :                 >skip0615
                       >
3cd4 : 68              >            pla         ;load status
3cd5 : 48              >            pha
                       >            cmp_flag $ff
3cd6 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3cd8 : f003            >        beq skip0618
                       >        trap            ;failed not equal (non zero)
3cda : 200461          >        jsr report_error
                       >
3cdd :                 >skip0618
                       >
3cdd : 28              >            plp         ;restore status
                       >
3cde : c042            >            cpy #$42
                       >            trap_ne         ;y changed
3ce0 : f003            >        beq skip0620
                       >        trap            ;failed not equal (non zero)
3ce2 : 200461          >        jsr report_error
                       >
3ce5 :                 >skip0620
                       >
3ce5 : e000            >            cpx #0
                       >            trap_ne         ;x changed
3ce7 : f003            >        beq skip0622
                       >        trap            ;failed not equal (non zero)
3ce9 : 200461          >        jsr report_error
                       >
3cec :                 >skip0622
                       >
                        
                                nop_test $13,1
3cec : a042            >            ldy #$42
3cee : a203            >            ldx #4-1
3cf0 : 13              >            db  $13          ;test nop length
                       >        if 1 = 1
3cf1 : ca              >            dex
3cf2 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
3cf3 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
3cf4 : f003            >        beq skip0625
                       >        trap            ;failed not equal (non zero)
3cf6 : 200461          >        jsr report_error
                       >
3cf9 :                 >skip0625
                       >
                       >            set_a $ff-$13,0
                       >            load_flag 0
3cf9 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3cfb : 48              >            pha         ;use stack to load status
3cfc : a9ec            >            lda #$ff-$13     ;precharge accu
3cfe : 28              >            plp
                       >
3cff : 13              >            db  $13          ;test nop integrity - flags off
3d00 : ea              >            nop
3d01 : ea              >            nop
                       >            tst_a $ff-$13,0
3d02 : 08              >            php         ;save flags
3d03 : c9ec            >            cmp #$ff-$13     ;test result
                       >            trap_ne
3d05 : f003            >        beq skip0630
                       >        trap            ;failed not equal (non zero)
3d07 : 200461          >        jsr report_error
                       >
3d0a :                 >skip0630
                       >
3d0a : 68              >            pla         ;load status
3d0b : 48              >            pha
                       >            cmp_flag 0
3d0c : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3d0e : f003            >        beq skip0633
                       >        trap            ;failed not equal (non zero)
3d10 : 200461          >        jsr report_error
                       >
3d13 :                 >skip0633
                       >
3d13 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$13,$ff
                       >            load_flag $ff
3d14 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3d16 : 48              >            pha         ;use stack to load status
3d17 : a997            >            lda #$aa-$13     ;precharge accu
3d19 : 28              >            plp
                       >
3d1a : 13              >            db  $13          ;test nop integrity - flags on
3d1b : ea              >            nop
3d1c : ea              >            nop
                       >            tst_a $aa-$13,$ff
3d1d : 08              >            php         ;save flags
3d1e : c997            >            cmp #$aa-$13     ;test result
                       >            trap_ne
3d20 : f003            >        beq skip0638
                       >        trap            ;failed not equal (non zero)
3d22 : 200461          >        jsr report_error
                       >
3d25 :                 >skip0638
                       >
3d25 : 68              >            pla         ;load status
3d26 : 48              >            pha
                       >            cmp_flag $ff
3d27 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3d29 : f003            >        beq skip0641
                       >        trap            ;failed not equal (non zero)
3d2b : 200461          >        jsr report_error
                       >
3d2e :                 >skip0641
                       >
3d2e : 28              >            plp         ;restore status
                       >
3d2f : c042            >            cpy #$42
                       >            trap_ne         ;y changed
3d31 : f003            >        beq skip0643
                       >        trap            ;failed not equal (non zero)
3d33 : 200461          >        jsr report_error
                       >
3d36 :                 >skip0643
                       >
3d36 : e000            >            cpx #0
                       >            trap_ne         ;x changed
3d38 : f003            >        beq skip0645
                       >        trap            ;failed not equal (non zero)
3d3a : 200461          >        jsr report_error
                       >
3d3d :                 >skip0645
                       >
                        
                                nop_test $23,1
3d3d : a042            >            ldy #$42
3d3f : a203            >            ldx #4-1
3d41 : 23              >            db  $23          ;test nop length
                       >        if 1 = 1
3d42 : ca              >            dex
3d43 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
3d44 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
3d45 : f003            >        beq skip0648
                       >        trap            ;failed not equal (non zero)
3d47 : 200461          >        jsr report_error
                       >
3d4a :                 >skip0648
                       >
                       >            set_a $ff-$23,0
                       >            load_flag 0
3d4a : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3d4c : 48              >            pha         ;use stack to load status
3d4d : a9dc            >            lda #$ff-$23     ;precharge accu
3d4f : 28              >            plp
                       >
3d50 : 23              >            db  $23          ;test nop integrity - flags off
3d51 : ea              >            nop
3d52 : ea              >            nop
                       >            tst_a $ff-$23,0
3d53 : 08              >            php         ;save flags
3d54 : c9dc            >            cmp #$ff-$23     ;test result
                       >            trap_ne
3d56 : f003            >        beq skip0653
                       >        trap            ;failed not equal (non zero)
3d58 : 200461          >        jsr report_error
                       >
3d5b :                 >skip0653
                       >
3d5b : 68              >            pla         ;load status
3d5c : 48              >            pha
                       >            cmp_flag 0
3d5d : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3d5f : f003            >        beq skip0656
                       >        trap            ;failed not equal (non zero)
3d61 : 200461          >        jsr report_error
                       >
3d64 :                 >skip0656
                       >
3d64 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$23,$ff
                       >            load_flag $ff
3d65 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3d67 : 48              >            pha         ;use stack to load status
3d68 : a987            >            lda #$aa-$23     ;precharge accu
3d6a : 28              >            plp
                       >
3d6b : 23              >            db  $23          ;test nop integrity - flags on
3d6c : ea              >            nop
3d6d : ea              >            nop
                       >            tst_a $aa-$23,$ff
3d6e : 08              >            php         ;save flags
3d6f : c987            >            cmp #$aa-$23     ;test result
                       >            trap_ne
3d71 : f003            >        beq skip0661
                       >        trap            ;failed not equal (non zero)
3d73 : 200461          >        jsr report_error
                       >
3d76 :                 >skip0661
                       >
3d76 : 68              >            pla         ;load status
3d77 : 48              >            pha
                       >            cmp_flag $ff
3d78 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3d7a : f003            >        beq skip0664
                       >        trap            ;failed not equal (non zero)
3d7c : 200461          >        jsr report_error
                       >
3d7f :                 >skip0664
                       >
3d7f : 28              >            plp         ;restore status
                       >
3d80 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
3d82 : f003            >        beq skip0666
                       >        trap            ;failed not equal (non zero)
3d84 : 200461          >        jsr report_error
                       >
3d87 :                 >skip0666
                       >
3d87 : e000            >            cpx #0
                       >            trap_ne         ;x changed
3d89 : f003            >        beq skip0668
                       >        trap            ;failed not equal (non zero)
3d8b : 200461          >        jsr report_error
                       >
3d8e :                 >skip0668
                       >
                        
                                nop_test $33,1
3d8e : a042            >            ldy #$42
3d90 : a203            >            ldx #4-1
3d92 : 33              >            db  $33          ;test nop length
                       >        if 1 = 1
3d93 : ca              >            dex
3d94 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
3d95 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
3d96 : f003            >        beq skip0671
                       >        trap            ;failed not equal (non zero)
3d98 : 200461          >        jsr report_error
                       >
3d9b :                 >skip0671
                       >
                       >            set_a $ff-$33,0
                       >            load_flag 0
3d9b : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3d9d : 48              >            pha         ;use stack to load status
3d9e : a9cc            >            lda #$ff-$33     ;precharge accu
3da0 : 28              >            plp
                       >
3da1 : 33              >            db  $33          ;test nop integrity - flags off
3da2 : ea              >            nop
3da3 : ea              >            nop
                       >            tst_a $ff-$33,0
3da4 : 08              >            php         ;save flags
3da5 : c9cc            >            cmp #$ff-$33     ;test result
                       >            trap_ne
3da7 : f003            >        beq skip0676
                       >        trap            ;failed not equal (non zero)
3da9 : 200461          >        jsr report_error
                       >
3dac :                 >skip0676
                       >
3dac : 68              >            pla         ;load status
3dad : 48              >            pha
                       >            cmp_flag 0
3dae : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3db0 : f003            >        beq skip0679
                       >        trap            ;failed not equal (non zero)
3db2 : 200461          >        jsr report_error
                       >
3db5 :                 >skip0679
                       >
3db5 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$33,$ff
                       >            load_flag $ff
3db6 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3db8 : 48              >            pha         ;use stack to load status
3db9 : a977            >            lda #$aa-$33     ;precharge accu
3dbb : 28              >            plp
                       >
3dbc : 33              >            db  $33          ;test nop integrity - flags on
3dbd : ea              >            nop
3dbe : ea              >            nop
                       >            tst_a $aa-$33,$ff
3dbf : 08              >            php         ;save flags
3dc0 : c977            >            cmp #$aa-$33     ;test result
                       >            trap_ne
3dc2 : f003            >        beq skip0684
                       >        trap            ;failed not equal (non zero)
3dc4 : 200461          >        jsr report_error
                       >
3dc7 :                 >skip0684
                       >
3dc7 : 68              >            pla         ;load status
3dc8 : 48              >            pha
                       >            cmp_flag $ff
3dc9 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3dcb : f003            >        beq skip0687
                       >        trap            ;failed not equal (non zero)
3dcd : 200461          >        jsr report_error
                       >
3dd0 :                 >skip0687
                       >
3dd0 : 28              >            plp         ;restore status
                       >
3dd1 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
3dd3 : f003            >        beq skip0689
                       >        trap            ;failed not equal (non zero)
3dd5 : 200461          >        jsr report_error
                       >
3dd8 :                 >skip0689
                       >
3dd8 : e000            >            cpx #0
                       >            trap_ne         ;x changed
3dda : f003            >        beq skip0691
                       >        trap            ;failed not equal (non zero)
3ddc : 200461          >        jsr report_error
                       >
3ddf :                 >skip0691
                       >
                        
                                nop_test $43,1
3ddf : a042            >            ldy #$42
3de1 : a203            >            ldx #4-1
3de3 : 43              >            db  $43          ;test nop length
                       >        if 1 = 1
3de4 : ca              >            dex
3de5 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
3de6 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
3de7 : f003            >        beq skip0694
                       >        trap            ;failed not equal (non zero)
3de9 : 200461          >        jsr report_error
                       >
3dec :                 >skip0694
                       >
                       >            set_a $ff-$43,0
                       >            load_flag 0
3dec : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3dee : 48              >            pha         ;use stack to load status
3def : a9bc            >            lda #$ff-$43     ;precharge accu
3df1 : 28              >            plp
                       >
3df2 : 43              >            db  $43          ;test nop integrity - flags off
3df3 : ea              >            nop
3df4 : ea              >            nop
                       >            tst_a $ff-$43,0
3df5 : 08              >            php         ;save flags
3df6 : c9bc            >            cmp #$ff-$43     ;test result
                       >            trap_ne
3df8 : f003            >        beq skip0699
                       >        trap            ;failed not equal (non zero)
3dfa : 200461          >        jsr report_error
                       >
3dfd :                 >skip0699
                       >
3dfd : 68              >            pla         ;load status
3dfe : 48              >            pha
                       >            cmp_flag 0
3dff : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3e01 : f003            >        beq skip0702
                       >        trap            ;failed not equal (non zero)
3e03 : 200461          >        jsr report_error
                       >
3e06 :                 >skip0702
                       >
3e06 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$43,$ff
                       >            load_flag $ff
3e07 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3e09 : 48              >            pha         ;use stack to load status
3e0a : a967            >            lda #$aa-$43     ;precharge accu
3e0c : 28              >            plp
                       >
3e0d : 43              >            db  $43          ;test nop integrity - flags on
3e0e : ea              >            nop
3e0f : ea              >            nop
                       >            tst_a $aa-$43,$ff
3e10 : 08              >            php         ;save flags
3e11 : c967            >            cmp #$aa-$43     ;test result
                       >            trap_ne
3e13 : f003            >        beq skip0707
                       >        trap            ;failed not equal (non zero)
3e15 : 200461          >        jsr report_error
                       >
3e18 :                 >skip0707
                       >
3e18 : 68              >            pla         ;load status
3e19 : 48              >            pha
                       >            cmp_flag $ff
3e1a : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3e1c : f003            >        beq skip0710
                       >        trap            ;failed not equal (non zero)
3e1e : 200461          >        jsr report_error
                       >
3e21 :                 >skip0710
                       >
3e21 : 28              >            plp         ;restore status
                       >
3e22 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
3e24 : f003            >        beq skip0712
                       >        trap            ;failed not equal (non zero)
3e26 : 200461          >        jsr report_error
                       >
3e29 :                 >skip0712
                       >
3e29 : e000            >            cpx #0
                       >            trap_ne         ;x changed
3e2b : f003            >        beq skip0714
                       >        trap            ;failed not equal (non zero)
3e2d : 200461          >        jsr report_error
                       >
3e30 :                 >skip0714
                       >
                        
                                nop_test $53,1
3e30 : a042            >            ldy #$42
3e32 : a203            >            ldx #4-1
3e34 : 53              >            db  $53          ;test nop length
                       >        if 1 = 1
3e35 : ca              >            dex
3e36 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
3e37 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
3e38 : f003            >        beq skip0717
                       >        trap            ;failed not equal (non zero)
3e3a : 200461          >        jsr report_error
                       >
3e3d :                 >skip0717
                       >
                       >            set_a $ff-$53,0
                       >            load_flag 0
3e3d : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3e3f : 48              >            pha         ;use stack to load status
3e40 : a9ac            >            lda #$ff-$53     ;precharge accu
3e42 : 28              >            plp
                       >
3e43 : 53              >            db  $53          ;test nop integrity - flags off
3e44 : ea              >            nop
3e45 : ea              >            nop
                       >            tst_a $ff-$53,0
3e46 : 08              >            php         ;save flags
3e47 : c9ac            >            cmp #$ff-$53     ;test result
                       >            trap_ne
3e49 : f003            >        beq skip0722
                       >        trap            ;failed not equal (non zero)
3e4b : 200461          >        jsr report_error
                       >
3e4e :                 >skip0722
                       >
3e4e : 68              >            pla         ;load status
3e4f : 48              >            pha
                       >            cmp_flag 0
3e50 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3e52 : f003            >        beq skip0725
                       >        trap            ;failed not equal (non zero)
3e54 : 200461          >        jsr report_error
                       >
3e57 :                 >skip0725
                       >
3e57 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$53,$ff
                       >            load_flag $ff
3e58 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3e5a : 48              >            pha         ;use stack to load status
3e5b : a957            >            lda #$aa-$53     ;precharge accu
3e5d : 28              >            plp
                       >
3e5e : 53              >            db  $53          ;test nop integrity - flags on
3e5f : ea              >            nop
3e60 : ea              >            nop
                       >            tst_a $aa-$53,$ff
3e61 : 08              >            php         ;save flags
3e62 : c957            >            cmp #$aa-$53     ;test result
                       >            trap_ne
3e64 : f003            >        beq skip0730
                       >        trap            ;failed not equal (non zero)
3e66 : 200461          >        jsr report_error
                       >
3e69 :                 >skip0730
                       >
3e69 : 68              >            pla         ;load status
3e6a : 48              >            pha
                       >            cmp_flag $ff
3e6b : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3e6d : f003            >        beq skip0733
                       >        trap            ;failed not equal (non zero)
3e6f : 200461          >        jsr report_error
                       >
3e72 :                 >skip0733
                       >
3e72 : 28              >            plp         ;restore status
                       >
3e73 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
3e75 : f003            >        beq skip0735
                       >        trap            ;failed not equal (non zero)
3e77 : 200461          >        jsr report_error
                       >
3e7a :                 >skip0735
                       >
3e7a : e000            >            cpx #0
                       >            trap_ne         ;x changed
3e7c : f003            >        beq skip0737
                       >        trap            ;failed not equal (non zero)
3e7e : 200461          >        jsr report_error
                       >
3e81 :                 >skip0737
                       >
                        
                                nop_test $63,1
3e81 : a042            >            ldy #$42
3e83 : a203            >            ldx #4-1
3e85 : 63              >            db  $63          ;test nop length
                       >        if 1 = 1
3e86 : ca              >            dex
3e87 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
3e88 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
3e89 : f003            >        beq skip0740
                       >        trap            ;failed not equal (non zero)
3e8b : 200461          >        jsr report_error
                       >
3e8e :                 >skip0740
                       >
                       >            set_a $ff-$63,0
                       >            load_flag 0
3e8e : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3e90 : 48              >            pha         ;use stack to load status
3e91 : a99c            >            lda #$ff-$63     ;precharge accu
3e93 : 28              >            plp
                       >
3e94 : 63              >            db  $63          ;test nop integrity - flags off
3e95 : ea              >            nop
3e96 : ea              >            nop
                       >            tst_a $ff-$63,0
3e97 : 08              >            php         ;save flags
3e98 : c99c            >            cmp #$ff-$63     ;test result
                       >            trap_ne
3e9a : f003            >        beq skip0745
                       >        trap            ;failed not equal (non zero)
3e9c : 200461          >        jsr report_error
                       >
3e9f :                 >skip0745
                       >
3e9f : 68              >            pla         ;load status
3ea0 : 48              >            pha
                       >            cmp_flag 0
3ea1 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3ea3 : f003            >        beq skip0748
                       >        trap            ;failed not equal (non zero)
3ea5 : 200461          >        jsr report_error
                       >
3ea8 :                 >skip0748
                       >
3ea8 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$63,$ff
                       >            load_flag $ff
3ea9 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3eab : 48              >            pha         ;use stack to load status
3eac : a947            >            lda #$aa-$63     ;precharge accu
3eae : 28              >            plp
                       >
3eaf : 63              >            db  $63          ;test nop integrity - flags on
3eb0 : ea              >            nop
3eb1 : ea              >            nop
                       >            tst_a $aa-$63,$ff
3eb2 : 08              >            php         ;save flags
3eb3 : c947            >            cmp #$aa-$63     ;test result
                       >            trap_ne
3eb5 : f003            >        beq skip0753
                       >        trap            ;failed not equal (non zero)
3eb7 : 200461          >        jsr report_error
                       >
3eba :                 >skip0753
                       >
3eba : 68              >            pla         ;load status
3ebb : 48              >            pha
                       >            cmp_flag $ff
3ebc : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3ebe : f003            >        beq skip0756
                       >        trap            ;failed not equal (non zero)
3ec0 : 200461          >        jsr report_error
                       >
3ec3 :                 >skip0756
                       >
3ec3 : 28              >            plp         ;restore status
                       >
3ec4 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
3ec6 : f003            >        beq skip0758
                       >        trap            ;failed not equal (non zero)
3ec8 : 200461          >        jsr report_error
                       >
3ecb :                 >skip0758
                       >
3ecb : e000            >            cpx #0
                       >            trap_ne         ;x changed
3ecd : f003            >        beq skip0760
                       >        trap            ;failed not equal (non zero)
3ecf : 200461          >        jsr report_error
                       >
3ed2 :                 >skip0760
                       >
                        
                                nop_test $73,1
3ed2 : a042            >            ldy #$42
3ed4 : a203            >            ldx #4-1
3ed6 : 73              >            db  $73          ;test nop length
                       >        if 1 = 1
3ed7 : ca              >            dex
3ed8 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
3ed9 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
3eda : f003            >        beq skip0763
                       >        trap            ;failed not equal (non zero)
3edc : 200461          >        jsr report_error
                       >
3edf :                 >skip0763
                       >
                       >            set_a $ff-$73,0
                       >            load_flag 0
3edf : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3ee1 : 48              >            pha         ;use stack to load status
3ee2 : a98c            >            lda #$ff-$73     ;precharge accu
3ee4 : 28              >            plp
                       >
3ee5 : 73              >            db  $73          ;test nop integrity - flags off
3ee6 : ea              >            nop
3ee7 : ea              >            nop
                       >            tst_a $ff-$73,0
3ee8 : 08              >            php         ;save flags
3ee9 : c98c            >            cmp #$ff-$73     ;test result
                       >            trap_ne
3eeb : f003            >        beq skip0768
                       >        trap            ;failed not equal (non zero)
3eed : 200461          >        jsr report_error
                       >
3ef0 :                 >skip0768
                       >
3ef0 : 68              >            pla         ;load status
3ef1 : 48              >            pha
                       >            cmp_flag 0
3ef2 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3ef4 : f003            >        beq skip0771
                       >        trap            ;failed not equal (non zero)
3ef6 : 200461          >        jsr report_error
                       >
3ef9 :                 >skip0771
                       >
3ef9 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$73,$ff
                       >            load_flag $ff
3efa : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3efc : 48              >            pha         ;use stack to load status
3efd : a937            >            lda #$aa-$73     ;precharge accu
3eff : 28              >            plp
                       >
3f00 : 73              >            db  $73          ;test nop integrity - flags on
3f01 : ea              >            nop
3f02 : ea              >            nop
                       >            tst_a $aa-$73,$ff
3f03 : 08              >            php         ;save flags
3f04 : c937            >            cmp #$aa-$73     ;test result
                       >            trap_ne
3f06 : f003            >        beq skip0776
                       >        trap            ;failed not equal (non zero)
3f08 : 200461          >        jsr report_error
                       >
3f0b :                 >skip0776
                       >
3f0b : 68              >            pla         ;load status
3f0c : 48              >            pha
                       >            cmp_flag $ff
3f0d : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3f0f : f003            >        beq skip0779
                       >        trap            ;failed not equal (non zero)
3f11 : 200461          >        jsr report_error
                       >
3f14 :                 >skip0779
                       >
3f14 : 28              >            plp         ;restore status
                       >
3f15 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
3f17 : f003            >        beq skip0781
                       >        trap            ;failed not equal (non zero)
3f19 : 200461          >        jsr report_error
                       >
3f1c :                 >skip0781
                       >
3f1c : e000            >            cpx #0
                       >            trap_ne         ;x changed
3f1e : f003            >        beq skip0783
                       >        trap            ;failed not equal (non zero)
3f20 : 200461          >        jsr report_error
                       >
3f23 :                 >skip0783
                       >
                        
                                nop_test $83,1
3f23 : a042            >            ldy #$42
3f25 : a203            >            ldx #4-1
3f27 : 83              >            db  $83          ;test nop length
                       >        if 1 = 1
3f28 : ca              >            dex
3f29 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
3f2a : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
3f2b : f003            >        beq skip0786
                       >        trap            ;failed not equal (non zero)
3f2d : 200461          >        jsr report_error
                       >
3f30 :                 >skip0786
                       >
                       >            set_a $ff-$83,0
                       >            load_flag 0
3f30 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3f32 : 48              >            pha         ;use stack to load status
3f33 : a97c            >            lda #$ff-$83     ;precharge accu
3f35 : 28              >            plp
                       >
3f36 : 83              >            db  $83          ;test nop integrity - flags off
3f37 : ea              >            nop
3f38 : ea              >            nop
                       >            tst_a $ff-$83,0
3f39 : 08              >            php         ;save flags
3f3a : c97c            >            cmp #$ff-$83     ;test result
                       >            trap_ne
3f3c : f003            >        beq skip0791
                       >        trap            ;failed not equal (non zero)
3f3e : 200461          >        jsr report_error
                       >
3f41 :                 >skip0791
                       >
3f41 : 68              >            pla         ;load status
3f42 : 48              >            pha
                       >            cmp_flag 0
3f43 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3f45 : f003            >        beq skip0794
                       >        trap            ;failed not equal (non zero)
3f47 : 200461          >        jsr report_error
                       >
3f4a :                 >skip0794
                       >
3f4a : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$83,$ff
                       >            load_flag $ff
3f4b : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3f4d : 48              >            pha         ;use stack to load status
3f4e : a927            >            lda #$aa-$83     ;precharge accu
3f50 : 28              >            plp
                       >
3f51 : 83              >            db  $83          ;test nop integrity - flags on
3f52 : ea              >            nop
3f53 : ea              >            nop
                       >            tst_a $aa-$83,$ff
3f54 : 08              >            php         ;save flags
3f55 : c927            >            cmp #$aa-$83     ;test result
                       >            trap_ne
3f57 : f003            >        beq skip0799
                       >        trap            ;failed not equal (non zero)
3f59 : 200461          >        jsr report_error
                       >
3f5c :                 >skip0799
                       >
3f5c : 68              >            pla         ;load status
3f5d : 48              >            pha
                       >            cmp_flag $ff
3f5e : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3f60 : f003            >        beq skip0802
                       >        trap            ;failed not equal (non zero)
3f62 : 200461          >        jsr report_error
                       >
3f65 :                 >skip0802
                       >
3f65 : 28              >            plp         ;restore status
                       >
3f66 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
3f68 : f003            >        beq skip0804
                       >        trap            ;failed not equal (non zero)
3f6a : 200461          >        jsr report_error
                       >
3f6d :                 >skip0804
                       >
3f6d : e000            >            cpx #0
                       >            trap_ne         ;x changed
3f6f : f003            >        beq skip0806
                       >        trap            ;failed not equal (non zero)
3f71 : 200461          >        jsr report_error
                       >
3f74 :                 >skip0806
                       >
                        
                                nop_test $93,1
3f74 : a042            >            ldy #$42
3f76 : a203            >            ldx #4-1
3f78 : 93              >            db  $93          ;test nop length
                       >        if 1 = 1
3f79 : ca              >            dex
3f7a : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
3f7b : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
3f7c : f003            >        beq skip0809
                       >        trap            ;failed not equal (non zero)
3f7e : 200461          >        jsr report_error
                       >
3f81 :                 >skip0809
                       >
                       >            set_a $ff-$93,0
                       >            load_flag 0
3f81 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3f83 : 48              >            pha         ;use stack to load status
3f84 : a96c            >            lda #$ff-$93     ;precharge accu
3f86 : 28              >            plp
                       >
3f87 : 93              >            db  $93          ;test nop integrity - flags off
3f88 : ea              >            nop
3f89 : ea              >            nop
                       >            tst_a $ff-$93,0
3f8a : 08              >            php         ;save flags
3f8b : c96c            >            cmp #$ff-$93     ;test result
                       >            trap_ne
3f8d : f003            >        beq skip0814
                       >        trap            ;failed not equal (non zero)
3f8f : 200461          >        jsr report_error
                       >
3f92 :                 >skip0814
                       >
3f92 : 68              >            pla         ;load status
3f93 : 48              >            pha
                       >            cmp_flag 0
3f94 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3f96 : f003            >        beq skip0817
                       >        trap            ;failed not equal (non zero)
3f98 : 200461          >        jsr report_error
                       >
3f9b :                 >skip0817
                       >
3f9b : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$93,$ff
                       >            load_flag $ff
3f9c : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3f9e : 48              >            pha         ;use stack to load status
3f9f : a917            >            lda #$aa-$93     ;precharge accu
3fa1 : 28              >            plp
                       >
3fa2 : 93              >            db  $93          ;test nop integrity - flags on
3fa3 : ea              >            nop
3fa4 : ea              >            nop
                       >            tst_a $aa-$93,$ff
3fa5 : 08              >            php         ;save flags
3fa6 : c917            >            cmp #$aa-$93     ;test result
                       >            trap_ne
3fa8 : f003            >        beq skip0822
                       >        trap            ;failed not equal (non zero)
3faa : 200461          >        jsr report_error
                       >
3fad :                 >skip0822
                       >
3fad : 68              >            pla         ;load status
3fae : 48              >            pha
                       >            cmp_flag $ff
3faf : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3fb1 : f003            >        beq skip0825
                       >        trap            ;failed not equal (non zero)
3fb3 : 200461          >        jsr report_error
                       >
3fb6 :                 >skip0825
                       >
3fb6 : 28              >            plp         ;restore status
                       >
3fb7 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
3fb9 : f003            >        beq skip0827
                       >        trap            ;failed not equal (non zero)
3fbb : 200461          >        jsr report_error
                       >
3fbe :                 >skip0827
                       >
3fbe : e000            >            cpx #0
                       >            trap_ne         ;x changed
3fc0 : f003            >        beq skip0829
                       >        trap            ;failed not equal (non zero)
3fc2 : 200461          >        jsr report_error
                       >
3fc5 :                 >skip0829
                       >
                        
                                nop_test $a3,1
3fc5 : a042            >            ldy #$42
3fc7 : a203            >            ldx #4-1
3fc9 : a3              >            db  $a3          ;test nop length
                       >        if 1 = 1
3fca : ca              >            dex
3fcb : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
3fcc : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
3fcd : f003            >        beq skip0832
                       >        trap            ;failed not equal (non zero)
3fcf : 200461          >        jsr report_error
                       >
3fd2 :                 >skip0832
                       >
                       >            set_a $ff-$a3,0
                       >            load_flag 0
3fd2 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3fd4 : 48              >            pha         ;use stack to load status
3fd5 : a95c            >            lda #$ff-$a3     ;precharge accu
3fd7 : 28              >            plp
                       >
3fd8 : a3              >            db  $a3          ;test nop integrity - flags off
3fd9 : ea              >            nop
3fda : ea              >            nop
                       >            tst_a $ff-$a3,0
3fdb : 08              >            php         ;save flags
3fdc : c95c            >            cmp #$ff-$a3     ;test result
                       >            trap_ne
3fde : f003            >        beq skip0837
                       >        trap            ;failed not equal (non zero)
3fe0 : 200461          >        jsr report_error
                       >
3fe3 :                 >skip0837
                       >
3fe3 : 68              >            pla         ;load status
3fe4 : 48              >            pha
                       >            cmp_flag 0
3fe5 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3fe7 : f003            >        beq skip0840
                       >        trap            ;failed not equal (non zero)
3fe9 : 200461          >        jsr report_error
                       >
3fec :                 >skip0840
                       >
3fec : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$a3,$ff
                       >            load_flag $ff
3fed : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3fef : 48              >            pha         ;use stack to load status
3ff0 : a907            >            lda #$aa-$a3     ;precharge accu
3ff2 : 28              >            plp
                       >
3ff3 : a3              >            db  $a3          ;test nop integrity - flags on
3ff4 : ea              >            nop
3ff5 : ea              >            nop
                       >            tst_a $aa-$a3,$ff
3ff6 : 08              >            php         ;save flags
3ff7 : c907            >            cmp #$aa-$a3     ;test result
                       >            trap_ne
3ff9 : f003            >        beq skip0845
                       >        trap            ;failed not equal (non zero)
3ffb : 200461          >        jsr report_error
                       >
3ffe :                 >skip0845
                       >
3ffe : 68              >            pla         ;load status
3fff : 48              >            pha
                       >            cmp_flag $ff
4000 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4002 : f003            >        beq skip0848
                       >        trap            ;failed not equal (non zero)
4004 : 200461          >        jsr report_error
                       >
4007 :                 >skip0848
                       >
4007 : 28              >            plp         ;restore status
                       >
4008 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
400a : f003            >        beq skip0850
                       >        trap            ;failed not equal (non zero)
400c : 200461          >        jsr report_error
                       >
400f :                 >skip0850
                       >
400f : e000            >            cpx #0
                       >            trap_ne         ;x changed
4011 : f003            >        beq skip0852
                       >        trap            ;failed not equal (non zero)
4013 : 200461          >        jsr report_error
                       >
4016 :                 >skip0852
                       >
                        
                                nop_test $b3,1
4016 : a042            >            ldy #$42
4018 : a203            >            ldx #4-1
401a : b3              >            db  $b3          ;test nop length
                       >        if 1 = 1
401b : ca              >            dex
401c : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
401d : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
401e : f003            >        beq skip0855
                       >        trap            ;failed not equal (non zero)
4020 : 200461          >        jsr report_error
                       >
4023 :                 >skip0855
                       >
                       >            set_a $ff-$b3,0
                       >            load_flag 0
4023 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4025 : 48              >            pha         ;use stack to load status
4026 : a94c            >            lda #$ff-$b3     ;precharge accu
4028 : 28              >            plp
                       >
4029 : b3              >            db  $b3          ;test nop integrity - flags off
402a : ea              >            nop
402b : ea              >            nop
                       >            tst_a $ff-$b3,0
402c : 08              >            php         ;save flags
402d : c94c            >            cmp #$ff-$b3     ;test result
                       >            trap_ne
402f : f003            >        beq skip0860
                       >        trap            ;failed not equal (non zero)
4031 : 200461          >        jsr report_error
                       >
4034 :                 >skip0860
                       >
4034 : 68              >            pla         ;load status
4035 : 48              >            pha
                       >            cmp_flag 0
4036 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4038 : f003            >        beq skip0863
                       >        trap            ;failed not equal (non zero)
403a : 200461          >        jsr report_error
                       >
403d :                 >skip0863
                       >
403d : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$b3,$ff
                       >            load_flag $ff
403e : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4040 : 48              >            pha         ;use stack to load status
4041 : a9f7            >            lda #$aa-$b3     ;precharge accu
4043 : 28              >            plp
                       >
4044 : b3              >            db  $b3          ;test nop integrity - flags on
4045 : ea              >            nop
4046 : ea              >            nop
                       >            tst_a $aa-$b3,$ff
4047 : 08              >            php         ;save flags
4048 : c9f7            >            cmp #$aa-$b3     ;test result
                       >            trap_ne
404a : f003            >        beq skip0868
                       >        trap            ;failed not equal (non zero)
404c : 200461          >        jsr report_error
                       >
404f :                 >skip0868
                       >
404f : 68              >            pla         ;load status
4050 : 48              >            pha
                       >            cmp_flag $ff
4051 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4053 : f003            >        beq skip0871
                       >        trap            ;failed not equal (non zero)
4055 : 200461          >        jsr report_error
                       >
4058 :                 >skip0871
                       >
4058 : 28              >            plp         ;restore status
                       >
4059 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
405b : f003            >        beq skip0873
                       >        trap            ;failed not equal (non zero)
405d : 200461          >        jsr report_error
                       >
4060 :                 >skip0873
                       >
4060 : e000            >            cpx #0
                       >            trap_ne         ;x changed
4062 : f003            >        beq skip0875
                       >        trap            ;failed not equal (non zero)
4064 : 200461          >        jsr report_error
                       >
4067 :                 >skip0875
                       >
                        
                                nop_test $c3,1
4067 : a042            >            ldy #$42
4069 : a203            >            ldx #4-1
406b : c3              >            db  $c3          ;test nop length
                       >        if 1 = 1
406c : ca              >            dex
406d : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
406e : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
406f : f003            >        beq skip0878
                       >        trap            ;failed not equal (non zero)
4071 : 200461          >        jsr report_error
                       >
4074 :                 >skip0878
                       >
                       >            set_a $ff-$c3,0
                       >            load_flag 0
4074 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4076 : 48              >            pha         ;use stack to load status
4077 : a93c            >            lda #$ff-$c3     ;precharge accu
4079 : 28              >            plp
                       >
407a : c3              >            db  $c3          ;test nop integrity - flags off
407b : ea              >            nop
407c : ea              >            nop
                       >            tst_a $ff-$c3,0
407d : 08              >            php         ;save flags
407e : c93c            >            cmp #$ff-$c3     ;test result
                       >            trap_ne
4080 : f003            >        beq skip0883
                       >        trap            ;failed not equal (non zero)
4082 : 200461          >        jsr report_error
                       >
4085 :                 >skip0883
                       >
4085 : 68              >            pla         ;load status
4086 : 48              >            pha
                       >            cmp_flag 0
4087 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4089 : f003            >        beq skip0886
                       >        trap            ;failed not equal (non zero)
408b : 200461          >        jsr report_error
                       >
408e :                 >skip0886
                       >
408e : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$c3,$ff
                       >            load_flag $ff
408f : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4091 : 48              >            pha         ;use stack to load status
4092 : a9e7            >            lda #$aa-$c3     ;precharge accu
4094 : 28              >            plp
                       >
4095 : c3              >            db  $c3          ;test nop integrity - flags on
4096 : ea              >            nop
4097 : ea              >            nop
                       >            tst_a $aa-$c3,$ff
4098 : 08              >            php         ;save flags
4099 : c9e7            >            cmp #$aa-$c3     ;test result
                       >            trap_ne
409b : f003            >        beq skip0891
                       >        trap            ;failed not equal (non zero)
409d : 200461          >        jsr report_error
                       >
40a0 :                 >skip0891
                       >
40a0 : 68              >            pla         ;load status
40a1 : 48              >            pha
                       >            cmp_flag $ff
40a2 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
40a4 : f003            >        beq skip0894
                       >        trap            ;failed not equal (non zero)
40a6 : 200461          >        jsr report_error
                       >
40a9 :                 >skip0894
                       >
40a9 : 28              >            plp         ;restore status
                       >
40aa : c042            >            cpy #$42
                       >            trap_ne         ;y changed
40ac : f003            >        beq skip0896
                       >        trap            ;failed not equal (non zero)
40ae : 200461          >        jsr report_error
                       >
40b1 :                 >skip0896
                       >
40b1 : e000            >            cpx #0
                       >            trap_ne         ;x changed
40b3 : f003            >        beq skip0898
                       >        trap            ;failed not equal (non zero)
40b5 : 200461          >        jsr report_error
                       >
40b8 :                 >skip0898
                       >
                        
                                nop_test $d3,1
40b8 : a042            >            ldy #$42
40ba : a203            >            ldx #4-1
40bc : d3              >            db  $d3          ;test nop length
                       >        if 1 = 1
40bd : ca              >            dex
40be : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
40bf : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
40c0 : f003            >        beq skip0901
                       >        trap            ;failed not equal (non zero)
40c2 : 200461          >        jsr report_error
                       >
40c5 :                 >skip0901
                       >
                       >            set_a $ff-$d3,0
                       >            load_flag 0
40c5 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
40c7 : 48              >            pha         ;use stack to load status
40c8 : a92c            >            lda #$ff-$d3     ;precharge accu
40ca : 28              >            plp
                       >
40cb : d3              >            db  $d3          ;test nop integrity - flags off
40cc : ea              >            nop
40cd : ea              >            nop
                       >            tst_a $ff-$d3,0
40ce : 08              >            php         ;save flags
40cf : c92c            >            cmp #$ff-$d3     ;test result
                       >            trap_ne
40d1 : f003            >        beq skip0906
                       >        trap            ;failed not equal (non zero)
40d3 : 200461          >        jsr report_error
                       >
40d6 :                 >skip0906
                       >
40d6 : 68              >            pla         ;load status
40d7 : 48              >            pha
                       >            cmp_flag 0
40d8 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
40da : f003            >        beq skip0909
                       >        trap            ;failed not equal (non zero)
40dc : 200461          >        jsr report_error
                       >
40df :                 >skip0909
                       >
40df : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$d3,$ff
                       >            load_flag $ff
40e0 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
40e2 : 48              >            pha         ;use stack to load status
40e3 : a9d7            >            lda #$aa-$d3     ;precharge accu
40e5 : 28              >            plp
                       >
40e6 : d3              >            db  $d3          ;test nop integrity - flags on
40e7 : ea              >            nop
40e8 : ea              >            nop
                       >            tst_a $aa-$d3,$ff
40e9 : 08              >            php         ;save flags
40ea : c9d7            >            cmp #$aa-$d3     ;test result
                       >            trap_ne
40ec : f003            >        beq skip0914
                       >        trap            ;failed not equal (non zero)
40ee : 200461          >        jsr report_error
                       >
40f1 :                 >skip0914
                       >
40f1 : 68              >            pla         ;load status
40f2 : 48              >            pha
                       >            cmp_flag $ff
40f3 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
40f5 : f003            >        beq skip0917
                       >        trap            ;failed not equal (non zero)
40f7 : 200461          >        jsr report_error
                       >
40fa :                 >skip0917
                       >
40fa : 28              >            plp         ;restore status
                       >
40fb : c042            >            cpy #$42
                       >            trap_ne         ;y changed
40fd : f003            >        beq skip0919
                       >        trap            ;failed not equal (non zero)
40ff : 200461          >        jsr report_error
                       >
4102 :                 >skip0919
                       >
4102 : e000            >            cpx #0
                       >            trap_ne         ;x changed
4104 : f003            >        beq skip0921
                       >        trap            ;failed not equal (non zero)
4106 : 200461          >        jsr report_error
                       >
4109 :                 >skip0921
                       >
                        
                                nop_test $e3,1
4109 : a042            >            ldy #$42
410b : a203            >            ldx #4-1
410d : e3              >            db  $e3          ;test nop length
                       >        if 1 = 1
410e : ca              >            dex
410f : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
4110 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
4111 : f003            >        beq skip0924
                       >        trap            ;failed not equal (non zero)
4113 : 200461          >        jsr report_error
                       >
4116 :                 >skip0924
                       >
                       >            set_a $ff-$e3,0
                       >            load_flag 0
4116 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4118 : 48              >            pha         ;use stack to load status
4119 : a91c            >            lda #$ff-$e3     ;precharge accu
411b : 28              >            plp
                       >
411c : e3              >            db  $e3          ;test nop integrity - flags off
411d : ea              >            nop
411e : ea              >            nop
                       >            tst_a $ff-$e3,0
411f : 08              >            php         ;save flags
4120 : c91c            >            cmp #$ff-$e3     ;test result
                       >            trap_ne
4122 : f003            >        beq skip0929
                       >        trap            ;failed not equal (non zero)
4124 : 200461          >        jsr report_error
                       >
4127 :                 >skip0929
                       >
4127 : 68              >            pla         ;load status
4128 : 48              >            pha
                       >            cmp_flag 0
4129 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
412b : f003            >        beq skip0932
                       >        trap            ;failed not equal (non zero)
412d : 200461          >        jsr report_error
                       >
4130 :                 >skip0932
                       >
4130 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$e3,$ff
                       >            load_flag $ff
4131 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4133 : 48              >            pha         ;use stack to load status
4134 : a9c7            >            lda #$aa-$e3     ;precharge accu
4136 : 28              >            plp
                       >
4137 : e3              >            db  $e3          ;test nop integrity - flags on
4138 : ea              >            nop
4139 : ea              >            nop
                       >            tst_a $aa-$e3,$ff
413a : 08              >            php         ;save flags
413b : c9c7            >            cmp #$aa-$e3     ;test result
                       >            trap_ne
413d : f003            >        beq skip0937
                       >        trap            ;failed not equal (non zero)
413f : 200461          >        jsr report_error
                       >
4142 :                 >skip0937
                       >
4142 : 68              >            pla         ;load status
4143 : 48              >            pha
                       >            cmp_flag $ff
4144 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4146 : f003            >        beq skip0940
                       >        trap            ;failed not equal (non zero)
4148 : 200461          >        jsr report_error
                       >
414b :                 >skip0940
                       >
414b : 28              >            plp         ;restore status
                       >
414c : c042            >            cpy #$42
                       >            trap_ne         ;y changed
414e : f003            >        beq skip0942
                       >        trap            ;failed not equal (non zero)
4150 : 200461          >        jsr report_error
                       >
4153 :                 >skip0942
                       >
4153 : e000            >            cpx #0
                       >            trap_ne         ;x changed
4155 : f003            >        beq skip0944
                       >        trap            ;failed not equal (non zero)
4157 : 200461          >        jsr report_error
                       >
415a :                 >skip0944
                       >
                        
                                nop_test $f3,1
415a : a042            >            ldy #$42
415c : a203            >            ldx #4-1
415e : f3              >            db  $f3          ;test nop length
                       >        if 1 = 1
415f : ca              >            dex
4160 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
4161 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
4162 : f003            >        beq skip0947
                       >        trap            ;failed not equal (non zero)
4164 : 200461          >        jsr report_error
                       >
4167 :                 >skip0947
                       >
                       >            set_a $ff-$f3,0
                       >            load_flag 0
4167 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4169 : 48              >            pha         ;use stack to load status
416a : a90c            >            lda #$ff-$f3     ;precharge accu
416c : 28              >            plp
                       >
416d : f3              >            db  $f3          ;test nop integrity - flags off
416e : ea              >            nop
416f : ea              >            nop
                       >            tst_a $ff-$f3,0
4170 : 08              >            php         ;save flags
4171 : c90c            >            cmp #$ff-$f3     ;test result
                       >            trap_ne
4173 : f003            >        beq skip0952
                       >        trap            ;failed not equal (non zero)
4175 : 200461          >        jsr report_error
                       >
4178 :                 >skip0952
                       >
4178 : 68              >            pla         ;load status
4179 : 48              >            pha
                       >            cmp_flag 0
417a : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
417c : f003            >        beq skip0955
                       >        trap            ;failed not equal (non zero)
417e : 200461          >        jsr report_error
                       >
4181 :                 >skip0955
                       >
4181 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$f3,$ff
                       >            load_flag $ff
4182 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4184 : 48              >            pha         ;use stack to load status
4185 : a9b7            >            lda #$aa-$f3     ;precharge accu
4187 : 28              >            plp
                       >
4188 : f3              >            db  $f3          ;test nop integrity - flags on
4189 : ea              >            nop
418a : ea              >            nop
                       >            tst_a $aa-$f3,$ff
418b : 08              >            php         ;save flags
418c : c9b7            >            cmp #$aa-$f3     ;test result
                       >            trap_ne
418e : f003            >        beq skip0960
                       >        trap            ;failed not equal (non zero)
4190 : 200461          >        jsr report_error
                       >
4193 :                 >skip0960
                       >
4193 : 68              >            pla         ;load status
4194 : 48              >            pha
                       >            cmp_flag $ff
4195 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4197 : f003            >        beq skip0963
                       >        trap            ;failed not equal (non zero)
4199 : 200461          >        jsr report_error
                       >
419c :                 >skip0963
                       >
419c : 28              >            plp         ;restore status
                       >
419d : c042            >            cpy #$42
                       >            trap_ne         ;y changed
419f : f003            >        beq skip0965
                       >        trap            ;failed not equal (non zero)
41a1 : 200461          >        jsr report_error
                       >
41a4 :                 >skip0965
                       >
41a4 : e000            >            cpx #0
                       >            trap_ne         ;x changed
41a6 : f003            >        beq skip0967
                       >        trap            ;failed not equal (non zero)
41a8 : 200461          >        jsr report_error
                       >
41ab :                 >skip0967
                       >
                        
                                nop_test $0b,1
41ab : a042            >            ldy #$42
41ad : a203            >            ldx #4-1
41af : 0b              >            db  $0b          ;test nop length
                       >        if 1 = 1
41b0 : ca              >            dex
41b1 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
41b2 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
41b3 : f003            >        beq skip0970
                       >        trap            ;failed not equal (non zero)
41b5 : 200461          >        jsr report_error
                       >
41b8 :                 >skip0970
                       >
                       >            set_a $ff-$0b,0
                       >            load_flag 0
41b8 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
41ba : 48              >            pha         ;use stack to load status
41bb : a9f4            >            lda #$ff-$0b     ;precharge accu
41bd : 28              >            plp
                       >
41be : 0b              >            db  $0b          ;test nop integrity - flags off
41bf : ea              >            nop
41c0 : ea              >            nop
                       >            tst_a $ff-$0b,0
41c1 : 08              >            php         ;save flags
41c2 : c9f4            >            cmp #$ff-$0b     ;test result
                       >            trap_ne
41c4 : f003            >        beq skip0975
                       >        trap            ;failed not equal (non zero)
41c6 : 200461          >        jsr report_error
                       >
41c9 :                 >skip0975
                       >
41c9 : 68              >            pla         ;load status
41ca : 48              >            pha
                       >            cmp_flag 0
41cb : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
41cd : f003            >        beq skip0978
                       >        trap            ;failed not equal (non zero)
41cf : 200461          >        jsr report_error
                       >
41d2 :                 >skip0978
                       >
41d2 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$0b,$ff
                       >            load_flag $ff
41d3 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
41d5 : 48              >            pha         ;use stack to load status
41d6 : a99f            >            lda #$aa-$0b     ;precharge accu
41d8 : 28              >            plp
                       >
41d9 : 0b              >            db  $0b          ;test nop integrity - flags on
41da : ea              >            nop
41db : ea              >            nop
                       >            tst_a $aa-$0b,$ff
41dc : 08              >            php         ;save flags
41dd : c99f            >            cmp #$aa-$0b     ;test result
                       >            trap_ne
41df : f003            >        beq skip0983
                       >        trap            ;failed not equal (non zero)
41e1 : 200461          >        jsr report_error
                       >
41e4 :                 >skip0983
                       >
41e4 : 68              >            pla         ;load status
41e5 : 48              >            pha
                       >            cmp_flag $ff
41e6 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
41e8 : f003            >        beq skip0986
                       >        trap            ;failed not equal (non zero)
41ea : 200461          >        jsr report_error
                       >
41ed :                 >skip0986
                       >
41ed : 28              >            plp         ;restore status
                       >
41ee : c042            >            cpy #$42
                       >            trap_ne         ;y changed
41f0 : f003            >        beq skip0988
                       >        trap            ;failed not equal (non zero)
41f2 : 200461          >        jsr report_error
                       >
41f5 :                 >skip0988
                       >
41f5 : e000            >            cpx #0
                       >            trap_ne         ;x changed
41f7 : f003            >        beq skip0990
                       >        trap            ;failed not equal (non zero)
41f9 : 200461          >        jsr report_error
                       >
41fc :                 >skip0990
                       >
                        
                                nop_test $1b,1
41fc : a042            >            ldy #$42
41fe : a203            >            ldx #4-1
4200 : 1b              >            db  $1b          ;test nop length
                       >        if 1 = 1
4201 : ca              >            dex
4202 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
4203 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
4204 : f003            >        beq skip0993
                       >        trap            ;failed not equal (non zero)
4206 : 200461          >        jsr report_error
                       >
4209 :                 >skip0993
                       >
                       >            set_a $ff-$1b,0
                       >            load_flag 0
4209 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
420b : 48              >            pha         ;use stack to load status
420c : a9e4            >            lda #$ff-$1b     ;precharge accu
420e : 28              >            plp
                       >
420f : 1b              >            db  $1b          ;test nop integrity - flags off
4210 : ea              >            nop
4211 : ea              >            nop
                       >            tst_a $ff-$1b,0
4212 : 08              >            php         ;save flags
4213 : c9e4            >            cmp #$ff-$1b     ;test result
                       >            trap_ne
4215 : f003            >        beq skip0998
                       >        trap            ;failed not equal (non zero)
4217 : 200461          >        jsr report_error
                       >
421a :                 >skip0998
                       >
421a : 68              >            pla         ;load status
421b : 48              >            pha
                       >            cmp_flag 0
421c : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
421e : f003            >        beq skip1001
                       >        trap            ;failed not equal (non zero)
4220 : 200461          >        jsr report_error
                       >
4223 :                 >skip1001
                       >
4223 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$1b,$ff
                       >            load_flag $ff
4224 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4226 : 48              >            pha         ;use stack to load status
4227 : a98f            >            lda #$aa-$1b     ;precharge accu
4229 : 28              >            plp
                       >
422a : 1b              >            db  $1b          ;test nop integrity - flags on
422b : ea              >            nop
422c : ea              >            nop
                       >            tst_a $aa-$1b,$ff
422d : 08              >            php         ;save flags
422e : c98f            >            cmp #$aa-$1b     ;test result
                       >            trap_ne
4230 : f003            >        beq skip1006
                       >        trap            ;failed not equal (non zero)
4232 : 200461          >        jsr report_error
                       >
4235 :                 >skip1006
                       >
4235 : 68              >            pla         ;load status
4236 : 48              >            pha
                       >            cmp_flag $ff
4237 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4239 : f003            >        beq skip1009
                       >        trap            ;failed not equal (non zero)
423b : 200461          >        jsr report_error
                       >
423e :                 >skip1009
                       >
423e : 28              >            plp         ;restore status
                       >
423f : c042            >            cpy #$42
                       >            trap_ne         ;y changed
4241 : f003            >        beq skip1011
                       >        trap            ;failed not equal (non zero)
4243 : 200461          >        jsr report_error
                       >
4246 :                 >skip1011
                       >
4246 : e000            >            cpx #0
                       >            trap_ne         ;x changed
4248 : f003            >        beq skip1013
                       >        trap            ;failed not equal (non zero)
424a : 200461          >        jsr report_error
                       >
424d :                 >skip1013
                       >
                        
                                nop_test $2b,1
424d : a042            >            ldy #$42
424f : a203            >            ldx #4-1
4251 : 2b              >            db  $2b          ;test nop length
                       >        if 1 = 1
4252 : ca              >            dex
4253 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
4254 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
4255 : f003            >        beq skip1016
                       >        trap            ;failed not equal (non zero)
4257 : 200461          >        jsr report_error
                       >
425a :                 >skip1016
                       >
                       >            set_a $ff-$2b,0
                       >            load_flag 0
425a : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
425c : 48              >            pha         ;use stack to load status
425d : a9d4            >            lda #$ff-$2b     ;precharge accu
425f : 28              >            plp
                       >
4260 : 2b              >            db  $2b          ;test nop integrity - flags off
4261 : ea              >            nop
4262 : ea              >            nop
                       >            tst_a $ff-$2b,0
4263 : 08              >            php         ;save flags
4264 : c9d4            >            cmp #$ff-$2b     ;test result
                       >            trap_ne
4266 : f003            >        beq skip1021
                       >        trap            ;failed not equal (non zero)
4268 : 200461          >        jsr report_error
                       >
426b :                 >skip1021
                       >
426b : 68              >            pla         ;load status
426c : 48              >            pha
                       >            cmp_flag 0
426d : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
426f : f003            >        beq skip1024
                       >        trap            ;failed not equal (non zero)
4271 : 200461          >        jsr report_error
                       >
4274 :                 >skip1024
                       >
4274 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$2b,$ff
                       >            load_flag $ff
4275 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4277 : 48              >            pha         ;use stack to load status
4278 : a97f            >            lda #$aa-$2b     ;precharge accu
427a : 28              >            plp
                       >
427b : 2b              >            db  $2b          ;test nop integrity - flags on
427c : ea              >            nop
427d : ea              >            nop
                       >            tst_a $aa-$2b,$ff
427e : 08              >            php         ;save flags
427f : c97f            >            cmp #$aa-$2b     ;test result
                       >            trap_ne
4281 : f003            >        beq skip1029
                       >        trap            ;failed not equal (non zero)
4283 : 200461          >        jsr report_error
                       >
4286 :                 >skip1029
                       >
4286 : 68              >            pla         ;load status
4287 : 48              >            pha
                       >            cmp_flag $ff
4288 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
428a : f003            >        beq skip1032
                       >        trap            ;failed not equal (non zero)
428c : 200461          >        jsr report_error
                       >
428f :                 >skip1032
                       >
428f : 28              >            plp         ;restore status
                       >
4290 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
4292 : f003            >        beq skip1034
                       >        trap            ;failed not equal (non zero)
4294 : 200461          >        jsr report_error
                       >
4297 :                 >skip1034
                       >
4297 : e000            >            cpx #0
                       >            trap_ne         ;x changed
4299 : f003            >        beq skip1036
                       >        trap            ;failed not equal (non zero)
429b : 200461          >        jsr report_error
                       >
429e :                 >skip1036
                       >
                        
                                nop_test $3b,1
429e : a042            >            ldy #$42
42a0 : a203            >            ldx #4-1
42a2 : 3b              >            db  $3b          ;test nop length
                       >        if 1 = 1
42a3 : ca              >            dex
42a4 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
42a5 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
42a6 : f003            >        beq skip1039
                       >        trap            ;failed not equal (non zero)
42a8 : 200461          >        jsr report_error
                       >
42ab :                 >skip1039
                       >
                       >            set_a $ff-$3b,0
                       >            load_flag 0
42ab : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
42ad : 48              >            pha         ;use stack to load status
42ae : a9c4            >            lda #$ff-$3b     ;precharge accu
42b0 : 28              >            plp
                       >
42b1 : 3b              >            db  $3b          ;test nop integrity - flags off
42b2 : ea              >            nop
42b3 : ea              >            nop
                       >            tst_a $ff-$3b,0
42b4 : 08              >            php         ;save flags
42b5 : c9c4            >            cmp #$ff-$3b     ;test result
                       >            trap_ne
42b7 : f003            >        beq skip1044
                       >        trap            ;failed not equal (non zero)
42b9 : 200461          >        jsr report_error
                       >
42bc :                 >skip1044
                       >
42bc : 68              >            pla         ;load status
42bd : 48              >            pha
                       >            cmp_flag 0
42be : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
42c0 : f003            >        beq skip1047
                       >        trap            ;failed not equal (non zero)
42c2 : 200461          >        jsr report_error
                       >
42c5 :                 >skip1047
                       >
42c5 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$3b,$ff
                       >            load_flag $ff
42c6 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
42c8 : 48              >            pha         ;use stack to load status
42c9 : a96f            >            lda #$aa-$3b     ;precharge accu
42cb : 28              >            plp
                       >
42cc : 3b              >            db  $3b          ;test nop integrity - flags on
42cd : ea              >            nop
42ce : ea              >            nop
                       >            tst_a $aa-$3b,$ff
42cf : 08              >            php         ;save flags
42d0 : c96f            >            cmp #$aa-$3b     ;test result
                       >            trap_ne
42d2 : f003            >        beq skip1052
                       >        trap            ;failed not equal (non zero)
42d4 : 200461          >        jsr report_error
                       >
42d7 :                 >skip1052
                       >
42d7 : 68              >            pla         ;load status
42d8 : 48              >            pha
                       >            cmp_flag $ff
42d9 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
42db : f003            >        beq skip1055
                       >        trap            ;failed not equal (non zero)
42dd : 200461          >        jsr report_error
                       >
42e0 :                 >skip1055
                       >
42e0 : 28              >            plp         ;restore status
                       >
42e1 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
42e3 : f003            >        beq skip1057
                       >        trap            ;failed not equal (non zero)
42e5 : 200461          >        jsr report_error
                       >
42e8 :                 >skip1057
                       >
42e8 : e000            >            cpx #0
                       >            trap_ne         ;x changed
42ea : f003            >        beq skip1059
                       >        trap            ;failed not equal (non zero)
42ec : 200461          >        jsr report_error
                       >
42ef :                 >skip1059
                       >
                        
                                nop_test $4b,1
42ef : a042            >            ldy #$42
42f1 : a203            >            ldx #4-1
42f3 : 4b              >            db  $4b          ;test nop length
                       >        if 1 = 1
42f4 : ca              >            dex
42f5 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
42f6 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
42f7 : f003            >        beq skip1062
                       >        trap            ;failed not equal (non zero)
42f9 : 200461          >        jsr report_error
                       >
42fc :                 >skip1062
                       >
                       >            set_a $ff-$4b,0
                       >            load_flag 0
42fc : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
42fe : 48              >            pha         ;use stack to load status
42ff : a9b4            >            lda #$ff-$4b     ;precharge accu
4301 : 28              >            plp
                       >
4302 : 4b              >            db  $4b          ;test nop integrity - flags off
4303 : ea              >            nop
4304 : ea              >            nop
                       >            tst_a $ff-$4b,0
4305 : 08              >            php         ;save flags
4306 : c9b4            >            cmp #$ff-$4b     ;test result
                       >            trap_ne
4308 : f003            >        beq skip1067
                       >        trap            ;failed not equal (non zero)
430a : 200461          >        jsr report_error
                       >
430d :                 >skip1067
                       >
430d : 68              >            pla         ;load status
430e : 48              >            pha
                       >            cmp_flag 0
430f : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4311 : f003            >        beq skip1070
                       >        trap            ;failed not equal (non zero)
4313 : 200461          >        jsr report_error
                       >
4316 :                 >skip1070
                       >
4316 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$4b,$ff
                       >            load_flag $ff
4317 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4319 : 48              >            pha         ;use stack to load status
431a : a95f            >            lda #$aa-$4b     ;precharge accu
431c : 28              >            plp
                       >
431d : 4b              >            db  $4b          ;test nop integrity - flags on
431e : ea              >            nop
431f : ea              >            nop
                       >            tst_a $aa-$4b,$ff
4320 : 08              >            php         ;save flags
4321 : c95f            >            cmp #$aa-$4b     ;test result
                       >            trap_ne
4323 : f003            >        beq skip1075
                       >        trap            ;failed not equal (non zero)
4325 : 200461          >        jsr report_error
                       >
4328 :                 >skip1075
                       >
4328 : 68              >            pla         ;load status
4329 : 48              >            pha
                       >            cmp_flag $ff
432a : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
432c : f003            >        beq skip1078
                       >        trap            ;failed not equal (non zero)
432e : 200461          >        jsr report_error
                       >
4331 :                 >skip1078
                       >
4331 : 28              >            plp         ;restore status
                       >
4332 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
4334 : f003            >        beq skip1080
                       >        trap            ;failed not equal (non zero)
4336 : 200461          >        jsr report_error
                       >
4339 :                 >skip1080
                       >
4339 : e000            >            cpx #0
                       >            trap_ne         ;x changed
433b : f003            >        beq skip1082
                       >        trap            ;failed not equal (non zero)
433d : 200461          >        jsr report_error
                       >
4340 :                 >skip1082
                       >
                        
                                nop_test $5b,1
4340 : a042            >            ldy #$42
4342 : a203            >            ldx #4-1
4344 : 5b              >            db  $5b          ;test nop length
                       >        if 1 = 1
4345 : ca              >            dex
4346 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
4347 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
4348 : f003            >        beq skip1085
                       >        trap            ;failed not equal (non zero)
434a : 200461          >        jsr report_error
                       >
434d :                 >skip1085
                       >
                       >            set_a $ff-$5b,0
                       >            load_flag 0
434d : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
434f : 48              >            pha         ;use stack to load status
4350 : a9a4            >            lda #$ff-$5b     ;precharge accu
4352 : 28              >            plp
                       >
4353 : 5b              >            db  $5b          ;test nop integrity - flags off
4354 : ea              >            nop
4355 : ea              >            nop
                       >            tst_a $ff-$5b,0
4356 : 08              >            php         ;save flags
4357 : c9a4            >            cmp #$ff-$5b     ;test result
                       >            trap_ne
4359 : f003            >        beq skip1090
                       >        trap            ;failed not equal (non zero)
435b : 200461          >        jsr report_error
                       >
435e :                 >skip1090
                       >
435e : 68              >            pla         ;load status
435f : 48              >            pha
                       >            cmp_flag 0
4360 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4362 : f003            >        beq skip1093
                       >        trap            ;failed not equal (non zero)
4364 : 200461          >        jsr report_error
                       >
4367 :                 >skip1093
                       >
4367 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$5b,$ff
                       >            load_flag $ff
4368 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
436a : 48              >            pha         ;use stack to load status
436b : a94f            >            lda #$aa-$5b     ;precharge accu
436d : 28              >            plp
                       >
436e : 5b              >            db  $5b          ;test nop integrity - flags on
436f : ea              >            nop
4370 : ea              >            nop
                       >            tst_a $aa-$5b,$ff
4371 : 08              >            php         ;save flags
4372 : c94f            >            cmp #$aa-$5b     ;test result
                       >            trap_ne
4374 : f003            >        beq skip1098
                       >        trap            ;failed not equal (non zero)
4376 : 200461          >        jsr report_error
                       >
4379 :                 >skip1098
                       >
4379 : 68              >            pla         ;load status
437a : 48              >            pha
                       >            cmp_flag $ff
437b : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
437d : f003            >        beq skip1101
                       >        trap            ;failed not equal (non zero)
437f : 200461          >        jsr report_error
                       >
4382 :                 >skip1101
                       >
4382 : 28              >            plp         ;restore status
                       >
4383 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
4385 : f003            >        beq skip1103
                       >        trap            ;failed not equal (non zero)
4387 : 200461          >        jsr report_error
                       >
438a :                 >skip1103
                       >
438a : e000            >            cpx #0
                       >            trap_ne         ;x changed
438c : f003            >        beq skip1105
                       >        trap            ;failed not equal (non zero)
438e : 200461          >        jsr report_error
                       >
4391 :                 >skip1105
                       >
                        
                                nop_test $6b,1
4391 : a042            >            ldy #$42
4393 : a203            >            ldx #4-1
4395 : 6b              >            db  $6b          ;test nop length
                       >        if 1 = 1
4396 : ca              >            dex
4397 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
4398 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
4399 : f003            >        beq skip1108
                       >        trap            ;failed not equal (non zero)
439b : 200461          >        jsr report_error
                       >
439e :                 >skip1108
                       >
                       >            set_a $ff-$6b,0
                       >            load_flag 0
439e : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
43a0 : 48              >            pha         ;use stack to load status
43a1 : a994            >            lda #$ff-$6b     ;precharge accu
43a3 : 28              >            plp
                       >
43a4 : 6b              >            db  $6b          ;test nop integrity - flags off
43a5 : ea              >            nop
43a6 : ea              >            nop
                       >            tst_a $ff-$6b,0
43a7 : 08              >            php         ;save flags
43a8 : c994            >            cmp #$ff-$6b     ;test result
                       >            trap_ne
43aa : f003            >        beq skip1113
                       >        trap            ;failed not equal (non zero)
43ac : 200461          >        jsr report_error
                       >
43af :                 >skip1113
                       >
43af : 68              >            pla         ;load status
43b0 : 48              >            pha
                       >            cmp_flag 0
43b1 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
43b3 : f003            >        beq skip1116
                       >        trap            ;failed not equal (non zero)
43b5 : 200461          >        jsr report_error
                       >
43b8 :                 >skip1116
                       >
43b8 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$6b,$ff
                       >            load_flag $ff
43b9 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
43bb : 48              >            pha         ;use stack to load status
43bc : a93f            >            lda #$aa-$6b     ;precharge accu
43be : 28              >            plp
                       >
43bf : 6b              >            db  $6b          ;test nop integrity - flags on
43c0 : ea              >            nop
43c1 : ea              >            nop
                       >            tst_a $aa-$6b,$ff
43c2 : 08              >            php         ;save flags
43c3 : c93f            >            cmp #$aa-$6b     ;test result
                       >            trap_ne
43c5 : f003            >        beq skip1121
                       >        trap            ;failed not equal (non zero)
43c7 : 200461          >        jsr report_error
                       >
43ca :                 >skip1121
                       >
43ca : 68              >            pla         ;load status
43cb : 48              >            pha
                       >            cmp_flag $ff
43cc : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
43ce : f003            >        beq skip1124
                       >        trap            ;failed not equal (non zero)
43d0 : 200461          >        jsr report_error
                       >
43d3 :                 >skip1124
                       >
43d3 : 28              >            plp         ;restore status
                       >
43d4 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
43d6 : f003            >        beq skip1126
                       >        trap            ;failed not equal (non zero)
43d8 : 200461          >        jsr report_error
                       >
43db :                 >skip1126
                       >
43db : e000            >            cpx #0
                       >            trap_ne         ;x changed
43dd : f003            >        beq skip1128
                       >        trap            ;failed not equal (non zero)
43df : 200461          >        jsr report_error
                       >
43e2 :                 >skip1128
                       >
                        
                                nop_test $7b,1
43e2 : a042            >            ldy #$42
43e4 : a203            >            ldx #4-1
43e6 : 7b              >            db  $7b          ;test nop length
                       >        if 1 = 1
43e7 : ca              >            dex
43e8 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
43e9 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
43ea : f003            >        beq skip1131
                       >        trap            ;failed not equal (non zero)
43ec : 200461          >        jsr report_error
                       >
43ef :                 >skip1131
                       >
                       >            set_a $ff-$7b,0
                       >            load_flag 0
43ef : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
43f1 : 48              >            pha         ;use stack to load status
43f2 : a984            >            lda #$ff-$7b     ;precharge accu
43f4 : 28              >            plp
                       >
43f5 : 7b              >            db  $7b          ;test nop integrity - flags off
43f6 : ea              >            nop
43f7 : ea              >            nop
                       >            tst_a $ff-$7b,0
43f8 : 08              >            php         ;save flags
43f9 : c984            >            cmp #$ff-$7b     ;test result
                       >            trap_ne
43fb : f003            >        beq skip1136
                       >        trap            ;failed not equal (non zero)
43fd : 200461          >        jsr report_error
                       >
4400 :                 >skip1136
                       >
4400 : 68              >            pla         ;load status
4401 : 48              >            pha
                       >            cmp_flag 0
4402 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4404 : f003            >        beq skip1139
                       >        trap            ;failed not equal (non zero)
4406 : 200461          >        jsr report_error
                       >
4409 :                 >skip1139
                       >
4409 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$7b,$ff
                       >            load_flag $ff
440a : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
440c : 48              >            pha         ;use stack to load status
440d : a92f            >            lda #$aa-$7b     ;precharge accu
440f : 28              >            plp
                       >
4410 : 7b              >            db  $7b          ;test nop integrity - flags on
4411 : ea              >            nop
4412 : ea              >            nop
                       >            tst_a $aa-$7b,$ff
4413 : 08              >            php         ;save flags
4414 : c92f            >            cmp #$aa-$7b     ;test result
                       >            trap_ne
4416 : f003            >        beq skip1144
                       >        trap            ;failed not equal (non zero)
4418 : 200461          >        jsr report_error
                       >
441b :                 >skip1144
                       >
441b : 68              >            pla         ;load status
441c : 48              >            pha
                       >            cmp_flag $ff
441d : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
441f : f003            >        beq skip1147
                       >        trap            ;failed not equal (non zero)
4421 : 200461          >        jsr report_error
                       >
4424 :                 >skip1147
                       >
4424 : 28              >            plp         ;restore status
                       >
4425 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
4427 : f003            >        beq skip1149
                       >        trap            ;failed not equal (non zero)
4429 : 200461          >        jsr report_error
                       >
442c :                 >skip1149
                       >
442c : e000            >            cpx #0
                       >            trap_ne         ;x changed
442e : f003            >        beq skip1151
                       >        trap            ;failed not equal (non zero)
4430 : 200461          >        jsr report_error
                       >
4433 :                 >skip1151
                       >
                        
                                nop_test $8b,1
4433 : a042            >            ldy #$42
4435 : a203            >            ldx #4-1
4437 : 8b              >            db  $8b          ;test nop length
                       >        if 1 = 1
4438 : ca              >            dex
4439 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
443a : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
443b : f003            >        beq skip1154
                       >        trap            ;failed not equal (non zero)
443d : 200461          >        jsr report_error
                       >
4440 :                 >skip1154
                       >
                       >            set_a $ff-$8b,0
                       >            load_flag 0
4440 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4442 : 48              >            pha         ;use stack to load status
4443 : a974            >            lda #$ff-$8b     ;precharge accu
4445 : 28              >            plp
                       >
4446 : 8b              >            db  $8b          ;test nop integrity - flags off
4447 : ea              >            nop
4448 : ea              >            nop
                       >            tst_a $ff-$8b,0
4449 : 08              >            php         ;save flags
444a : c974            >            cmp #$ff-$8b     ;test result
                       >            trap_ne
444c : f003            >        beq skip1159
                       >        trap            ;failed not equal (non zero)
444e : 200461          >        jsr report_error
                       >
4451 :                 >skip1159
                       >
4451 : 68              >            pla         ;load status
4452 : 48              >            pha
                       >            cmp_flag 0
4453 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4455 : f003            >        beq skip1162
                       >        trap            ;failed not equal (non zero)
4457 : 200461          >        jsr report_error
                       >
445a :                 >skip1162
                       >
445a : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$8b,$ff
                       >            load_flag $ff
445b : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
445d : 48              >            pha         ;use stack to load status
445e : a91f            >            lda #$aa-$8b     ;precharge accu
4460 : 28              >            plp
                       >
4461 : 8b              >            db  $8b          ;test nop integrity - flags on
4462 : ea              >            nop
4463 : ea              >            nop
                       >            tst_a $aa-$8b,$ff
4464 : 08              >            php         ;save flags
4465 : c91f            >            cmp #$aa-$8b     ;test result
                       >            trap_ne
4467 : f003            >        beq skip1167
                       >        trap            ;failed not equal (non zero)
4469 : 200461          >        jsr report_error
                       >
446c :                 >skip1167
                       >
446c : 68              >            pla         ;load status
446d : 48              >            pha
                       >            cmp_flag $ff
446e : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4470 : f003            >        beq skip1170
                       >        trap            ;failed not equal (non zero)
4472 : 200461          >        jsr report_error
                       >
4475 :                 >skip1170
                       >
4475 : 28              >            plp         ;restore status
                       >
4476 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
4478 : f003            >        beq skip1172
                       >        trap            ;failed not equal (non zero)
447a : 200461          >        jsr report_error
                       >
447d :                 >skip1172
                       >
447d : e000            >            cpx #0
                       >            trap_ne         ;x changed
447f : f003            >        beq skip1174
                       >        trap            ;failed not equal (non zero)
4481 : 200461          >        jsr report_error
                       >
4484 :                 >skip1174
                       >
                        
                                nop_test $9b,1
4484 : a042            >            ldy #$42
4486 : a203            >            ldx #4-1
4488 : 9b              >            db  $9b          ;test nop length
                       >        if 1 = 1
4489 : ca              >            dex
448a : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
448b : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
448c : f003            >        beq skip1177
                       >        trap            ;failed not equal (non zero)
448e : 200461          >        jsr report_error
                       >
4491 :                 >skip1177
                       >
                       >            set_a $ff-$9b,0
                       >            load_flag 0
4491 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4493 : 48              >            pha         ;use stack to load status
4494 : a964            >            lda #$ff-$9b     ;precharge accu
4496 : 28              >            plp
                       >
4497 : 9b              >            db  $9b          ;test nop integrity - flags off
4498 : ea              >            nop
4499 : ea              >            nop
                       >            tst_a $ff-$9b,0
449a : 08              >            php         ;save flags
449b : c964            >            cmp #$ff-$9b     ;test result
                       >            trap_ne
449d : f003            >        beq skip1182
                       >        trap            ;failed not equal (non zero)
449f : 200461          >        jsr report_error
                       >
44a2 :                 >skip1182
                       >
44a2 : 68              >            pla         ;load status
44a3 : 48              >            pha
                       >            cmp_flag 0
44a4 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
44a6 : f003            >        beq skip1185
                       >        trap            ;failed not equal (non zero)
44a8 : 200461          >        jsr report_error
                       >
44ab :                 >skip1185
                       >
44ab : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$9b,$ff
                       >            load_flag $ff
44ac : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
44ae : 48              >            pha         ;use stack to load status
44af : a90f            >            lda #$aa-$9b     ;precharge accu
44b1 : 28              >            plp
                       >
44b2 : 9b              >            db  $9b          ;test nop integrity - flags on
44b3 : ea              >            nop
44b4 : ea              >            nop
                       >            tst_a $aa-$9b,$ff
44b5 : 08              >            php         ;save flags
44b6 : c90f            >            cmp #$aa-$9b     ;test result
                       >            trap_ne
44b8 : f003            >        beq skip1190
                       >        trap            ;failed not equal (non zero)
44ba : 200461          >        jsr report_error
                       >
44bd :                 >skip1190
                       >
44bd : 68              >            pla         ;load status
44be : 48              >            pha
                       >            cmp_flag $ff
44bf : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
44c1 : f003            >        beq skip1193
                       >        trap            ;failed not equal (non zero)
44c3 : 200461          >        jsr report_error
                       >
44c6 :                 >skip1193
                       >
44c6 : 28              >            plp         ;restore status
                       >
44c7 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
44c9 : f003            >        beq skip1195
                       >        trap            ;failed not equal (non zero)
44cb : 200461          >        jsr report_error
                       >
44ce :                 >skip1195
                       >
44ce : e000            >            cpx #0
                       >            trap_ne         ;x changed
44d0 : f003            >        beq skip1197
                       >        trap            ;failed not equal (non zero)
44d2 : 200461          >        jsr report_error
                       >
44d5 :                 >skip1197
                       >
                        
                                nop_test $ab,1
44d5 : a042            >            ldy #$42
44d7 : a203            >            ldx #4-1
44d9 : ab              >            db  $ab          ;test nop length
                       >        if 1 = 1
44da : ca              >            dex
44db : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
44dc : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
44dd : f003            >        beq skip1200
                       >        trap            ;failed not equal (non zero)
44df : 200461          >        jsr report_error
                       >
44e2 :                 >skip1200
                       >
                       >            set_a $ff-$ab,0
                       >            load_flag 0
44e2 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
44e4 : 48              >            pha         ;use stack to load status
44e5 : a954            >            lda #$ff-$ab     ;precharge accu
44e7 : 28              >            plp
                       >
44e8 : ab              >            db  $ab          ;test nop integrity - flags off
44e9 : ea              >            nop
44ea : ea              >            nop
                       >            tst_a $ff-$ab,0
44eb : 08              >            php         ;save flags
44ec : c954            >            cmp #$ff-$ab     ;test result
                       >            trap_ne
44ee : f003            >        beq skip1205
                       >        trap            ;failed not equal (non zero)
44f0 : 200461          >        jsr report_error
                       >
44f3 :                 >skip1205
                       >
44f3 : 68              >            pla         ;load status
44f4 : 48              >            pha
                       >            cmp_flag 0
44f5 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
44f7 : f003            >        beq skip1208
                       >        trap            ;failed not equal (non zero)
44f9 : 200461          >        jsr report_error
                       >
44fc :                 >skip1208
                       >
44fc : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$ab,$ff
                       >            load_flag $ff
44fd : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
44ff : 48              >            pha         ;use stack to load status
4500 : a9ff            >            lda #$aa-$ab     ;precharge accu
4502 : 28              >            plp
                       >
4503 : ab              >            db  $ab          ;test nop integrity - flags on
4504 : ea              >            nop
4505 : ea              >            nop
                       >            tst_a $aa-$ab,$ff
4506 : 08              >            php         ;save flags
4507 : c9ff            >            cmp #$aa-$ab     ;test result
                       >            trap_ne
4509 : f003            >        beq skip1213
                       >        trap            ;failed not equal (non zero)
450b : 200461          >        jsr report_error
                       >
450e :                 >skip1213
                       >
450e : 68              >            pla         ;load status
450f : 48              >            pha
                       >            cmp_flag $ff
4510 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4512 : f003            >        beq skip1216
                       >        trap            ;failed not equal (non zero)
4514 : 200461          >        jsr report_error
                       >
4517 :                 >skip1216
                       >
4517 : 28              >            plp         ;restore status
                       >
4518 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
451a : f003            >        beq skip1218
                       >        trap            ;failed not equal (non zero)
451c : 200461          >        jsr report_error
                       >
451f :                 >skip1218
                       >
451f : e000            >            cpx #0
                       >            trap_ne         ;x changed
4521 : f003            >        beq skip1220
                       >        trap            ;failed not equal (non zero)
4523 : 200461          >        jsr report_error
                       >
4526 :                 >skip1220
                       >
                        
                                nop_test $bb,1
4526 : a042            >            ldy #$42
4528 : a203            >            ldx #4-1
452a : bb              >            db  $bb          ;test nop length
                       >        if 1 = 1
452b : ca              >            dex
452c : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
452d : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
452e : f003            >        beq skip1223
                       >        trap            ;failed not equal (non zero)
4530 : 200461          >        jsr report_error
                       >
4533 :                 >skip1223
                       >
                       >            set_a $ff-$bb,0
                       >            load_flag 0
4533 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4535 : 48              >            pha         ;use stack to load status
4536 : a944            >            lda #$ff-$bb     ;precharge accu
4538 : 28              >            plp
                       >
4539 : bb              >            db  $bb          ;test nop integrity - flags off
453a : ea              >            nop
453b : ea              >            nop
                       >            tst_a $ff-$bb,0
453c : 08              >            php         ;save flags
453d : c944            >            cmp #$ff-$bb     ;test result
                       >            trap_ne
453f : f003            >        beq skip1228
                       >        trap            ;failed not equal (non zero)
4541 : 200461          >        jsr report_error
                       >
4544 :                 >skip1228
                       >
4544 : 68              >            pla         ;load status
4545 : 48              >            pha
                       >            cmp_flag 0
4546 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4548 : f003            >        beq skip1231
                       >        trap            ;failed not equal (non zero)
454a : 200461          >        jsr report_error
                       >
454d :                 >skip1231
                       >
454d : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$bb,$ff
                       >            load_flag $ff
454e : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4550 : 48              >            pha         ;use stack to load status
4551 : a9ef            >            lda #$aa-$bb     ;precharge accu
4553 : 28              >            plp
                       >
4554 : bb              >            db  $bb          ;test nop integrity - flags on
4555 : ea              >            nop
4556 : ea              >            nop
                       >            tst_a $aa-$bb,$ff
4557 : 08              >            php         ;save flags
4558 : c9ef            >            cmp #$aa-$bb     ;test result
                       >            trap_ne
455a : f003            >        beq skip1236
                       >        trap            ;failed not equal (non zero)
455c : 200461          >        jsr report_error
                       >
455f :                 >skip1236
                       >
455f : 68              >            pla         ;load status
4560 : 48              >            pha
                       >            cmp_flag $ff
4561 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4563 : f003            >        beq skip1239
                       >        trap            ;failed not equal (non zero)
4565 : 200461          >        jsr report_error
                       >
4568 :                 >skip1239
                       >
4568 : 28              >            plp         ;restore status
                       >
4569 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
456b : f003            >        beq skip1241
                       >        trap            ;failed not equal (non zero)
456d : 200461          >        jsr report_error
                       >
4570 :                 >skip1241
                       >
4570 : e000            >            cpx #0
                       >            trap_ne         ;x changed
4572 : f003            >        beq skip1243
                       >        trap            ;failed not equal (non zero)
4574 : 200461          >        jsr report_error
                       >
4577 :                 >skip1243
                       >
                        
                                nop_test $eb,1
4577 : a042            >            ldy #$42
4579 : a203            >            ldx #4-1
457b : eb              >            db  $eb          ;test nop length
                       >        if 1 = 1
457c : ca              >            dex
457d : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
457e : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
457f : f003            >        beq skip1246
                       >        trap            ;failed not equal (non zero)
4581 : 200461          >        jsr report_error
                       >
4584 :                 >skip1246
                       >
                       >            set_a $ff-$eb,0
                       >            load_flag 0
4584 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4586 : 48              >            pha         ;use stack to load status
4587 : a914            >            lda #$ff-$eb     ;precharge accu
4589 : 28              >            plp
                       >
458a : eb              >            db  $eb          ;test nop integrity - flags off
458b : ea              >            nop
458c : ea              >            nop
                       >            tst_a $ff-$eb,0
458d : 08              >            php         ;save flags
458e : c914            >            cmp #$ff-$eb     ;test result
                       >            trap_ne
4590 : f003            >        beq skip1251
                       >        trap            ;failed not equal (non zero)
4592 : 200461          >        jsr report_error
                       >
4595 :                 >skip1251
                       >
4595 : 68              >            pla         ;load status
4596 : 48              >            pha
                       >            cmp_flag 0
4597 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4599 : f003            >        beq skip1254
                       >        trap            ;failed not equal (non zero)
459b : 200461          >        jsr report_error
                       >
459e :                 >skip1254
                       >
459e : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$eb,$ff
                       >            load_flag $ff
459f : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
45a1 : 48              >            pha         ;use stack to load status
45a2 : a9bf            >            lda #$aa-$eb     ;precharge accu
45a4 : 28              >            plp
                       >
45a5 : eb              >            db  $eb          ;test nop integrity - flags on
45a6 : ea              >            nop
45a7 : ea              >            nop
                       >            tst_a $aa-$eb,$ff
45a8 : 08              >            php         ;save flags
45a9 : c9bf            >            cmp #$aa-$eb     ;test result
                       >            trap_ne
45ab : f003            >        beq skip1259
                       >        trap            ;failed not equal (non zero)
45ad : 200461          >        jsr report_error
                       >
45b0 :                 >skip1259
                       >
45b0 : 68              >            pla         ;load status
45b1 : 48              >            pha
                       >            cmp_flag $ff
45b2 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
45b4 : f003            >        beq skip1262
                       >        trap            ;failed not equal (non zero)
45b6 : 200461          >        jsr report_error
                       >
45b9 :                 >skip1262
                       >
45b9 : 28              >            plp         ;restore status
                       >
45ba : c042            >            cpy #$42
                       >            trap_ne         ;y changed
45bc : f003            >        beq skip1264
                       >        trap            ;failed not equal (non zero)
45be : 200461          >        jsr report_error
                       >
45c1 :                 >skip1264
                       >
45c1 : e000            >            cpx #0
                       >            trap_ne         ;x changed
45c3 : f003            >        beq skip1266
                       >        trap            ;failed not equal (non zero)
45c5 : 200461          >        jsr report_error
                       >
45c8 :                 >skip1266
                       >
                        
                                nop_test $fb,1
45c8 : a042            >            ldy #$42
45ca : a203            >            ldx #4-1
45cc : fb              >            db  $fb          ;test nop length
                       >        if 1 = 1
45cd : ca              >            dex
45ce : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
45cf : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
45d0 : f003            >        beq skip1269
                       >        trap            ;failed not equal (non zero)
45d2 : 200461          >        jsr report_error
                       >
45d5 :                 >skip1269
                       >
                       >            set_a $ff-$fb,0
                       >            load_flag 0
45d5 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
45d7 : 48              >            pha         ;use stack to load status
45d8 : a904            >            lda #$ff-$fb     ;precharge accu
45da : 28              >            plp
                       >
45db : fb              >            db  $fb          ;test nop integrity - flags off
45dc : ea              >            nop
45dd : ea              >            nop
                       >            tst_a $ff-$fb,0
45de : 08              >            php         ;save flags
45df : c904            >            cmp #$ff-$fb     ;test result
                       >            trap_ne
45e1 : f003            >        beq skip1274
                       >        trap            ;failed not equal (non zero)
45e3 : 200461          >        jsr report_error
                       >
45e6 :                 >skip1274
                       >
45e6 : 68              >            pla         ;load status
45e7 : 48              >            pha
                       >            cmp_flag 0
45e8 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
45ea : f003            >        beq skip1277
                       >        trap            ;failed not equal (non zero)
45ec : 200461          >        jsr report_error
                       >
45ef :                 >skip1277
                       >
45ef : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$fb,$ff
                       >            load_flag $ff
45f0 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
45f2 : 48              >            pha         ;use stack to load status
45f3 : a9af            >            lda #$aa-$fb     ;precharge accu
45f5 : 28              >            plp
                       >
45f6 : fb              >            db  $fb          ;test nop integrity - flags on
45f7 : ea              >            nop
45f8 : ea              >            nop
                       >            tst_a $aa-$fb,$ff
45f9 : 08              >            php         ;save flags
45fa : c9af            >            cmp #$aa-$fb     ;test result
                       >            trap_ne
45fc : f003            >        beq skip1282
                       >        trap            ;failed not equal (non zero)
45fe : 200461          >        jsr report_error
                       >
4601 :                 >skip1282
                       >
4601 : 68              >            pla         ;load status
4602 : 48              >            pha
                       >            cmp_flag $ff
4603 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4605 : f003            >        beq skip1285
                       >        trap            ;failed not equal (non zero)
4607 : 200461          >        jsr report_error
                       >
460a :                 >skip1285
                       >
460a : 28              >            plp         ;restore status
                       >
460b : c042            >            cpy #$42
                       >            trap_ne         ;y changed
460d : f003            >        beq skip1287
                       >        trap            ;failed not equal (non zero)
460f : 200461          >        jsr report_error
                       >
4612 :                 >skip1287
                       >
4612 : e000            >            cpx #0
                       >            trap_ne         ;x changed
4614 : f003            >        beq skip1289
                       >        trap            ;failed not equal (non zero)
4616 : 200461          >        jsr report_error
                       >
4619 :                 >skip1289
                       >
                        
                            if rkwl_wdc_op = 0      ;NOPs not available on Rockwell & WDC 65C02
                                nop_test $07,1
4619 : a042            >            ldy #$42
461b : a203            >            ldx #4-1
461d : 07              >            db  $07          ;test nop length
                       >        if 1 = 1
461e : ca              >            dex
461f : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
4620 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
4621 : f003            >        beq skip1292
                       >        trap            ;failed not equal (non zero)
4623 : 200461          >        jsr report_error
                       >
4626 :                 >skip1292
                       >
                       >            set_a $ff-$07,0
                       >            load_flag 0
4626 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4628 : 48              >            pha         ;use stack to load status
4629 : a9f8            >            lda #$ff-$07     ;precharge accu
462b : 28              >            plp
                       >
462c : 07              >            db  $07          ;test nop integrity - flags off
462d : ea              >            nop
462e : ea              >            nop
                       >            tst_a $ff-$07,0
462f : 08              >            php         ;save flags
4630 : c9f8            >            cmp #$ff-$07     ;test result
                       >            trap_ne
4632 : f003            >        beq skip1297
                       >        trap            ;failed not equal (non zero)
4634 : 200461          >        jsr report_error
                       >
4637 :                 >skip1297
                       >
4637 : 68              >            pla         ;load status
4638 : 48              >            pha
                       >            cmp_flag 0
4639 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
463b : f003            >        beq skip1300
                       >        trap            ;failed not equal (non zero)
463d : 200461          >        jsr report_error
                       >
4640 :                 >skip1300
                       >
4640 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$07,$ff
                       >            load_flag $ff
4641 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4643 : 48              >            pha         ;use stack to load status
4644 : a9a3            >            lda #$aa-$07     ;precharge accu
4646 : 28              >            plp
                       >
4647 : 07              >            db  $07          ;test nop integrity - flags on
4648 : ea              >            nop
4649 : ea              >            nop
                       >            tst_a $aa-$07,$ff
464a : 08              >            php         ;save flags
464b : c9a3            >            cmp #$aa-$07     ;test result
                       >            trap_ne
464d : f003            >        beq skip1305
                       >        trap            ;failed not equal (non zero)
464f : 200461          >        jsr report_error
                       >
4652 :                 >skip1305
                       >
4652 : 68              >            pla         ;load status
4653 : 48              >            pha
                       >            cmp_flag $ff
4654 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4656 : f003            >        beq skip1308
                       >        trap            ;failed not equal (non zero)
4658 : 200461          >        jsr report_error
                       >
465b :                 >skip1308
                       >
465b : 28              >            plp         ;restore status
                       >
465c : c042            >            cpy #$42
                       >            trap_ne         ;y changed
465e : f003            >        beq skip1310
                       >        trap            ;failed not equal (non zero)
4660 : 200461          >        jsr report_error
                       >
4663 :                 >skip1310
                       >
4663 : e000            >            cpx #0
                       >            trap_ne         ;x changed
4665 : f003            >        beq skip1312
                       >        trap            ;failed not equal (non zero)
4667 : 200461          >        jsr report_error
                       >
466a :                 >skip1312
                       >
                        
                                nop_test $17,1
466a : a042            >            ldy #$42
466c : a203            >            ldx #4-1
466e : 17              >            db  $17          ;test nop length
                       >        if 1 = 1
466f : ca              >            dex
4670 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
4671 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
4672 : f003            >        beq skip1315
                       >        trap            ;failed not equal (non zero)
4674 : 200461          >        jsr report_error
                       >
4677 :                 >skip1315
                       >
                       >            set_a $ff-$17,0
                       >            load_flag 0
4677 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4679 : 48              >            pha         ;use stack to load status
467a : a9e8            >            lda #$ff-$17     ;precharge accu
467c : 28              >            plp
                       >
467d : 17              >            db  $17          ;test nop integrity - flags off
467e : ea              >            nop
467f : ea              >            nop
                       >            tst_a $ff-$17,0
4680 : 08              >            php         ;save flags
4681 : c9e8            >            cmp #$ff-$17     ;test result
                       >            trap_ne
4683 : f003            >        beq skip1320
                       >        trap            ;failed not equal (non zero)
4685 : 200461          >        jsr report_error
                       >
4688 :                 >skip1320
                       >
4688 : 68              >            pla         ;load status
4689 : 48              >            pha
                       >            cmp_flag 0
468a : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
468c : f003            >        beq skip1323
                       >        trap            ;failed not equal (non zero)
468e : 200461          >        jsr report_error
                       >
4691 :                 >skip1323
                       >
4691 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$17,$ff
                       >            load_flag $ff
4692 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4694 : 48              >            pha         ;use stack to load status
4695 : a993            >            lda #$aa-$17     ;precharge accu
4697 : 28              >            plp
                       >
4698 : 17              >            db  $17          ;test nop integrity - flags on
4699 : ea              >            nop
469a : ea              >            nop
                       >            tst_a $aa-$17,$ff
469b : 08              >            php         ;save flags
469c : c993            >            cmp #$aa-$17     ;test result
                       >            trap_ne
469e : f003            >        beq skip1328
                       >        trap            ;failed not equal (non zero)
46a0 : 200461          >        jsr report_error
                       >
46a3 :                 >skip1328
                       >
46a3 : 68              >            pla         ;load status
46a4 : 48              >            pha
                       >            cmp_flag $ff
46a5 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
46a7 : f003            >        beq skip1331
                       >        trap            ;failed not equal (non zero)
46a9 : 200461          >        jsr report_error
                       >
46ac :                 >skip1331
                       >
46ac : 28              >            plp         ;restore status
                       >
46ad : c042            >            cpy #$42
                       >            trap_ne         ;y changed
46af : f003            >        beq skip1333
                       >        trap            ;failed not equal (non zero)
46b1 : 200461          >        jsr report_error
                       >
46b4 :                 >skip1333
                       >
46b4 : e000            >            cpx #0
                       >            trap_ne         ;x changed
46b6 : f003            >        beq skip1335
                       >        trap            ;failed not equal (non zero)
46b8 : 200461          >        jsr report_error
                       >
46bb :                 >skip1335
                       >
                        
                                nop_test $27,1
46bb : a042            >            ldy #$42
46bd : a203            >            ldx #4-1
46bf : 27              >            db  $27          ;test nop length
                       >        if 1 = 1
46c0 : ca              >            dex
46c1 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
46c2 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
46c3 : f003            >        beq skip1338
                       >        trap            ;failed not equal (non zero)
46c5 : 200461          >        jsr report_error
                       >
46c8 :                 >skip1338
                       >
                       >            set_a $ff-$27,0
                       >            load_flag 0
46c8 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
46ca : 48              >            pha         ;use stack to load status
46cb : a9d8            >            lda #$ff-$27     ;precharge accu
46cd : 28              >            plp
                       >
46ce : 27              >            db  $27          ;test nop integrity - flags off
46cf : ea              >            nop
46d0 : ea              >            nop
                       >            tst_a $ff-$27,0
46d1 : 08              >            php         ;save flags
46d2 : c9d8            >            cmp #$ff-$27     ;test result
                       >            trap_ne
46d4 : f003            >        beq skip1343
                       >        trap            ;failed not equal (non zero)
46d6 : 200461          >        jsr report_error
                       >
46d9 :                 >skip1343
                       >
46d9 : 68              >            pla         ;load status
46da : 48              >            pha
                       >            cmp_flag 0
46db : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
46dd : f003            >        beq skip1346
                       >        trap            ;failed not equal (non zero)
46df : 200461          >        jsr report_error
                       >
46e2 :                 >skip1346
                       >
46e2 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$27,$ff
                       >            load_flag $ff
46e3 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
46e5 : 48              >            pha         ;use stack to load status
46e6 : a983            >            lda #$aa-$27     ;precharge accu
46e8 : 28              >            plp
                       >
46e9 : 27              >            db  $27          ;test nop integrity - flags on
46ea : ea              >            nop
46eb : ea              >            nop
                       >            tst_a $aa-$27,$ff
46ec : 08              >            php         ;save flags
46ed : c983            >            cmp #$aa-$27     ;test result
                       >            trap_ne
46ef : f003            >        beq skip1351
                       >        trap            ;failed not equal (non zero)
46f1 : 200461          >        jsr report_error
                       >
46f4 :                 >skip1351
                       >
46f4 : 68              >            pla         ;load status
46f5 : 48              >            pha
                       >            cmp_flag $ff
46f6 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
46f8 : f003            >        beq skip1354
                       >        trap            ;failed not equal (non zero)
46fa : 200461          >        jsr report_error
                       >
46fd :                 >skip1354
                       >
46fd : 28              >            plp         ;restore status
                       >
46fe : c042            >            cpy #$42
                       >            trap_ne         ;y changed
4700 : f003            >        beq skip1356
                       >        trap            ;failed not equal (non zero)
4702 : 200461          >        jsr report_error
                       >
4705 :                 >skip1356
                       >
4705 : e000            >            cpx #0
                       >            trap_ne         ;x changed
4707 : f003            >        beq skip1358
                       >        trap            ;failed not equal (non zero)
4709 : 200461          >        jsr report_error
                       >
470c :                 >skip1358
                       >
                        
                                nop_test $37,1
470c : a042            >            ldy #$42
470e : a203            >            ldx #4-1
4710 : 37              >            db  $37          ;test nop length
                       >        if 1 = 1
4711 : ca              >            dex
4712 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
4713 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
4714 : f003            >        beq skip1361
                       >        trap            ;failed not equal (non zero)
4716 : 200461          >        jsr report_error
                       >
4719 :                 >skip1361
                       >
                       >            set_a $ff-$37,0
                       >            load_flag 0
4719 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
471b : 48              >            pha         ;use stack to load status
471c : a9c8            >            lda #$ff-$37     ;precharge accu
471e : 28              >            plp
                       >
471f : 37              >            db  $37          ;test nop integrity - flags off
4720 : ea              >            nop
4721 : ea              >            nop
                       >            tst_a $ff-$37,0
4722 : 08              >            php         ;save flags
4723 : c9c8            >            cmp #$ff-$37     ;test result
                       >            trap_ne
4725 : f003            >        beq skip1366
                       >        trap            ;failed not equal (non zero)
4727 : 200461          >        jsr report_error
                       >
472a :                 >skip1366
                       >
472a : 68              >            pla         ;load status
472b : 48              >            pha
                       >            cmp_flag 0
472c : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
472e : f003            >        beq skip1369
                       >        trap            ;failed not equal (non zero)
4730 : 200461          >        jsr report_error
                       >
4733 :                 >skip1369
                       >
4733 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$37,$ff
                       >            load_flag $ff
4734 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4736 : 48              >            pha         ;use stack to load status
4737 : a973            >            lda #$aa-$37     ;precharge accu
4739 : 28              >            plp
                       >
473a : 37              >            db  $37          ;test nop integrity - flags on
473b : ea              >            nop
473c : ea              >            nop
                       >            tst_a $aa-$37,$ff
473d : 08              >            php         ;save flags
473e : c973            >            cmp #$aa-$37     ;test result
                       >            trap_ne
4740 : f003            >        beq skip1374
                       >        trap            ;failed not equal (non zero)
4742 : 200461          >        jsr report_error
                       >
4745 :                 >skip1374
                       >
4745 : 68              >            pla         ;load status
4746 : 48              >            pha
                       >            cmp_flag $ff
4747 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4749 : f003            >        beq skip1377
                       >        trap            ;failed not equal (non zero)
474b : 200461          >        jsr report_error
                       >
474e :                 >skip1377
                       >
474e : 28              >            plp         ;restore status
                       >
474f : c042            >            cpy #$42
                       >            trap_ne         ;y changed
4751 : f003            >        beq skip1379
                       >        trap            ;failed not equal (non zero)
4753 : 200461          >        jsr report_error
                       >
4756 :                 >skip1379
                       >
4756 : e000            >            cpx #0
                       >            trap_ne         ;x changed
4758 : f003            >        beq skip1381
                       >        trap            ;failed not equal (non zero)
475a : 200461          >        jsr report_error
                       >
475d :                 >skip1381
                       >
                        
                                nop_test $47,1
475d : a042            >            ldy #$42
475f : a203            >            ldx #4-1
4761 : 47              >            db  $47          ;test nop length
                       >        if 1 = 1
4762 : ca              >            dex
4763 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
4764 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
4765 : f003            >        beq skip1384
                       >        trap            ;failed not equal (non zero)
4767 : 200461          >        jsr report_error
                       >
476a :                 >skip1384
                       >
                       >            set_a $ff-$47,0
                       >            load_flag 0
476a : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
476c : 48              >            pha         ;use stack to load status
476d : a9b8            >            lda #$ff-$47     ;precharge accu
476f : 28              >            plp
                       >
4770 : 47              >            db  $47          ;test nop integrity - flags off
4771 : ea              >            nop
4772 : ea              >            nop
                       >            tst_a $ff-$47,0
4773 : 08              >            php         ;save flags
4774 : c9b8            >            cmp #$ff-$47     ;test result
                       >            trap_ne
4776 : f003            >        beq skip1389
                       >        trap            ;failed not equal (non zero)
4778 : 200461          >        jsr report_error
                       >
477b :                 >skip1389
                       >
477b : 68              >            pla         ;load status
477c : 48              >            pha
                       >            cmp_flag 0
477d : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
477f : f003            >        beq skip1392
                       >        trap            ;failed not equal (non zero)
4781 : 200461          >        jsr report_error
                       >
4784 :                 >skip1392
                       >
4784 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$47,$ff
                       >            load_flag $ff
4785 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4787 : 48              >            pha         ;use stack to load status
4788 : a963            >            lda #$aa-$47     ;precharge accu
478a : 28              >            plp
                       >
478b : 47              >            db  $47          ;test nop integrity - flags on
478c : ea              >            nop
478d : ea              >            nop
                       >            tst_a $aa-$47,$ff
478e : 08              >            php         ;save flags
478f : c963            >            cmp #$aa-$47     ;test result
                       >            trap_ne
4791 : f003            >        beq skip1397
                       >        trap            ;failed not equal (non zero)
4793 : 200461          >        jsr report_error
                       >
4796 :                 >skip1397
                       >
4796 : 68              >            pla         ;load status
4797 : 48              >            pha
                       >            cmp_flag $ff
4798 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
479a : f003            >        beq skip1400
                       >        trap            ;failed not equal (non zero)
479c : 200461          >        jsr report_error
                       >
479f :                 >skip1400
                       >
479f : 28              >            plp         ;restore status
                       >
47a0 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
47a2 : f003            >        beq skip1402
                       >        trap            ;failed not equal (non zero)
47a4 : 200461          >        jsr report_error
                       >
47a7 :                 >skip1402
                       >
47a7 : e000            >            cpx #0
                       >            trap_ne         ;x changed
47a9 : f003            >        beq skip1404
                       >        trap            ;failed not equal (non zero)
47ab : 200461          >        jsr report_error
                       >
47ae :                 >skip1404
                       >
                        
                                nop_test $57,1
47ae : a042            >            ldy #$42
47b0 : a203            >            ldx #4-1
47b2 : 57              >            db  $57          ;test nop length
                       >        if 1 = 1
47b3 : ca              >            dex
47b4 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
47b5 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
47b6 : f003            >        beq skip1407
                       >        trap            ;failed not equal (non zero)
47b8 : 200461          >        jsr report_error
                       >
47bb :                 >skip1407
                       >
                       >            set_a $ff-$57,0
                       >            load_flag 0
47bb : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
47bd : 48              >            pha         ;use stack to load status
47be : a9a8            >            lda #$ff-$57     ;precharge accu
47c0 : 28              >            plp
                       >
47c1 : 57              >            db  $57          ;test nop integrity - flags off
47c2 : ea              >            nop
47c3 : ea              >            nop
                       >            tst_a $ff-$57,0
47c4 : 08              >            php         ;save flags
47c5 : c9a8            >            cmp #$ff-$57     ;test result
                       >            trap_ne
47c7 : f003            >        beq skip1412
                       >        trap            ;failed not equal (non zero)
47c9 : 200461          >        jsr report_error
                       >
47cc :                 >skip1412
                       >
47cc : 68              >            pla         ;load status
47cd : 48              >            pha
                       >            cmp_flag 0
47ce : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
47d0 : f003            >        beq skip1415
                       >        trap            ;failed not equal (non zero)
47d2 : 200461          >        jsr report_error
                       >
47d5 :                 >skip1415
                       >
47d5 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$57,$ff
                       >            load_flag $ff
47d6 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
47d8 : 48              >            pha         ;use stack to load status
47d9 : a953            >            lda #$aa-$57     ;precharge accu
47db : 28              >            plp
                       >
47dc : 57              >            db  $57          ;test nop integrity - flags on
47dd : ea              >            nop
47de : ea              >            nop
                       >            tst_a $aa-$57,$ff
47df : 08              >            php         ;save flags
47e0 : c953            >            cmp #$aa-$57     ;test result
                       >            trap_ne
47e2 : f003            >        beq skip1420
                       >        trap            ;failed not equal (non zero)
47e4 : 200461          >        jsr report_error
                       >
47e7 :                 >skip1420
                       >
47e7 : 68              >            pla         ;load status
47e8 : 48              >            pha
                       >            cmp_flag $ff
47e9 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
47eb : f003            >        beq skip1423
                       >        trap            ;failed not equal (non zero)
47ed : 200461          >        jsr report_error
                       >
47f0 :                 >skip1423
                       >
47f0 : 28              >            plp         ;restore status
                       >
47f1 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
47f3 : f003            >        beq skip1425
                       >        trap            ;failed not equal (non zero)
47f5 : 200461          >        jsr report_error
                       >
47f8 :                 >skip1425
                       >
47f8 : e000            >            cpx #0
                       >            trap_ne         ;x changed
47fa : f003            >        beq skip1427
                       >        trap            ;failed not equal (non zero)
47fc : 200461          >        jsr report_error
                       >
47ff :                 >skip1427
                       >
                        
                                nop_test $67,1
47ff : a042            >            ldy #$42
4801 : a203            >            ldx #4-1
4803 : 67              >            db  $67          ;test nop length
                       >        if 1 = 1
4804 : ca              >            dex
4805 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
4806 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
4807 : f003            >        beq skip1430
                       >        trap            ;failed not equal (non zero)
4809 : 200461          >        jsr report_error
                       >
480c :                 >skip1430
                       >
                       >            set_a $ff-$67,0
                       >            load_flag 0
480c : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
480e : 48              >            pha         ;use stack to load status
480f : a998            >            lda #$ff-$67     ;precharge accu
4811 : 28              >            plp
                       >
4812 : 67              >            db  $67          ;test nop integrity - flags off
4813 : ea              >            nop
4814 : ea              >            nop
                       >            tst_a $ff-$67,0
4815 : 08              >            php         ;save flags
4816 : c998            >            cmp #$ff-$67     ;test result
                       >            trap_ne
4818 : f003            >        beq skip1435
                       >        trap            ;failed not equal (non zero)
481a : 200461          >        jsr report_error
                       >
481d :                 >skip1435
                       >
481d : 68              >            pla         ;load status
481e : 48              >            pha
                       >            cmp_flag 0
481f : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4821 : f003            >        beq skip1438
                       >        trap            ;failed not equal (non zero)
4823 : 200461          >        jsr report_error
                       >
4826 :                 >skip1438
                       >
4826 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$67,$ff
                       >            load_flag $ff
4827 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4829 : 48              >            pha         ;use stack to load status
482a : a943            >            lda #$aa-$67     ;precharge accu
482c : 28              >            plp
                       >
482d : 67              >            db  $67          ;test nop integrity - flags on
482e : ea              >            nop
482f : ea              >            nop
                       >            tst_a $aa-$67,$ff
4830 : 08              >            php         ;save flags
4831 : c943            >            cmp #$aa-$67     ;test result
                       >            trap_ne
4833 : f003            >        beq skip1443
                       >        trap            ;failed not equal (non zero)
4835 : 200461          >        jsr report_error
                       >
4838 :                 >skip1443
                       >
4838 : 68              >            pla         ;load status
4839 : 48              >            pha
                       >            cmp_flag $ff
483a : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
483c : f003            >        beq skip1446
                       >        trap            ;failed not equal (non zero)
483e : 200461          >        jsr report_error
                       >
4841 :                 >skip1446
                       >
4841 : 28              >            plp         ;restore status
                       >
4842 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
4844 : f003            >        beq skip1448
                       >        trap            ;failed not equal (non zero)
4846 : 200461          >        jsr report_error
                       >
4849 :                 >skip1448
                       >
4849 : e000            >            cpx #0
                       >            trap_ne         ;x changed
484b : f003            >        beq skip1450
                       >        trap            ;failed not equal (non zero)
484d : 200461          >        jsr report_error
                       >
4850 :                 >skip1450
                       >
                        
                                nop_test $77,1
4850 : a042            >            ldy #$42
4852 : a203            >            ldx #4-1
4854 : 77              >            db  $77          ;test nop length
                       >        if 1 = 1
4855 : ca              >            dex
4856 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
4857 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
4858 : f003            >        beq skip1453
                       >        trap            ;failed not equal (non zero)
485a : 200461          >        jsr report_error
                       >
485d :                 >skip1453
                       >
                       >            set_a $ff-$77,0
                       >            load_flag 0
485d : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
485f : 48              >            pha         ;use stack to load status
4860 : a988            >            lda #$ff-$77     ;precharge accu
4862 : 28              >            plp
                       >
4863 : 77              >            db  $77          ;test nop integrity - flags off
4864 : ea              >            nop
4865 : ea              >            nop
                       >            tst_a $ff-$77,0
4866 : 08              >            php         ;save flags
4867 : c988            >            cmp #$ff-$77     ;test result
                       >            trap_ne
4869 : f003            >        beq skip1458
                       >        trap            ;failed not equal (non zero)
486b : 200461          >        jsr report_error
                       >
486e :                 >skip1458
                       >
486e : 68              >            pla         ;load status
486f : 48              >            pha
                       >            cmp_flag 0
4870 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4872 : f003            >        beq skip1461
                       >        trap            ;failed not equal (non zero)
4874 : 200461          >        jsr report_error
                       >
4877 :                 >skip1461
                       >
4877 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$77,$ff
                       >            load_flag $ff
4878 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
487a : 48              >            pha         ;use stack to load status
487b : a933            >            lda #$aa-$77     ;precharge accu
487d : 28              >            plp
                       >
487e : 77              >            db  $77          ;test nop integrity - flags on
487f : ea              >            nop
4880 : ea              >            nop
                       >            tst_a $aa-$77,$ff
4881 : 08              >            php         ;save flags
4882 : c933            >            cmp #$aa-$77     ;test result
                       >            trap_ne
4884 : f003            >        beq skip1466
                       >        trap            ;failed not equal (non zero)
4886 : 200461          >        jsr report_error
                       >
4889 :                 >skip1466
                       >
4889 : 68              >            pla         ;load status
488a : 48              >            pha
                       >            cmp_flag $ff
488b : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
488d : f003            >        beq skip1469
                       >        trap            ;failed not equal (non zero)
488f : 200461          >        jsr report_error
                       >
4892 :                 >skip1469
                       >
4892 : 28              >            plp         ;restore status
                       >
4893 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
4895 : f003            >        beq skip1471
                       >        trap            ;failed not equal (non zero)
4897 : 200461          >        jsr report_error
                       >
489a :                 >skip1471
                       >
489a : e000            >            cpx #0
                       >            trap_ne         ;x changed
489c : f003            >        beq skip1473
                       >        trap            ;failed not equal (non zero)
489e : 200461          >        jsr report_error
                       >
48a1 :                 >skip1473
                       >
                        
                                nop_test $87,1
48a1 : a042            >            ldy #$42
48a3 : a203            >            ldx #4-1
48a5 : 87              >            db  $87          ;test nop length
                       >        if 1 = 1
48a6 : ca              >            dex
48a7 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
48a8 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
48a9 : f003            >        beq skip1476
                       >        trap            ;failed not equal (non zero)
48ab : 200461          >        jsr report_error
                       >
48ae :                 >skip1476
                       >
                       >            set_a $ff-$87,0
                       >            load_flag 0
48ae : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
48b0 : 48              >            pha         ;use stack to load status
48b1 : a978            >            lda #$ff-$87     ;precharge accu
48b3 : 28              >            plp
                       >
48b4 : 87              >            db  $87          ;test nop integrity - flags off
48b5 : ea              >            nop
48b6 : ea              >            nop
                       >            tst_a $ff-$87,0
48b7 : 08              >            php         ;save flags
48b8 : c978            >            cmp #$ff-$87     ;test result
                       >            trap_ne
48ba : f003            >        beq skip1481
                       >        trap            ;failed not equal (non zero)
48bc : 200461          >        jsr report_error
                       >
48bf :                 >skip1481
                       >
48bf : 68              >            pla         ;load status
48c0 : 48              >            pha
                       >            cmp_flag 0
48c1 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
48c3 : f003            >        beq skip1484
                       >        trap            ;failed not equal (non zero)
48c5 : 200461          >        jsr report_error
                       >
48c8 :                 >skip1484
                       >
48c8 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$87,$ff
                       >            load_flag $ff
48c9 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
48cb : 48              >            pha         ;use stack to load status
48cc : a923            >            lda #$aa-$87     ;precharge accu
48ce : 28              >            plp
                       >
48cf : 87              >            db  $87          ;test nop integrity - flags on
48d0 : ea              >            nop
48d1 : ea              >            nop
                       >            tst_a $aa-$87,$ff
48d2 : 08              >            php         ;save flags
48d3 : c923            >            cmp #$aa-$87     ;test result
                       >            trap_ne
48d5 : f003            >        beq skip1489
                       >        trap            ;failed not equal (non zero)
48d7 : 200461          >        jsr report_error
                       >
48da :                 >skip1489
                       >
48da : 68              >            pla         ;load status
48db : 48              >            pha
                       >            cmp_flag $ff
48dc : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
48de : f003            >        beq skip1492
                       >        trap            ;failed not equal (non zero)
48e0 : 200461          >        jsr report_error
                       >
48e3 :                 >skip1492
                       >
48e3 : 28              >            plp         ;restore status
                       >
48e4 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
48e6 : f003            >        beq skip1494
                       >        trap            ;failed not equal (non zero)
48e8 : 200461          >        jsr report_error
                       >
48eb :                 >skip1494
                       >
48eb : e000            >            cpx #0
                       >            trap_ne         ;x changed
48ed : f003            >        beq skip1496
                       >        trap            ;failed not equal (non zero)
48ef : 200461          >        jsr report_error
                       >
48f2 :                 >skip1496
                       >
                        
                                nop_test $97,1
48f2 : a042            >            ldy #$42
48f4 : a203            >            ldx #4-1
48f6 : 97              >            db  $97          ;test nop length
                       >        if 1 = 1
48f7 : ca              >            dex
48f8 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
48f9 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
48fa : f003            >        beq skip1499
                       >        trap            ;failed not equal (non zero)
48fc : 200461          >        jsr report_error
                       >
48ff :                 >skip1499
                       >
                       >            set_a $ff-$97,0
                       >            load_flag 0
48ff : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4901 : 48              >            pha         ;use stack to load status
4902 : a968            >            lda #$ff-$97     ;precharge accu
4904 : 28              >            plp
                       >
4905 : 97              >            db  $97          ;test nop integrity - flags off
4906 : ea              >            nop
4907 : ea              >            nop
                       >            tst_a $ff-$97,0
4908 : 08              >            php         ;save flags
4909 : c968            >            cmp #$ff-$97     ;test result
                       >            trap_ne
490b : f003            >        beq skip1504
                       >        trap            ;failed not equal (non zero)
490d : 200461          >        jsr report_error
                       >
4910 :                 >skip1504
                       >
4910 : 68              >            pla         ;load status
4911 : 48              >            pha
                       >            cmp_flag 0
4912 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4914 : f003            >        beq skip1507
                       >        trap            ;failed not equal (non zero)
4916 : 200461          >        jsr report_error
                       >
4919 :                 >skip1507
                       >
4919 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$97,$ff
                       >            load_flag $ff
491a : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
491c : 48              >            pha         ;use stack to load status
491d : a913            >            lda #$aa-$97     ;precharge accu
491f : 28              >            plp
                       >
4920 : 97              >            db  $97          ;test nop integrity - flags on
4921 : ea              >            nop
4922 : ea              >            nop
                       >            tst_a $aa-$97,$ff
4923 : 08              >            php         ;save flags
4924 : c913            >            cmp #$aa-$97     ;test result
                       >            trap_ne
4926 : f003            >        beq skip1512
                       >        trap            ;failed not equal (non zero)
4928 : 200461          >        jsr report_error
                       >
492b :                 >skip1512
                       >
492b : 68              >            pla         ;load status
492c : 48              >            pha
                       >            cmp_flag $ff
492d : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
492f : f003            >        beq skip1515
                       >        trap            ;failed not equal (non zero)
4931 : 200461          >        jsr report_error
                       >
4934 :                 >skip1515
                       >
4934 : 28              >            plp         ;restore status
                       >
4935 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
4937 : f003            >        beq skip1517
                       >        trap            ;failed not equal (non zero)
4939 : 200461          >        jsr report_error
                       >
493c :                 >skip1517
                       >
493c : e000            >            cpx #0
                       >            trap_ne         ;x changed
493e : f003            >        beq skip1519
                       >        trap            ;failed not equal (non zero)
4940 : 200461          >        jsr report_error
                       >
4943 :                 >skip1519
                       >
                        
                                nop_test $a7,1
4943 : a042            >            ldy #$42
4945 : a203            >            ldx #4-1
4947 : a7              >            db  $a7          ;test nop length
                       >        if 1 = 1
4948 : ca              >            dex
4949 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
494a : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
494b : f003            >        beq skip1522
                       >        trap            ;failed not equal (non zero)
494d : 200461          >        jsr report_error
                       >
4950 :                 >skip1522
                       >
                       >            set_a $ff-$a7,0
                       >            load_flag 0
4950 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4952 : 48              >            pha         ;use stack to load status
4953 : a958            >            lda #$ff-$a7     ;precharge accu
4955 : 28              >            plp
                       >
4956 : a7              >            db  $a7          ;test nop integrity - flags off
4957 : ea              >            nop
4958 : ea              >            nop
                       >            tst_a $ff-$a7,0
4959 : 08              >            php         ;save flags
495a : c958            >            cmp #$ff-$a7     ;test result
                       >            trap_ne
495c : f003            >        beq skip1527
                       >        trap            ;failed not equal (non zero)
495e : 200461          >        jsr report_error
                       >
4961 :                 >skip1527
                       >
4961 : 68              >            pla         ;load status
4962 : 48              >            pha
                       >            cmp_flag 0
4963 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4965 : f003            >        beq skip1530
                       >        trap            ;failed not equal (non zero)
4967 : 200461          >        jsr report_error
                       >
496a :                 >skip1530
                       >
496a : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$a7,$ff
                       >            load_flag $ff
496b : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
496d : 48              >            pha         ;use stack to load status
496e : a903            >            lda #$aa-$a7     ;precharge accu
4970 : 28              >            plp
                       >
4971 : a7              >            db  $a7          ;test nop integrity - flags on
4972 : ea              >            nop
4973 : ea              >            nop
                       >            tst_a $aa-$a7,$ff
4974 : 08              >            php         ;save flags
4975 : c903            >            cmp #$aa-$a7     ;test result
                       >            trap_ne
4977 : f003            >        beq skip1535
                       >        trap            ;failed not equal (non zero)
4979 : 200461          >        jsr report_error
                       >
497c :                 >skip1535
                       >
497c : 68              >            pla         ;load status
497d : 48              >            pha
                       >            cmp_flag $ff
497e : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4980 : f003            >        beq skip1538
                       >        trap            ;failed not equal (non zero)
4982 : 200461          >        jsr report_error
                       >
4985 :                 >skip1538
                       >
4985 : 28              >            plp         ;restore status
                       >
4986 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
4988 : f003            >        beq skip1540
                       >        trap            ;failed not equal (non zero)
498a : 200461          >        jsr report_error
                       >
498d :                 >skip1540
                       >
498d : e000            >            cpx #0
                       >            trap_ne         ;x changed
498f : f003            >        beq skip1542
                       >        trap            ;failed not equal (non zero)
4991 : 200461          >        jsr report_error
                       >
4994 :                 >skip1542
                       >
                        
                                nop_test $b7,1
4994 : a042            >            ldy #$42
4996 : a203            >            ldx #4-1
4998 : b7              >            db  $b7          ;test nop length
                       >        if 1 = 1
4999 : ca              >            dex
499a : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
499b : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
499c : f003            >        beq skip1545
                       >        trap            ;failed not equal (non zero)
499e : 200461          >        jsr report_error
                       >
49a1 :                 >skip1545
                       >
                       >            set_a $ff-$b7,0
                       >            load_flag 0
49a1 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
49a3 : 48              >            pha         ;use stack to load status
49a4 : a948            >            lda #$ff-$b7     ;precharge accu
49a6 : 28              >            plp
                       >
49a7 : b7              >            db  $b7          ;test nop integrity - flags off
49a8 : ea              >            nop
49a9 : ea              >            nop
                       >            tst_a $ff-$b7,0
49aa : 08              >            php         ;save flags
49ab : c948            >            cmp #$ff-$b7     ;test result
                       >            trap_ne
49ad : f003            >        beq skip1550
                       >        trap            ;failed not equal (non zero)
49af : 200461          >        jsr report_error
                       >
49b2 :                 >skip1550
                       >
49b2 : 68              >            pla         ;load status
49b3 : 48              >            pha
                       >            cmp_flag 0
49b4 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
49b6 : f003            >        beq skip1553
                       >        trap            ;failed not equal (non zero)
49b8 : 200461          >        jsr report_error
                       >
49bb :                 >skip1553
                       >
49bb : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$b7,$ff
                       >            load_flag $ff
49bc : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
49be : 48              >            pha         ;use stack to load status
49bf : a9f3            >            lda #$aa-$b7     ;precharge accu
49c1 : 28              >            plp
                       >
49c2 : b7              >            db  $b7          ;test nop integrity - flags on
49c3 : ea              >            nop
49c4 : ea              >            nop
                       >            tst_a $aa-$b7,$ff
49c5 : 08              >            php         ;save flags
49c6 : c9f3            >            cmp #$aa-$b7     ;test result
                       >            trap_ne
49c8 : f003            >        beq skip1558
                       >        trap            ;failed not equal (non zero)
49ca : 200461          >        jsr report_error
                       >
49cd :                 >skip1558
                       >
49cd : 68              >            pla         ;load status
49ce : 48              >            pha
                       >            cmp_flag $ff
49cf : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
49d1 : f003            >        beq skip1561
                       >        trap            ;failed not equal (non zero)
49d3 : 200461          >        jsr report_error
                       >
49d6 :                 >skip1561
                       >
49d6 : 28              >            plp         ;restore status
                       >
49d7 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
49d9 : f003            >        beq skip1563
                       >        trap            ;failed not equal (non zero)
49db : 200461          >        jsr report_error
                       >
49de :                 >skip1563
                       >
49de : e000            >            cpx #0
                       >            trap_ne         ;x changed
49e0 : f003            >        beq skip1565
                       >        trap            ;failed not equal (non zero)
49e2 : 200461          >        jsr report_error
                       >
49e5 :                 >skip1565
                       >
                        
                                nop_test $c7,1
49e5 : a042            >            ldy #$42
49e7 : a203            >            ldx #4-1
49e9 : c7              >            db  $c7          ;test nop length
                       >        if 1 = 1
49ea : ca              >            dex
49eb : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
49ec : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
49ed : f003            >        beq skip1568
                       >        trap            ;failed not equal (non zero)
49ef : 200461          >        jsr report_error
                       >
49f2 :                 >skip1568
                       >
                       >            set_a $ff-$c7,0
                       >            load_flag 0
49f2 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
49f4 : 48              >            pha         ;use stack to load status
49f5 : a938            >            lda #$ff-$c7     ;precharge accu
49f7 : 28              >            plp
                       >
49f8 : c7              >            db  $c7          ;test nop integrity - flags off
49f9 : ea              >            nop
49fa : ea              >            nop
                       >            tst_a $ff-$c7,0
49fb : 08              >            php         ;save flags
49fc : c938            >            cmp #$ff-$c7     ;test result
                       >            trap_ne
49fe : f003            >        beq skip1573
                       >        trap            ;failed not equal (non zero)
4a00 : 200461          >        jsr report_error
                       >
4a03 :                 >skip1573
                       >
4a03 : 68              >            pla         ;load status
4a04 : 48              >            pha
                       >            cmp_flag 0
4a05 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4a07 : f003            >        beq skip1576
                       >        trap            ;failed not equal (non zero)
4a09 : 200461          >        jsr report_error
                       >
4a0c :                 >skip1576
                       >
4a0c : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$c7,$ff
                       >            load_flag $ff
4a0d : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4a0f : 48              >            pha         ;use stack to load status
4a10 : a9e3            >            lda #$aa-$c7     ;precharge accu
4a12 : 28              >            plp
                       >
4a13 : c7              >            db  $c7          ;test nop integrity - flags on
4a14 : ea              >            nop
4a15 : ea              >            nop
                       >            tst_a $aa-$c7,$ff
4a16 : 08              >            php         ;save flags
4a17 : c9e3            >            cmp #$aa-$c7     ;test result
                       >            trap_ne
4a19 : f003            >        beq skip1581
                       >        trap            ;failed not equal (non zero)
4a1b : 200461          >        jsr report_error
                       >
4a1e :                 >skip1581
                       >
4a1e : 68              >            pla         ;load status
4a1f : 48              >            pha
                       >            cmp_flag $ff
4a20 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4a22 : f003            >        beq skip1584
                       >        trap            ;failed not equal (non zero)
4a24 : 200461          >        jsr report_error
                       >
4a27 :                 >skip1584
                       >
4a27 : 28              >            plp         ;restore status
                       >
4a28 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
4a2a : f003            >        beq skip1586
                       >        trap            ;failed not equal (non zero)
4a2c : 200461          >        jsr report_error
                       >
4a2f :                 >skip1586
                       >
4a2f : e000            >            cpx #0
                       >            trap_ne         ;x changed
4a31 : f003            >        beq skip1588
                       >        trap            ;failed not equal (non zero)
4a33 : 200461          >        jsr report_error
                       >
4a36 :                 >skip1588
                       >
                        
                                nop_test $d7,1
4a36 : a042            >            ldy #$42
4a38 : a203            >            ldx #4-1
4a3a : d7              >            db  $d7          ;test nop length
                       >        if 1 = 1
4a3b : ca              >            dex
4a3c : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
4a3d : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
4a3e : f003            >        beq skip1591
                       >        trap            ;failed not equal (non zero)
4a40 : 200461          >        jsr report_error
                       >
4a43 :                 >skip1591
                       >
                       >            set_a $ff-$d7,0
                       >            load_flag 0
4a43 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4a45 : 48              >            pha         ;use stack to load status
4a46 : a928            >            lda #$ff-$d7     ;precharge accu
4a48 : 28              >            plp
                       >
4a49 : d7              >            db  $d7          ;test nop integrity - flags off
4a4a : ea              >            nop
4a4b : ea              >            nop
                       >            tst_a $ff-$d7,0
4a4c : 08              >            php         ;save flags
4a4d : c928            >            cmp #$ff-$d7     ;test result
                       >            trap_ne
4a4f : f003            >        beq skip1596
                       >        trap            ;failed not equal (non zero)
4a51 : 200461          >        jsr report_error
                       >
4a54 :                 >skip1596
                       >
4a54 : 68              >            pla         ;load status
4a55 : 48              >            pha
                       >            cmp_flag 0
4a56 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4a58 : f003            >        beq skip1599
                       >        trap            ;failed not equal (non zero)
4a5a : 200461          >        jsr report_error
                       >
4a5d :                 >skip1599
                       >
4a5d : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$d7,$ff
                       >            load_flag $ff
4a5e : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4a60 : 48              >            pha         ;use stack to load status
4a61 : a9d3            >            lda #$aa-$d7     ;precharge accu
4a63 : 28              >            plp
                       >
4a64 : d7              >            db  $d7          ;test nop integrity - flags on
4a65 : ea              >            nop
4a66 : ea              >            nop
                       >            tst_a $aa-$d7,$ff
4a67 : 08              >            php         ;save flags
4a68 : c9d3            >            cmp #$aa-$d7     ;test result
                       >            trap_ne
4a6a : f003            >        beq skip1604
                       >        trap            ;failed not equal (non zero)
4a6c : 200461          >        jsr report_error
                       >
4a6f :                 >skip1604
                       >
4a6f : 68              >            pla         ;load status
4a70 : 48              >            pha
                       >            cmp_flag $ff
4a71 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4a73 : f003            >        beq skip1607
                       >        trap            ;failed not equal (non zero)
4a75 : 200461          >        jsr report_error
                       >
4a78 :                 >skip1607
                       >
4a78 : 28              >            plp         ;restore status
                       >
4a79 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
4a7b : f003            >        beq skip1609
                       >        trap            ;failed not equal (non zero)
4a7d : 200461          >        jsr report_error
                       >
4a80 :                 >skip1609
                       >
4a80 : e000            >            cpx #0
                       >            trap_ne         ;x changed
4a82 : f003            >        beq skip1611
                       >        trap            ;failed not equal (non zero)
4a84 : 200461          >        jsr report_error
                       >
4a87 :                 >skip1611
                       >
                        
                                nop_test $e7,1
4a87 : a042            >            ldy #$42
4a89 : a203            >            ldx #4-1
4a8b : e7              >            db  $e7          ;test nop length
                       >        if 1 = 1
4a8c : ca              >            dex
4a8d : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
4a8e : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
4a8f : f003            >        beq skip1614
                       >        trap            ;failed not equal (non zero)
4a91 : 200461          >        jsr report_error
                       >
4a94 :                 >skip1614
                       >
                       >            set_a $ff-$e7,0
                       >            load_flag 0
4a94 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4a96 : 48              >            pha         ;use stack to load status
4a97 : a918            >            lda #$ff-$e7     ;precharge accu
4a99 : 28              >            plp
                       >
4a9a : e7              >            db  $e7          ;test nop integrity - flags off
4a9b : ea              >            nop
4a9c : ea              >            nop
                       >            tst_a $ff-$e7,0
4a9d : 08              >            php         ;save flags
4a9e : c918            >            cmp #$ff-$e7     ;test result
                       >            trap_ne
4aa0 : f003            >        beq skip1619
                       >        trap            ;failed not equal (non zero)
4aa2 : 200461          >        jsr report_error
                       >
4aa5 :                 >skip1619
                       >
4aa5 : 68              >            pla         ;load status
4aa6 : 48              >            pha
                       >            cmp_flag 0
4aa7 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4aa9 : f003            >        beq skip1622
                       >        trap            ;failed not equal (non zero)
4aab : 200461          >        jsr report_error
                       >
4aae :                 >skip1622
                       >
4aae : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$e7,$ff
                       >            load_flag $ff
4aaf : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4ab1 : 48              >            pha         ;use stack to load status
4ab2 : a9c3            >            lda #$aa-$e7     ;precharge accu
4ab4 : 28              >            plp
                       >
4ab5 : e7              >            db  $e7          ;test nop integrity - flags on
4ab6 : ea              >            nop
4ab7 : ea              >            nop
                       >            tst_a $aa-$e7,$ff
4ab8 : 08              >            php         ;save flags
4ab9 : c9c3            >            cmp #$aa-$e7     ;test result
                       >            trap_ne
4abb : f003            >        beq skip1627
                       >        trap            ;failed not equal (non zero)
4abd : 200461          >        jsr report_error
                       >
4ac0 :                 >skip1627
                       >
4ac0 : 68              >            pla         ;load status
4ac1 : 48              >            pha
                       >            cmp_flag $ff
4ac2 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4ac4 : f003            >        beq skip1630
                       >        trap            ;failed not equal (non zero)
4ac6 : 200461          >        jsr report_error
                       >
4ac9 :                 >skip1630
                       >
4ac9 : 28              >            plp         ;restore status
                       >
4aca : c042            >            cpy #$42
                       >            trap_ne         ;y changed
4acc : f003            >        beq skip1632
                       >        trap            ;failed not equal (non zero)
4ace : 200461          >        jsr report_error
                       >
4ad1 :                 >skip1632
                       >
4ad1 : e000            >            cpx #0
                       >            trap_ne         ;x changed
4ad3 : f003            >        beq skip1634
                       >        trap            ;failed not equal (non zero)
4ad5 : 200461          >        jsr report_error
                       >
4ad8 :                 >skip1634
                       >
                        
                                nop_test $f7,1
4ad8 : a042            >            ldy #$42
4ada : a203            >            ldx #4-1
4adc : f7              >            db  $f7          ;test nop length
                       >        if 1 = 1
4add : ca              >            dex
4ade : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
4adf : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
4ae0 : f003            >        beq skip1637
                       >        trap            ;failed not equal (non zero)
4ae2 : 200461          >        jsr report_error
                       >
4ae5 :                 >skip1637
                       >
                       >            set_a $ff-$f7,0
                       >            load_flag 0
4ae5 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4ae7 : 48              >            pha         ;use stack to load status
4ae8 : a908            >            lda #$ff-$f7     ;precharge accu
4aea : 28              >            plp
                       >
4aeb : f7              >            db  $f7          ;test nop integrity - flags off
4aec : ea              >            nop
4aed : ea              >            nop
                       >            tst_a $ff-$f7,0
4aee : 08              >            php         ;save flags
4aef : c908            >            cmp #$ff-$f7     ;test result
                       >            trap_ne
4af1 : f003            >        beq skip1642
                       >        trap            ;failed not equal (non zero)
4af3 : 200461          >        jsr report_error
                       >
4af6 :                 >skip1642
                       >
4af6 : 68              >            pla         ;load status
4af7 : 48              >            pha
                       >            cmp_flag 0
4af8 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4afa : f003            >        beq skip1645
                       >        trap            ;failed not equal (non zero)
4afc : 200461          >        jsr report_error
                       >
4aff :                 >skip1645
                       >
4aff : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$f7,$ff
                       >            load_flag $ff
4b00 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4b02 : 48              >            pha         ;use stack to load status
4b03 : a9b3            >            lda #$aa-$f7     ;precharge accu
4b05 : 28              >            plp
                       >
4b06 : f7              >            db  $f7          ;test nop integrity - flags on
4b07 : ea              >            nop
4b08 : ea              >            nop
                       >            tst_a $aa-$f7,$ff
4b09 : 08              >            php         ;save flags
4b0a : c9b3            >            cmp #$aa-$f7     ;test result
                       >            trap_ne
4b0c : f003            >        beq skip1650
                       >        trap            ;failed not equal (non zero)
4b0e : 200461          >        jsr report_error
                       >
4b11 :                 >skip1650
                       >
4b11 : 68              >            pla         ;load status
4b12 : 48              >            pha
                       >            cmp_flag $ff
4b13 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4b15 : f003            >        beq skip1653
                       >        trap            ;failed not equal (non zero)
4b17 : 200461          >        jsr report_error
                       >
4b1a :                 >skip1653
                       >
4b1a : 28              >            plp         ;restore status
                       >
4b1b : c042            >            cpy #$42
                       >            trap_ne         ;y changed
4b1d : f003            >        beq skip1655
                       >        trap            ;failed not equal (non zero)
4b1f : 200461          >        jsr report_error
                       >
4b22 :                 >skip1655
                       >
4b22 : e000            >            cpx #0
                       >            trap_ne         ;x changed
4b24 : f003            >        beq skip1657
                       >        trap            ;failed not equal (non zero)
4b26 : 200461          >        jsr report_error
                       >
4b29 :                 >skip1657
                       >
                        
                                nop_test $0f,1
4b29 : a042            >            ldy #$42
4b2b : a203            >            ldx #4-1
4b2d : 0f              >            db  $0f          ;test nop length
                       >        if 1 = 1
4b2e : ca              >            dex
4b2f : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
4b30 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
4b31 : f003            >        beq skip1660
                       >        trap            ;failed not equal (non zero)
4b33 : 200461          >        jsr report_error
                       >
4b36 :                 >skip1660
                       >
                       >            set_a $ff-$0f,0
                       >            load_flag 0
4b36 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4b38 : 48              >            pha         ;use stack to load status
4b39 : a9f0            >            lda #$ff-$0f     ;precharge accu
4b3b : 28              >            plp
                       >
4b3c : 0f              >            db  $0f          ;test nop integrity - flags off
4b3d : ea              >            nop
4b3e : ea              >            nop
                       >            tst_a $ff-$0f,0
4b3f : 08              >            php         ;save flags
4b40 : c9f0            >            cmp #$ff-$0f     ;test result
                       >            trap_ne
4b42 : f003            >        beq skip1665
                       >        trap            ;failed not equal (non zero)
4b44 : 200461          >        jsr report_error
                       >
4b47 :                 >skip1665
                       >
4b47 : 68              >            pla         ;load status
4b48 : 48              >            pha
                       >            cmp_flag 0
4b49 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4b4b : f003            >        beq skip1668
                       >        trap            ;failed not equal (non zero)
4b4d : 200461          >        jsr report_error
                       >
4b50 :                 >skip1668
                       >
4b50 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$0f,$ff
                       >            load_flag $ff
4b51 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4b53 : 48              >            pha         ;use stack to load status
4b54 : a99b            >            lda #$aa-$0f     ;precharge accu
4b56 : 28              >            plp
                       >
4b57 : 0f              >            db  $0f          ;test nop integrity - flags on
4b58 : ea              >            nop
4b59 : ea              >            nop
                       >            tst_a $aa-$0f,$ff
4b5a : 08              >            php         ;save flags
4b5b : c99b            >            cmp #$aa-$0f     ;test result
                       >            trap_ne
4b5d : f003            >        beq skip1673
                       >        trap            ;failed not equal (non zero)
4b5f : 200461          >        jsr report_error
                       >
4b62 :                 >skip1673
                       >
4b62 : 68              >            pla         ;load status
4b63 : 48              >            pha
                       >            cmp_flag $ff
4b64 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4b66 : f003            >        beq skip1676
                       >        trap            ;failed not equal (non zero)
4b68 : 200461          >        jsr report_error
                       >
4b6b :                 >skip1676
                       >
4b6b : 28              >            plp         ;restore status
                       >
4b6c : c042            >            cpy #$42
                       >            trap_ne         ;y changed
4b6e : f003            >        beq skip1678
                       >        trap            ;failed not equal (non zero)
4b70 : 200461          >        jsr report_error
                       >
4b73 :                 >skip1678
                       >
4b73 : e000            >            cpx #0
                       >            trap_ne         ;x changed
4b75 : f003            >        beq skip1680
                       >        trap            ;failed not equal (non zero)
4b77 : 200461          >        jsr report_error
                       >
4b7a :                 >skip1680
                       >
                        
                                nop_test $1f,1
4b7a : a042            >            ldy #$42
4b7c : a203            >            ldx #4-1
4b7e : 1f              >            db  $1f          ;test nop length
                       >        if 1 = 1
4b7f : ca              >            dex
4b80 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
4b81 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
4b82 : f003            >        beq skip1683
                       >        trap            ;failed not equal (non zero)
4b84 : 200461          >        jsr report_error
                       >
4b87 :                 >skip1683
                       >
                       >            set_a $ff-$1f,0
                       >            load_flag 0
4b87 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4b89 : 48              >            pha         ;use stack to load status
4b8a : a9e0            >            lda #$ff-$1f     ;precharge accu
4b8c : 28              >            plp
                       >
4b8d : 1f              >            db  $1f          ;test nop integrity - flags off
4b8e : ea              >            nop
4b8f : ea              >            nop
                       >            tst_a $ff-$1f,0
4b90 : 08              >            php         ;save flags
4b91 : c9e0            >            cmp #$ff-$1f     ;test result
                       >            trap_ne
4b93 : f003            >        beq skip1688
                       >        trap            ;failed not equal (non zero)
4b95 : 200461          >        jsr report_error
                       >
4b98 :                 >skip1688
                       >
4b98 : 68              >            pla         ;load status
4b99 : 48              >            pha
                       >            cmp_flag 0
4b9a : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4b9c : f003            >        beq skip1691
                       >        trap            ;failed not equal (non zero)
4b9e : 200461          >        jsr report_error
                       >
4ba1 :                 >skip1691
                       >
4ba1 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$1f,$ff
                       >            load_flag $ff
4ba2 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4ba4 : 48              >            pha         ;use stack to load status
4ba5 : a98b            >            lda #$aa-$1f     ;precharge accu
4ba7 : 28              >            plp
                       >
4ba8 : 1f              >            db  $1f          ;test nop integrity - flags on
4ba9 : ea              >            nop
4baa : ea              >            nop
                       >            tst_a $aa-$1f,$ff
4bab : 08              >            php         ;save flags
4bac : c98b            >            cmp #$aa-$1f     ;test result
                       >            trap_ne
4bae : f003            >        beq skip1696
                       >        trap            ;failed not equal (non zero)
4bb0 : 200461          >        jsr report_error
                       >
4bb3 :                 >skip1696
                       >
4bb3 : 68              >            pla         ;load status
4bb4 : 48              >            pha
                       >            cmp_flag $ff
4bb5 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4bb7 : f003            >        beq skip1699
                       >        trap            ;failed not equal (non zero)
4bb9 : 200461          >        jsr report_error
                       >
4bbc :                 >skip1699
                       >
4bbc : 28              >            plp         ;restore status
                       >
4bbd : c042            >            cpy #$42
                       >            trap_ne         ;y changed
4bbf : f003            >        beq skip1701
                       >        trap            ;failed not equal (non zero)
4bc1 : 200461          >        jsr report_error
                       >
4bc4 :                 >skip1701
                       >
4bc4 : e000            >            cpx #0
                       >            trap_ne         ;x changed
4bc6 : f003            >        beq skip1703
                       >        trap            ;failed not equal (non zero)
4bc8 : 200461          >        jsr report_error
                       >
4bcb :                 >skip1703
                       >
                        
                                nop_test $2f,1
4bcb : a042            >            ldy #$42
4bcd : a203            >            ldx #4-1
4bcf : 2f              >            db  $2f          ;test nop length
                       >        if 1 = 1
4bd0 : ca              >            dex
4bd1 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
4bd2 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
4bd3 : f003            >        beq skip1706
                       >        trap            ;failed not equal (non zero)
4bd5 : 200461          >        jsr report_error
                       >
4bd8 :                 >skip1706
                       >
                       >            set_a $ff-$2f,0
                       >            load_flag 0
4bd8 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4bda : 48              >            pha         ;use stack to load status
4bdb : a9d0            >            lda #$ff-$2f     ;precharge accu
4bdd : 28              >            plp
                       >
4bde : 2f              >            db  $2f          ;test nop integrity - flags off
4bdf : ea              >            nop
4be0 : ea              >            nop
                       >            tst_a $ff-$2f,0
4be1 : 08              >            php         ;save flags
4be2 : c9d0            >            cmp #$ff-$2f     ;test result
                       >            trap_ne
4be4 : f003            >        beq skip1711
                       >        trap            ;failed not equal (non zero)
4be6 : 200461          >        jsr report_error
                       >
4be9 :                 >skip1711
                       >
4be9 : 68              >            pla         ;load status
4bea : 48              >            pha
                       >            cmp_flag 0
4beb : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4bed : f003            >        beq skip1714
                       >        trap            ;failed not equal (non zero)
4bef : 200461          >        jsr report_error
                       >
4bf2 :                 >skip1714
                       >
4bf2 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$2f,$ff
                       >            load_flag $ff
4bf3 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4bf5 : 48              >            pha         ;use stack to load status
4bf6 : a97b            >            lda #$aa-$2f     ;precharge accu
4bf8 : 28              >            plp
                       >
4bf9 : 2f              >            db  $2f          ;test nop integrity - flags on
4bfa : ea              >            nop
4bfb : ea              >            nop
                       >            tst_a $aa-$2f,$ff
4bfc : 08              >            php         ;save flags
4bfd : c97b            >            cmp #$aa-$2f     ;test result
                       >            trap_ne
4bff : f003            >        beq skip1719
                       >        trap            ;failed not equal (non zero)
4c01 : 200461          >        jsr report_error
                       >
4c04 :                 >skip1719
                       >
4c04 : 68              >            pla         ;load status
4c05 : 48              >            pha
                       >            cmp_flag $ff
4c06 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4c08 : f003            >        beq skip1722
                       >        trap            ;failed not equal (non zero)
4c0a : 200461          >        jsr report_error
                       >
4c0d :                 >skip1722
                       >
4c0d : 28              >            plp         ;restore status
                       >
4c0e : c042            >            cpy #$42
                       >            trap_ne         ;y changed
4c10 : f003            >        beq skip1724
                       >        trap            ;failed not equal (non zero)
4c12 : 200461          >        jsr report_error
                       >
4c15 :                 >skip1724
                       >
4c15 : e000            >            cpx #0
                       >            trap_ne         ;x changed
4c17 : f003            >        beq skip1726
                       >        trap            ;failed not equal (non zero)
4c19 : 200461          >        jsr report_error
                       >
4c1c :                 >skip1726
                       >
                        
                                nop_test $3f,1
4c1c : a042            >            ldy #$42
4c1e : a203            >            ldx #4-1
4c20 : 3f              >            db  $3f          ;test nop length
                       >        if 1 = 1
4c21 : ca              >            dex
4c22 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
4c23 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
4c24 : f003            >        beq skip1729
                       >        trap            ;failed not equal (non zero)
4c26 : 200461          >        jsr report_error
                       >
4c29 :                 >skip1729
                       >
                       >            set_a $ff-$3f,0
                       >            load_flag 0
4c29 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4c2b : 48              >            pha         ;use stack to load status
4c2c : a9c0            >            lda #$ff-$3f     ;precharge accu
4c2e : 28              >            plp
                       >
4c2f : 3f              >            db  $3f          ;test nop integrity - flags off
4c30 : ea              >            nop
4c31 : ea              >            nop
                       >            tst_a $ff-$3f,0
4c32 : 08              >            php         ;save flags
4c33 : c9c0            >            cmp #$ff-$3f     ;test result
                       >            trap_ne
4c35 : f003            >        beq skip1734
                       >        trap            ;failed not equal (non zero)
4c37 : 200461          >        jsr report_error
                       >
4c3a :                 >skip1734
                       >
4c3a : 68              >            pla         ;load status
4c3b : 48              >            pha
                       >            cmp_flag 0
4c3c : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4c3e : f003            >        beq skip1737
                       >        trap            ;failed not equal (non zero)
4c40 : 200461          >        jsr report_error
                       >
4c43 :                 >skip1737
                       >
4c43 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$3f,$ff
                       >            load_flag $ff
4c44 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4c46 : 48              >            pha         ;use stack to load status
4c47 : a96b            >            lda #$aa-$3f     ;precharge accu
4c49 : 28              >            plp
                       >
4c4a : 3f              >            db  $3f          ;test nop integrity - flags on
4c4b : ea              >            nop
4c4c : ea              >            nop
                       >            tst_a $aa-$3f,$ff
4c4d : 08              >            php         ;save flags
4c4e : c96b            >            cmp #$aa-$3f     ;test result
                       >            trap_ne
4c50 : f003            >        beq skip1742
                       >        trap            ;failed not equal (non zero)
4c52 : 200461          >        jsr report_error
                       >
4c55 :                 >skip1742
                       >
4c55 : 68              >            pla         ;load status
4c56 : 48              >            pha
                       >            cmp_flag $ff
4c57 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4c59 : f003            >        beq skip1745
                       >        trap            ;failed not equal (non zero)
4c5b : 200461          >        jsr report_error
                       >
4c5e :                 >skip1745
                       >
4c5e : 28              >            plp         ;restore status
                       >
4c5f : c042            >            cpy #$42
                       >            trap_ne         ;y changed
4c61 : f003            >        beq skip1747
                       >        trap            ;failed not equal (non zero)
4c63 : 200461          >        jsr report_error
                       >
4c66 :                 >skip1747
                       >
4c66 : e000            >            cpx #0
                       >            trap_ne         ;x changed
4c68 : f003            >        beq skip1749
                       >        trap            ;failed not equal (non zero)
4c6a : 200461          >        jsr report_error
                       >
4c6d :                 >skip1749
                       >
                        
                                nop_test $4f,1
4c6d : a042            >            ldy #$42
4c6f : a203            >            ldx #4-1
4c71 : 4f              >            db  $4f          ;test nop length
                       >        if 1 = 1
4c72 : ca              >            dex
4c73 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
4c74 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
4c75 : f003            >        beq skip1752
                       >        trap            ;failed not equal (non zero)
4c77 : 200461          >        jsr report_error
                       >
4c7a :                 >skip1752
                       >
                       >            set_a $ff-$4f,0
                       >            load_flag 0
4c7a : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4c7c : 48              >            pha         ;use stack to load status
4c7d : a9b0            >            lda #$ff-$4f     ;precharge accu
4c7f : 28              >            plp
                       >
4c80 : 4f              >            db  $4f          ;test nop integrity - flags off
4c81 : ea              >            nop
4c82 : ea              >            nop
                       >            tst_a $ff-$4f,0
4c83 : 08              >            php         ;save flags
4c84 : c9b0            >            cmp #$ff-$4f     ;test result
                       >            trap_ne
4c86 : f003            >        beq skip1757
                       >        trap            ;failed not equal (non zero)
4c88 : 200461          >        jsr report_error
                       >
4c8b :                 >skip1757
                       >
4c8b : 68              >            pla         ;load status
4c8c : 48              >            pha
                       >            cmp_flag 0
4c8d : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4c8f : f003            >        beq skip1760
                       >        trap            ;failed not equal (non zero)
4c91 : 200461          >        jsr report_error
                       >
4c94 :                 >skip1760
                       >
4c94 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$4f,$ff
                       >            load_flag $ff
4c95 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4c97 : 48              >            pha         ;use stack to load status
4c98 : a95b            >            lda #$aa-$4f     ;precharge accu
4c9a : 28              >            plp
                       >
4c9b : 4f              >            db  $4f          ;test nop integrity - flags on
4c9c : ea              >            nop
4c9d : ea              >            nop
                       >            tst_a $aa-$4f,$ff
4c9e : 08              >            php         ;save flags
4c9f : c95b            >            cmp #$aa-$4f     ;test result
                       >            trap_ne
4ca1 : f003            >        beq skip1765
                       >        trap            ;failed not equal (non zero)
4ca3 : 200461          >        jsr report_error
                       >
4ca6 :                 >skip1765
                       >
4ca6 : 68              >            pla         ;load status
4ca7 : 48              >            pha
                       >            cmp_flag $ff
4ca8 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4caa : f003            >        beq skip1768
                       >        trap            ;failed not equal (non zero)
4cac : 200461          >        jsr report_error
                       >
4caf :                 >skip1768
                       >
4caf : 28              >            plp         ;restore status
                       >
4cb0 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
4cb2 : f003            >        beq skip1770
                       >        trap            ;failed not equal (non zero)
4cb4 : 200461          >        jsr report_error
                       >
4cb7 :                 >skip1770
                       >
4cb7 : e000            >            cpx #0
                       >            trap_ne         ;x changed
4cb9 : f003            >        beq skip1772
                       >        trap            ;failed not equal (non zero)
4cbb : 200461          >        jsr report_error
                       >
4cbe :                 >skip1772
                       >
                        
                                nop_test $5f,1
4cbe : a042            >            ldy #$42
4cc0 : a203            >            ldx #4-1
4cc2 : 5f              >            db  $5f          ;test nop length
                       >        if 1 = 1
4cc3 : ca              >            dex
4cc4 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
4cc5 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
4cc6 : f003            >        beq skip1775
                       >        trap            ;failed not equal (non zero)
4cc8 : 200461          >        jsr report_error
                       >
4ccb :                 >skip1775
                       >
                       >            set_a $ff-$5f,0
                       >            load_flag 0
4ccb : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4ccd : 48              >            pha         ;use stack to load status
4cce : a9a0            >            lda #$ff-$5f     ;precharge accu
4cd0 : 28              >            plp
                       >
4cd1 : 5f              >            db  $5f          ;test nop integrity - flags off
4cd2 : ea              >            nop
4cd3 : ea              >            nop
                       >            tst_a $ff-$5f,0
4cd4 : 08              >            php         ;save flags
4cd5 : c9a0            >            cmp #$ff-$5f     ;test result
                       >            trap_ne
4cd7 : f003            >        beq skip1780
                       >        trap            ;failed not equal (non zero)
4cd9 : 200461          >        jsr report_error
                       >
4cdc :                 >skip1780
                       >
4cdc : 68              >            pla         ;load status
4cdd : 48              >            pha
                       >            cmp_flag 0
4cde : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4ce0 : f003            >        beq skip1783
                       >        trap            ;failed not equal (non zero)
4ce2 : 200461          >        jsr report_error
                       >
4ce5 :                 >skip1783
                       >
4ce5 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$5f,$ff
                       >            load_flag $ff
4ce6 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4ce8 : 48              >            pha         ;use stack to load status
4ce9 : a94b            >            lda #$aa-$5f     ;precharge accu
4ceb : 28              >            plp
                       >
4cec : 5f              >            db  $5f          ;test nop integrity - flags on
4ced : ea              >            nop
4cee : ea              >            nop
                       >            tst_a $aa-$5f,$ff
4cef : 08              >            php         ;save flags
4cf0 : c94b            >            cmp #$aa-$5f     ;test result
                       >            trap_ne
4cf2 : f003            >        beq skip1788
                       >        trap            ;failed not equal (non zero)
4cf4 : 200461          >        jsr report_error
                       >
4cf7 :                 >skip1788
                       >
4cf7 : 68              >            pla         ;load status
4cf8 : 48              >            pha
                       >            cmp_flag $ff
4cf9 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4cfb : f003            >        beq skip1791
                       >        trap            ;failed not equal (non zero)
4cfd : 200461          >        jsr report_error
                       >
4d00 :                 >skip1791
                       >
4d00 : 28              >            plp         ;restore status
                       >
4d01 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
4d03 : f003            >        beq skip1793
                       >        trap            ;failed not equal (non zero)
4d05 : 200461          >        jsr report_error
                       >
4d08 :                 >skip1793
                       >
4d08 : e000            >            cpx #0
                       >            trap_ne         ;x changed
4d0a : f003            >        beq skip1795
                       >        trap            ;failed not equal (non zero)
4d0c : 200461          >        jsr report_error
                       >
4d0f :                 >skip1795
                       >
                        
                                nop_test $6f,1
4d0f : a042            >            ldy #$42
4d11 : a203            >            ldx #4-1
4d13 : 6f              >            db  $6f          ;test nop length
                       >        if 1 = 1
4d14 : ca              >            dex
4d15 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
4d16 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
4d17 : f003            >        beq skip1798
                       >        trap            ;failed not equal (non zero)
4d19 : 200461          >        jsr report_error
                       >
4d1c :                 >skip1798
                       >
                       >            set_a $ff-$6f,0
                       >            load_flag 0
4d1c : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4d1e : 48              >            pha         ;use stack to load status
4d1f : a990            >            lda #$ff-$6f     ;precharge accu
4d21 : 28              >            plp
                       >
4d22 : 6f              >            db  $6f          ;test nop integrity - flags off
4d23 : ea              >            nop
4d24 : ea              >            nop
                       >            tst_a $ff-$6f,0
4d25 : 08              >            php         ;save flags
4d26 : c990            >            cmp #$ff-$6f     ;test result
                       >            trap_ne
4d28 : f003            >        beq skip1803
                       >        trap            ;failed not equal (non zero)
4d2a : 200461          >        jsr report_error
                       >
4d2d :                 >skip1803
                       >
4d2d : 68              >            pla         ;load status
4d2e : 48              >            pha
                       >            cmp_flag 0
4d2f : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4d31 : f003            >        beq skip1806
                       >        trap            ;failed not equal (non zero)
4d33 : 200461          >        jsr report_error
                       >
4d36 :                 >skip1806
                       >
4d36 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$6f,$ff
                       >            load_flag $ff
4d37 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4d39 : 48              >            pha         ;use stack to load status
4d3a : a93b            >            lda #$aa-$6f     ;precharge accu
4d3c : 28              >            plp
                       >
4d3d : 6f              >            db  $6f          ;test nop integrity - flags on
4d3e : ea              >            nop
4d3f : ea              >            nop
                       >            tst_a $aa-$6f,$ff
4d40 : 08              >            php         ;save flags
4d41 : c93b            >            cmp #$aa-$6f     ;test result
                       >            trap_ne
4d43 : f003            >        beq skip1811
                       >        trap            ;failed not equal (non zero)
4d45 : 200461          >        jsr report_error
                       >
4d48 :                 >skip1811
                       >
4d48 : 68              >            pla         ;load status
4d49 : 48              >            pha
                       >            cmp_flag $ff
4d4a : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4d4c : f003            >        beq skip1814
                       >        trap            ;failed not equal (non zero)
4d4e : 200461          >        jsr report_error
                       >
4d51 :                 >skip1814
                       >
4d51 : 28              >            plp         ;restore status
                       >
4d52 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
4d54 : f003            >        beq skip1816
                       >        trap            ;failed not equal (non zero)
4d56 : 200461          >        jsr report_error
                       >
4d59 :                 >skip1816
                       >
4d59 : e000            >            cpx #0
                       >            trap_ne         ;x changed
4d5b : f003            >        beq skip1818
                       >        trap            ;failed not equal (non zero)
4d5d : 200461          >        jsr report_error
                       >
4d60 :                 >skip1818
                       >
                        
                                nop_test $7f,1
4d60 : a042            >            ldy #$42
4d62 : a203            >            ldx #4-1
4d64 : 7f              >            db  $7f          ;test nop length
                       >        if 1 = 1
4d65 : ca              >            dex
4d66 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
4d67 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
4d68 : f003            >        beq skip1821
                       >        trap            ;failed not equal (non zero)
4d6a : 200461          >        jsr report_error
                       >
4d6d :                 >skip1821
                       >
                       >            set_a $ff-$7f,0
                       >            load_flag 0
4d6d : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4d6f : 48              >            pha         ;use stack to load status
4d70 : a980            >            lda #$ff-$7f     ;precharge accu
4d72 : 28              >            plp
                       >
4d73 : 7f              >            db  $7f          ;test nop integrity - flags off
4d74 : ea              >            nop
4d75 : ea              >            nop
                       >            tst_a $ff-$7f,0
4d76 : 08              >            php         ;save flags
4d77 : c980            >            cmp #$ff-$7f     ;test result
                       >            trap_ne
4d79 : f003            >        beq skip1826
                       >        trap            ;failed not equal (non zero)
4d7b : 200461          >        jsr report_error
                       >
4d7e :                 >skip1826
                       >
4d7e : 68              >            pla         ;load status
4d7f : 48              >            pha
                       >            cmp_flag 0
4d80 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4d82 : f003            >        beq skip1829
                       >        trap            ;failed not equal (non zero)
4d84 : 200461          >        jsr report_error
                       >
4d87 :                 >skip1829
                       >
4d87 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$7f,$ff
                       >            load_flag $ff
4d88 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4d8a : 48              >            pha         ;use stack to load status
4d8b : a92b            >            lda #$aa-$7f     ;precharge accu
4d8d : 28              >            plp
                       >
4d8e : 7f              >            db  $7f          ;test nop integrity - flags on
4d8f : ea              >            nop
4d90 : ea              >            nop
                       >            tst_a $aa-$7f,$ff
4d91 : 08              >            php         ;save flags
4d92 : c92b            >            cmp #$aa-$7f     ;test result
                       >            trap_ne
4d94 : f003            >        beq skip1834
                       >        trap            ;failed not equal (non zero)
4d96 : 200461          >        jsr report_error
                       >
4d99 :                 >skip1834
                       >
4d99 : 68              >            pla         ;load status
4d9a : 48              >            pha
                       >            cmp_flag $ff
4d9b : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4d9d : f003            >        beq skip1837
                       >        trap            ;failed not equal (non zero)
4d9f : 200461          >        jsr report_error
                       >
4da2 :                 >skip1837
                       >
4da2 : 28              >            plp         ;restore status
                       >
4da3 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
4da5 : f003            >        beq skip1839
                       >        trap            ;failed not equal (non zero)
4da7 : 200461          >        jsr report_error
                       >
4daa :                 >skip1839
                       >
4daa : e000            >            cpx #0
                       >            trap_ne         ;x changed
4dac : f003            >        beq skip1841
                       >        trap            ;failed not equal (non zero)
4dae : 200461          >        jsr report_error
                       >
4db1 :                 >skip1841
                       >
                        
                                nop_test $8f,1
4db1 : a042            >            ldy #$42
4db3 : a203            >            ldx #4-1
4db5 : 8f              >            db  $8f          ;test nop length
                       >        if 1 = 1
4db6 : ca              >            dex
4db7 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
4db8 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
4db9 : f003            >        beq skip1844
                       >        trap            ;failed not equal (non zero)
4dbb : 200461          >        jsr report_error
                       >
4dbe :                 >skip1844
                       >
                       >            set_a $ff-$8f,0
                       >            load_flag 0
4dbe : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4dc0 : 48              >            pha         ;use stack to load status
4dc1 : a970            >            lda #$ff-$8f     ;precharge accu
4dc3 : 28              >            plp
                       >
4dc4 : 8f              >            db  $8f          ;test nop integrity - flags off
4dc5 : ea              >            nop
4dc6 : ea              >            nop
                       >            tst_a $ff-$8f,0
4dc7 : 08              >            php         ;save flags
4dc8 : c970            >            cmp #$ff-$8f     ;test result
                       >            trap_ne
4dca : f003            >        beq skip1849
                       >        trap            ;failed not equal (non zero)
4dcc : 200461          >        jsr report_error
                       >
4dcf :                 >skip1849
                       >
4dcf : 68              >            pla         ;load status
4dd0 : 48              >            pha
                       >            cmp_flag 0
4dd1 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4dd3 : f003            >        beq skip1852
                       >        trap            ;failed not equal (non zero)
4dd5 : 200461          >        jsr report_error
                       >
4dd8 :                 >skip1852
                       >
4dd8 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$8f,$ff
                       >            load_flag $ff
4dd9 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4ddb : 48              >            pha         ;use stack to load status
4ddc : a91b            >            lda #$aa-$8f     ;precharge accu
4dde : 28              >            plp
                       >
4ddf : 8f              >            db  $8f          ;test nop integrity - flags on
4de0 : ea              >            nop
4de1 : ea              >            nop
                       >            tst_a $aa-$8f,$ff
4de2 : 08              >            php         ;save flags
4de3 : c91b            >            cmp #$aa-$8f     ;test result
                       >            trap_ne
4de5 : f003            >        beq skip1857
                       >        trap            ;failed not equal (non zero)
4de7 : 200461          >        jsr report_error
                       >
4dea :                 >skip1857
                       >
4dea : 68              >            pla         ;load status
4deb : 48              >            pha
                       >            cmp_flag $ff
4dec : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4dee : f003            >        beq skip1860
                       >        trap            ;failed not equal (non zero)
4df0 : 200461          >        jsr report_error
                       >
4df3 :                 >skip1860
                       >
4df3 : 28              >            plp         ;restore status
                       >
4df4 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
4df6 : f003            >        beq skip1862
                       >        trap            ;failed not equal (non zero)
4df8 : 200461          >        jsr report_error
                       >
4dfb :                 >skip1862
                       >
4dfb : e000            >            cpx #0
                       >            trap_ne         ;x changed
4dfd : f003            >        beq skip1864
                       >        trap            ;failed not equal (non zero)
4dff : 200461          >        jsr report_error
                       >
4e02 :                 >skip1864
                       >
                        
                                nop_test $9f,1
4e02 : a042            >            ldy #$42
4e04 : a203            >            ldx #4-1
4e06 : 9f              >            db  $9f          ;test nop length
                       >        if 1 = 1
4e07 : ca              >            dex
4e08 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
4e09 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
4e0a : f003            >        beq skip1867
                       >        trap            ;failed not equal (non zero)
4e0c : 200461          >        jsr report_error
                       >
4e0f :                 >skip1867
                       >
                       >            set_a $ff-$9f,0
                       >            load_flag 0
4e0f : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4e11 : 48              >            pha         ;use stack to load status
4e12 : a960            >            lda #$ff-$9f     ;precharge accu
4e14 : 28              >            plp
                       >
4e15 : 9f              >            db  $9f          ;test nop integrity - flags off
4e16 : ea              >            nop
4e17 : ea              >            nop
                       >            tst_a $ff-$9f,0
4e18 : 08              >            php         ;save flags
4e19 : c960            >            cmp #$ff-$9f     ;test result
                       >            trap_ne
4e1b : f003            >        beq skip1872
                       >        trap            ;failed not equal (non zero)
4e1d : 200461          >        jsr report_error
                       >
4e20 :                 >skip1872
                       >
4e20 : 68              >            pla         ;load status
4e21 : 48              >            pha
                       >            cmp_flag 0
4e22 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4e24 : f003            >        beq skip1875
                       >        trap            ;failed not equal (non zero)
4e26 : 200461          >        jsr report_error
                       >
4e29 :                 >skip1875
                       >
4e29 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$9f,$ff
                       >            load_flag $ff
4e2a : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4e2c : 48              >            pha         ;use stack to load status
4e2d : a90b            >            lda #$aa-$9f     ;precharge accu
4e2f : 28              >            plp
                       >
4e30 : 9f              >            db  $9f          ;test nop integrity - flags on
4e31 : ea              >            nop
4e32 : ea              >            nop
                       >            tst_a $aa-$9f,$ff
4e33 : 08              >            php         ;save flags
4e34 : c90b            >            cmp #$aa-$9f     ;test result
                       >            trap_ne
4e36 : f003            >        beq skip1880
                       >        trap            ;failed not equal (non zero)
4e38 : 200461          >        jsr report_error
                       >
4e3b :                 >skip1880
                       >
4e3b : 68              >            pla         ;load status
4e3c : 48              >            pha
                       >            cmp_flag $ff
4e3d : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4e3f : f003            >        beq skip1883
                       >        trap            ;failed not equal (non zero)
4e41 : 200461          >        jsr report_error
                       >
4e44 :                 >skip1883
                       >
4e44 : 28              >            plp         ;restore status
                       >
4e45 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
4e47 : f003            >        beq skip1885
                       >        trap            ;failed not equal (non zero)
4e49 : 200461          >        jsr report_error
                       >
4e4c :                 >skip1885
                       >
4e4c : e000            >            cpx #0
                       >            trap_ne         ;x changed
4e4e : f003            >        beq skip1887
                       >        trap            ;failed not equal (non zero)
4e50 : 200461          >        jsr report_error
                       >
4e53 :                 >skip1887
                       >
                        
                                nop_test $af,1
4e53 : a042            >            ldy #$42
4e55 : a203            >            ldx #4-1
4e57 : af              >            db  $af          ;test nop length
                       >        if 1 = 1
4e58 : ca              >            dex
4e59 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
4e5a : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
4e5b : f003            >        beq skip1890
                       >        trap            ;failed not equal (non zero)
4e5d : 200461          >        jsr report_error
                       >
4e60 :                 >skip1890
                       >
                       >            set_a $ff-$af,0
                       >            load_flag 0
4e60 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4e62 : 48              >            pha         ;use stack to load status
4e63 : a950            >            lda #$ff-$af     ;precharge accu
4e65 : 28              >            plp
                       >
4e66 : af              >            db  $af          ;test nop integrity - flags off
4e67 : ea              >            nop
4e68 : ea              >            nop
                       >            tst_a $ff-$af,0
4e69 : 08              >            php         ;save flags
4e6a : c950            >            cmp #$ff-$af     ;test result
                       >            trap_ne
4e6c : f003            >        beq skip1895
                       >        trap            ;failed not equal (non zero)
4e6e : 200461          >        jsr report_error
                       >
4e71 :                 >skip1895
                       >
4e71 : 68              >            pla         ;load status
4e72 : 48              >            pha
                       >            cmp_flag 0
4e73 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4e75 : f003            >        beq skip1898
                       >        trap            ;failed not equal (non zero)
4e77 : 200461          >        jsr report_error
                       >
4e7a :                 >skip1898
                       >
4e7a : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$af,$ff
                       >            load_flag $ff
4e7b : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4e7d : 48              >            pha         ;use stack to load status
4e7e : a9fb            >            lda #$aa-$af     ;precharge accu
4e80 : 28              >            plp
                       >
4e81 : af              >            db  $af          ;test nop integrity - flags on
4e82 : ea              >            nop
4e83 : ea              >            nop
                       >            tst_a $aa-$af,$ff
4e84 : 08              >            php         ;save flags
4e85 : c9fb            >            cmp #$aa-$af     ;test result
                       >            trap_ne
4e87 : f003            >        beq skip1903
                       >        trap            ;failed not equal (non zero)
4e89 : 200461          >        jsr report_error
                       >
4e8c :                 >skip1903
                       >
4e8c : 68              >            pla         ;load status
4e8d : 48              >            pha
                       >            cmp_flag $ff
4e8e : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4e90 : f003            >        beq skip1906
                       >        trap            ;failed not equal (non zero)
4e92 : 200461          >        jsr report_error
                       >
4e95 :                 >skip1906
                       >
4e95 : 28              >            plp         ;restore status
                       >
4e96 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
4e98 : f003            >        beq skip1908
                       >        trap            ;failed not equal (non zero)
4e9a : 200461          >        jsr report_error
                       >
4e9d :                 >skip1908
                       >
4e9d : e000            >            cpx #0
                       >            trap_ne         ;x changed
4e9f : f003            >        beq skip1910
                       >        trap            ;failed not equal (non zero)
4ea1 : 200461          >        jsr report_error
                       >
4ea4 :                 >skip1910
                       >
                        
                                nop_test $bf,1
4ea4 : a042            >            ldy #$42
4ea6 : a203            >            ldx #4-1
4ea8 : bf              >            db  $bf          ;test nop length
                       >        if 1 = 1
4ea9 : ca              >            dex
4eaa : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
4eab : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
4eac : f003            >        beq skip1913
                       >        trap            ;failed not equal (non zero)
4eae : 200461          >        jsr report_error
                       >
4eb1 :                 >skip1913
                       >
                       >            set_a $ff-$bf,0
                       >            load_flag 0
4eb1 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4eb3 : 48              >            pha         ;use stack to load status
4eb4 : a940            >            lda #$ff-$bf     ;precharge accu
4eb6 : 28              >            plp
                       >
4eb7 : bf              >            db  $bf          ;test nop integrity - flags off
4eb8 : ea              >            nop
4eb9 : ea              >            nop
                       >            tst_a $ff-$bf,0
4eba : 08              >            php         ;save flags
4ebb : c940            >            cmp #$ff-$bf     ;test result
                       >            trap_ne
4ebd : f003            >        beq skip1918
                       >        trap            ;failed not equal (non zero)
4ebf : 200461          >        jsr report_error
                       >
4ec2 :                 >skip1918
                       >
4ec2 : 68              >            pla         ;load status
4ec3 : 48              >            pha
                       >            cmp_flag 0
4ec4 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4ec6 : f003            >        beq skip1921
                       >        trap            ;failed not equal (non zero)
4ec8 : 200461          >        jsr report_error
                       >
4ecb :                 >skip1921
                       >
4ecb : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$bf,$ff
                       >            load_flag $ff
4ecc : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4ece : 48              >            pha         ;use stack to load status
4ecf : a9eb            >            lda #$aa-$bf     ;precharge accu
4ed1 : 28              >            plp
                       >
4ed2 : bf              >            db  $bf          ;test nop integrity - flags on
4ed3 : ea              >            nop
4ed4 : ea              >            nop
                       >            tst_a $aa-$bf,$ff
4ed5 : 08              >            php         ;save flags
4ed6 : c9eb            >            cmp #$aa-$bf     ;test result
                       >            trap_ne
4ed8 : f003            >        beq skip1926
                       >        trap            ;failed not equal (non zero)
4eda : 200461          >        jsr report_error
                       >
4edd :                 >skip1926
                       >
4edd : 68              >            pla         ;load status
4ede : 48              >            pha
                       >            cmp_flag $ff
4edf : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4ee1 : f003            >        beq skip1929
                       >        trap            ;failed not equal (non zero)
4ee3 : 200461          >        jsr report_error
                       >
4ee6 :                 >skip1929
                       >
4ee6 : 28              >            plp         ;restore status
                       >
4ee7 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
4ee9 : f003            >        beq skip1931
                       >        trap            ;failed not equal (non zero)
4eeb : 200461          >        jsr report_error
                       >
4eee :                 >skip1931
                       >
4eee : e000            >            cpx #0
                       >            trap_ne         ;x changed
4ef0 : f003            >        beq skip1933
                       >        trap            ;failed not equal (non zero)
4ef2 : 200461          >        jsr report_error
                       >
4ef5 :                 >skip1933
                       >
                        
                                nop_test $cf,1
4ef5 : a042            >            ldy #$42
4ef7 : a203            >            ldx #4-1
4ef9 : cf              >            db  $cf          ;test nop length
                       >        if 1 = 1
4efa : ca              >            dex
4efb : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
4efc : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
4efd : f003            >        beq skip1936
                       >        trap            ;failed not equal (non zero)
4eff : 200461          >        jsr report_error
                       >
4f02 :                 >skip1936
                       >
                       >            set_a $ff-$cf,0
                       >            load_flag 0
4f02 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4f04 : 48              >            pha         ;use stack to load status
4f05 : a930            >            lda #$ff-$cf     ;precharge accu
4f07 : 28              >            plp
                       >
4f08 : cf              >            db  $cf          ;test nop integrity - flags off
4f09 : ea              >            nop
4f0a : ea              >            nop
                       >            tst_a $ff-$cf,0
4f0b : 08              >            php         ;save flags
4f0c : c930            >            cmp #$ff-$cf     ;test result
                       >            trap_ne
4f0e : f003            >        beq skip1941
                       >        trap            ;failed not equal (non zero)
4f10 : 200461          >        jsr report_error
                       >
4f13 :                 >skip1941
                       >
4f13 : 68              >            pla         ;load status
4f14 : 48              >            pha
                       >            cmp_flag 0
4f15 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4f17 : f003            >        beq skip1944
                       >        trap            ;failed not equal (non zero)
4f19 : 200461          >        jsr report_error
                       >
4f1c :                 >skip1944
                       >
4f1c : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$cf,$ff
                       >            load_flag $ff
4f1d : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4f1f : 48              >            pha         ;use stack to load status
4f20 : a9db            >            lda #$aa-$cf     ;precharge accu
4f22 : 28              >            plp
                       >
4f23 : cf              >            db  $cf          ;test nop integrity - flags on
4f24 : ea              >            nop
4f25 : ea              >            nop
                       >            tst_a $aa-$cf,$ff
4f26 : 08              >            php         ;save flags
4f27 : c9db            >            cmp #$aa-$cf     ;test result
                       >            trap_ne
4f29 : f003            >        beq skip1949
                       >        trap            ;failed not equal (non zero)
4f2b : 200461          >        jsr report_error
                       >
4f2e :                 >skip1949
                       >
4f2e : 68              >            pla         ;load status
4f2f : 48              >            pha
                       >            cmp_flag $ff
4f30 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4f32 : f003            >        beq skip1952
                       >        trap            ;failed not equal (non zero)
4f34 : 200461          >        jsr report_error
                       >
4f37 :                 >skip1952
                       >
4f37 : 28              >            plp         ;restore status
                       >
4f38 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
4f3a : f003            >        beq skip1954
                       >        trap            ;failed not equal (non zero)
4f3c : 200461          >        jsr report_error
                       >
4f3f :                 >skip1954
                       >
4f3f : e000            >            cpx #0
                       >            trap_ne         ;x changed
4f41 : f003            >        beq skip1956
                       >        trap            ;failed not equal (non zero)
4f43 : 200461          >        jsr report_error
                       >
4f46 :                 >skip1956
                       >
                        
                                nop_test $df,1
4f46 : a042            >            ldy #$42
4f48 : a203            >            ldx #4-1
4f4a : df              >            db  $df          ;test nop length
                       >        if 1 = 1
4f4b : ca              >            dex
4f4c : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
4f4d : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
4f4e : f003            >        beq skip1959
                       >        trap            ;failed not equal (non zero)
4f50 : 200461          >        jsr report_error
                       >
4f53 :                 >skip1959
                       >
                       >            set_a $ff-$df,0
                       >            load_flag 0
4f53 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4f55 : 48              >            pha         ;use stack to load status
4f56 : a920            >            lda #$ff-$df     ;precharge accu
4f58 : 28              >            plp
                       >
4f59 : df              >            db  $df          ;test nop integrity - flags off
4f5a : ea              >            nop
4f5b : ea              >            nop
                       >            tst_a $ff-$df,0
4f5c : 08              >            php         ;save flags
4f5d : c920            >            cmp #$ff-$df     ;test result
                       >            trap_ne
4f5f : f003            >        beq skip1964
                       >        trap            ;failed not equal (non zero)
4f61 : 200461          >        jsr report_error
                       >
4f64 :                 >skip1964
                       >
4f64 : 68              >            pla         ;load status
4f65 : 48              >            pha
                       >            cmp_flag 0
4f66 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4f68 : f003            >        beq skip1967
                       >        trap            ;failed not equal (non zero)
4f6a : 200461          >        jsr report_error
                       >
4f6d :                 >skip1967
                       >
4f6d : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$df,$ff
                       >            load_flag $ff
4f6e : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4f70 : 48              >            pha         ;use stack to load status
4f71 : a9cb            >            lda #$aa-$df     ;precharge accu
4f73 : 28              >            plp
                       >
4f74 : df              >            db  $df          ;test nop integrity - flags on
4f75 : ea              >            nop
4f76 : ea              >            nop
                       >            tst_a $aa-$df,$ff
4f77 : 08              >            php         ;save flags
4f78 : c9cb            >            cmp #$aa-$df     ;test result
                       >            trap_ne
4f7a : f003            >        beq skip1972
                       >        trap            ;failed not equal (non zero)
4f7c : 200461          >        jsr report_error
                       >
4f7f :                 >skip1972
                       >
4f7f : 68              >            pla         ;load status
4f80 : 48              >            pha
                       >            cmp_flag $ff
4f81 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4f83 : f003            >        beq skip1975
                       >        trap            ;failed not equal (non zero)
4f85 : 200461          >        jsr report_error
                       >
4f88 :                 >skip1975
                       >
4f88 : 28              >            plp         ;restore status
                       >
4f89 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
4f8b : f003            >        beq skip1977
                       >        trap            ;failed not equal (non zero)
4f8d : 200461          >        jsr report_error
                       >
4f90 :                 >skip1977
                       >
4f90 : e000            >            cpx #0
                       >            trap_ne         ;x changed
4f92 : f003            >        beq skip1979
                       >        trap            ;failed not equal (non zero)
4f94 : 200461          >        jsr report_error
                       >
4f97 :                 >skip1979
                       >
                        
                                nop_test $ef,1
4f97 : a042            >            ldy #$42
4f99 : a203            >            ldx #4-1
4f9b : ef              >            db  $ef          ;test nop length
                       >        if 1 = 1
4f9c : ca              >            dex
4f9d : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
4f9e : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
4f9f : f003            >        beq skip1982
                       >        trap            ;failed not equal (non zero)
4fa1 : 200461          >        jsr report_error
                       >
4fa4 :                 >skip1982
                       >
                       >            set_a $ff-$ef,0
                       >            load_flag 0
4fa4 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4fa6 : 48              >            pha         ;use stack to load status
4fa7 : a910            >            lda #$ff-$ef     ;precharge accu
4fa9 : 28              >            plp
                       >
4faa : ef              >            db  $ef          ;test nop integrity - flags off
4fab : ea              >            nop
4fac : ea              >            nop
                       >            tst_a $ff-$ef,0
4fad : 08              >            php         ;save flags
4fae : c910            >            cmp #$ff-$ef     ;test result
                       >            trap_ne
4fb0 : f003            >        beq skip1987
                       >        trap            ;failed not equal (non zero)
4fb2 : 200461          >        jsr report_error
                       >
4fb5 :                 >skip1987
                       >
4fb5 : 68              >            pla         ;load status
4fb6 : 48              >            pha
                       >            cmp_flag 0
4fb7 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4fb9 : f003            >        beq skip1990
                       >        trap            ;failed not equal (non zero)
4fbb : 200461          >        jsr report_error
                       >
4fbe :                 >skip1990
                       >
4fbe : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$ef,$ff
                       >            load_flag $ff
4fbf : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4fc1 : 48              >            pha         ;use stack to load status
4fc2 : a9bb            >            lda #$aa-$ef     ;precharge accu
4fc4 : 28              >            plp
                       >
4fc5 : ef              >            db  $ef          ;test nop integrity - flags on
4fc6 : ea              >            nop
4fc7 : ea              >            nop
                       >            tst_a $aa-$ef,$ff
4fc8 : 08              >            php         ;save flags
4fc9 : c9bb            >            cmp #$aa-$ef     ;test result
                       >            trap_ne
4fcb : f003            >        beq skip1995
                       >        trap            ;failed not equal (non zero)
4fcd : 200461          >        jsr report_error
                       >
4fd0 :                 >skip1995
                       >
4fd0 : 68              >            pla         ;load status
4fd1 : 48              >            pha
                       >            cmp_flag $ff
4fd2 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
4fd4 : f003            >        beq skip1998
                       >        trap            ;failed not equal (non zero)
4fd6 : 200461          >        jsr report_error
                       >
4fd9 :                 >skip1998
                       >
4fd9 : 28              >            plp         ;restore status
                       >
4fda : c042            >            cpy #$42
                       >            trap_ne         ;y changed
4fdc : f003            >        beq skip2000
                       >        trap            ;failed not equal (non zero)
4fde : 200461          >        jsr report_error
                       >
4fe1 :                 >skip2000
                       >
4fe1 : e000            >            cpx #0
                       >            trap_ne         ;x changed
4fe3 : f003            >        beq skip2002
                       >        trap            ;failed not equal (non zero)
4fe5 : 200461          >        jsr report_error
                       >
4fe8 :                 >skip2002
                       >
                        
                                nop_test $ff,1
4fe8 : a042            >            ldy #$42
4fea : a203            >            ldx #4-1
4fec : ff              >            db  $ff          ;test nop length
                       >        if 1 = 1
4fed : ca              >            dex
4fee : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
4fef : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
4ff0 : f003            >        beq skip2005
                       >        trap            ;failed not equal (non zero)
4ff2 : 200461          >        jsr report_error
                       >
4ff5 :                 >skip2005
                       >
                       >            set_a $ff-$ff,0
                       >            load_flag 0
4ff5 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4ff7 : 48              >            pha         ;use stack to load status
4ff8 : a900            >            lda #$ff-$ff     ;precharge accu
4ffa : 28              >            plp
                       >
4ffb : ff              >            db  $ff          ;test nop integrity - flags off
4ffc : ea              >            nop
4ffd : ea              >            nop
                       >            tst_a $ff-$ff,0
4ffe : 08              >            php         ;save flags
4fff : c900            >            cmp #$ff-$ff     ;test result
                       >            trap_ne
5001 : f003            >        beq skip2010
                       >        trap            ;failed not equal (non zero)
5003 : 200461          >        jsr report_error
                       >
5006 :                 >skip2010
                       >
5006 : 68              >            pla         ;load status
5007 : 48              >            pha
                       >            cmp_flag 0
5008 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
500a : f003            >        beq skip2013
                       >        trap            ;failed not equal (non zero)
500c : 200461          >        jsr report_error
                       >
500f :                 >skip2013
                       >
500f : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$ff,$ff
                       >            load_flag $ff
5010 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
5012 : 48              >            pha         ;use stack to load status
5013 : a9ab            >            lda #$aa-$ff     ;precharge accu
5015 : 28              >            plp
                       >
5016 : ff              >            db  $ff          ;test nop integrity - flags on
5017 : ea              >            nop
5018 : ea              >            nop
                       >            tst_a $aa-$ff,$ff
5019 : 08              >            php         ;save flags
501a : c9ab            >            cmp #$aa-$ff     ;test result
                       >            trap_ne
501c : f003            >        beq skip2018
                       >        trap            ;failed not equal (non zero)
501e : 200461          >        jsr report_error
                       >
5021 :                 >skip2018
                       >
5021 : 68              >            pla         ;load status
5022 : 48              >            pha
                       >            cmp_flag $ff
5023 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
5025 : f003            >        beq skip2021
                       >        trap            ;failed not equal (non zero)
5027 : 200461          >        jsr report_error
                       >
502a :                 >skip2021
                       >
502a : 28              >            plp         ;restore status
                       >
502b : c042            >            cpy #$42
                       >            trap_ne         ;y changed
502d : f003            >        beq skip2023
                       >        trap            ;failed not equal (non zero)
502f : 200461          >        jsr report_error
                       >
5032 :                 >skip2023
                       >
5032 : e000            >            cpx #0
                       >            trap_ne         ;x changed
5034 : f003            >        beq skip2025
                       >        trap            ;failed not equal (non zero)
5036 : 200461          >        jsr report_error
                       >
5039 :                 >skip2025
                       >
                        
                            endif
                            if  wdc_op = 0          ;NOPs not available on WDC 65C02 (WAI, STP)
                                nop_test $cb,1
5039 : a042            >            ldy #$42
503b : a203            >            ldx #4-1
503d : cb              >            db  $cb          ;test nop length
                       >        if 1 = 1
503e : ca              >            dex
503f : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
5040 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
5041 : f003            >        beq skip2028
                       >        trap            ;failed not equal (non zero)
5043 : 200461          >        jsr report_error
                       >
5046 :                 >skip2028
                       >
                       >            set_a $ff-$cb,0
                       >            load_flag 0
5046 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
5048 : 48              >            pha         ;use stack to load status
5049 : a934            >            lda #$ff-$cb     ;precharge accu
504b : 28              >            plp
                       >
504c : cb              >            db  $cb          ;test nop integrity - flags off
504d : ea              >            nop
504e : ea              >            nop
                       >            tst_a $ff-$cb,0
504f : 08              >            php         ;save flags
5050 : c934            >            cmp #$ff-$cb     ;test result
                       >            trap_ne
5052 : f003            >        beq skip2033
                       >        trap            ;failed not equal (non zero)
5054 : 200461          >        jsr report_error
                       >
5057 :                 >skip2033
                       >
5057 : 68              >            pla         ;load status
5058 : 48              >            pha
                       >            cmp_flag 0
5059 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
505b : f003            >        beq skip2036
                       >        trap            ;failed not equal (non zero)
505d : 200461          >        jsr report_error
                       >
5060 :                 >skip2036
                       >
5060 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$cb,$ff
                       >            load_flag $ff
5061 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
5063 : 48              >            pha         ;use stack to load status
5064 : a9df            >            lda #$aa-$cb     ;precharge accu
5066 : 28              >            plp
                       >
5067 : cb              >            db  $cb          ;test nop integrity - flags on
5068 : ea              >            nop
5069 : ea              >            nop
                       >            tst_a $aa-$cb,$ff
506a : 08              >            php         ;save flags
506b : c9df            >            cmp #$aa-$cb     ;test result
                       >            trap_ne
506d : f003            >        beq skip2041
                       >        trap            ;failed not equal (non zero)
506f : 200461          >        jsr report_error
                       >
5072 :                 >skip2041
                       >
5072 : 68              >            pla         ;load status
5073 : 48              >            pha
                       >            cmp_flag $ff
5074 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
5076 : f003            >        beq skip2044
                       >        trap            ;failed not equal (non zero)
5078 : 200461          >        jsr report_error
                       >
507b :                 >skip2044
                       >
507b : 28              >            plp         ;restore status
                       >
507c : c042            >            cpy #$42
                       >            trap_ne         ;y changed
507e : f003            >        beq skip2046
                       >        trap            ;failed not equal (non zero)
5080 : 200461          >        jsr report_error
                       >
5083 :                 >skip2046
                       >
5083 : e000            >            cpx #0
                       >            trap_ne         ;x changed
5085 : f003            >        beq skip2048
                       >        trap            ;failed not equal (non zero)
5087 : 200461          >        jsr report_error
                       >
508a :                 >skip2048
                       >
                        
                                nop_test $db,1
508a : a042            >            ldy #$42
508c : a203            >            ldx #4-1
508e : db              >            db  $db          ;test nop length
                       >        if 1 = 1
508f : ca              >            dex
5090 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
5091 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
5092 : f003            >        beq skip2051
                       >        trap            ;failed not equal (non zero)
5094 : 200461          >        jsr report_error
                       >
5097 :                 >skip2051
                       >
                       >            set_a $ff-$db,0
                       >            load_flag 0
5097 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
5099 : 48              >            pha         ;use stack to load status
509a : a924            >            lda #$ff-$db     ;precharge accu
509c : 28              >            plp
                       >
509d : db              >            db  $db          ;test nop integrity - flags off
509e : ea              >            nop
509f : ea              >            nop
                       >            tst_a $ff-$db,0
50a0 : 08              >            php         ;save flags
50a1 : c924            >            cmp #$ff-$db     ;test result
                       >            trap_ne
50a3 : f003            >        beq skip2056
                       >        trap            ;failed not equal (non zero)
50a5 : 200461          >        jsr report_error
                       >
50a8 :                 >skip2056
                       >
50a8 : 68              >            pla         ;load status
50a9 : 48              >            pha
                       >            cmp_flag 0
50aa : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
50ac : f003            >        beq skip2059
                       >        trap            ;failed not equal (non zero)
50ae : 200461          >        jsr report_error
                       >
50b1 :                 >skip2059
                       >
50b1 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$db,$ff
                       >            load_flag $ff
50b2 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
50b4 : 48              >            pha         ;use stack to load status
50b5 : a9cf            >            lda #$aa-$db     ;precharge accu
50b7 : 28              >            plp
                       >
50b8 : db              >            db  $db          ;test nop integrity - flags on
50b9 : ea              >            nop
50ba : ea              >            nop
                       >            tst_a $aa-$db,$ff
50bb : 08              >            php         ;save flags
50bc : c9cf            >            cmp #$aa-$db     ;test result
                       >            trap_ne
50be : f003            >        beq skip2064
                       >        trap            ;failed not equal (non zero)
50c0 : 200461          >        jsr report_error
                       >
50c3 :                 >skip2064
                       >
50c3 : 68              >            pla         ;load status
50c4 : 48              >            pha
                       >            cmp_flag $ff
50c5 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
50c7 : f003            >        beq skip2067
                       >        trap            ;failed not equal (non zero)
50c9 : 200461          >        jsr report_error
                       >
50cc :                 >skip2067
                       >
50cc : 28              >            plp         ;restore status
                       >
50cd : c042            >            cpy #$42
                       >            trap_ne         ;y changed
50cf : f003            >        beq skip2069
                       >        trap            ;failed not equal (non zero)
50d1 : 200461          >        jsr report_error
                       >
50d4 :                 >skip2069
                       >
50d4 : e000            >            cpx #0
                       >            trap_ne         ;x changed
50d6 : f003            >        beq skip2071
                       >        trap            ;failed not equal (non zero)
50d8 : 200461          >        jsr report_error
                       >
50db :                 >skip2071
                       >
                        
                            endif
                                next_test
50db : ad0232          >            lda test_case   ;previous test
50de : c906            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
50e0 : f003            >        beq skip2074
                       >        trap            ;failed not equal (non zero)
50e2 : 200461          >        jsr report_error
                       >
50e5 :                 >skip2074
                       >
0007 =                 >test_num = test_num + 1
50e5 : a907            >            lda #test_num   ;*** next tests' number
50e7 : 8d0232          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                            endif
                                    
                        ; jump indirect (test page cross bug is fixed)
50ea : a203                     ldx #3          ;prepare table
50ec : bdff5f           ji1     lda ji_adr,x
50ef : 9dfd32                   sta ji_tab,x
50f2 : ca                       dex
50f3 : 10f7                     bpl ji1
50f5 : a964                     lda #hi(ji_px) ;high address if page cross bug
50f7 : 8d0032                   sta pg_x
                                set_stat 0
                       >            load_flag 0
50fa : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
50fc : 48              >            pha         ;use stack to load status
50fd : 28              >            plp
                        
50fe : a949                     lda #'I'
5100 : a24e                     ldx #'N'
5102 : a044                     ldy #'D'        ;N=0, V=0, Z=0, C=0
5104 : 6cfd32                   jmp (ji_tab)
5107 : ea                       nop
                                trap_ne         ;runover protection
5108 : f003            >        beq skip2078
                       >        trap            ;failed not equal (non zero)
510a : 200461          >        jsr report_error
                       >
510d :                 >skip2078
                        
                        
510d : 88                       dey
510e : 88                       dey
510f : 08               ji_ret  php             ;either SP or Y count will fail, if we do not hit
5110 : 88                       dey
5111 : 88                       dey
5112 : 88                       dey
5113 : 28                       plp
                                trap_eq         ;returned flags OK?
5114 : d003            >        bne skip2080
                       >        trap           ;failed equal (zero)
5116 : 200461          >        jsr report_error
                       >
5119 :                 >skip2080
                        
                                trap_pl
5119 : 3003            >        bmi skip2082
                       >        trap            ;failed plus (bit 7 clear)
511b : 200461          >        jsr report_error
                       >
511e :                 >skip2082
                        
                                trap_cc
511e : b003            >        bcs skip2084
                       >        trap            ;failed carry clear
5120 : 200461          >        jsr report_error
                       >
5123 :                 >skip2084
                        
                                trap_vc
5123 : 7003            >        bvs skip2086
                       >        trap            ;failed overflow clear
5125 : 200461          >        jsr report_error
                       >
5128 :                 >skip2086
                        
5128 : c9e3                     cmp #('I'^$aa)  ;returned registers OK?
                                trap_ne
512a : f003            >        beq skip2088
                       >        trap            ;failed not equal (non zero)
512c : 200461          >        jsr report_error
                       >
512f :                 >skip2088
                        
512f : e04f                     cpx #('N'+1)
                                trap_ne
5131 : f003            >        beq skip2090
                       >        trap            ;failed not equal (non zero)
5133 : 200461          >        jsr report_error
                       >
5136 :                 >skip2090
                        
5136 : c03e                     cpy #('D'-6)
                                trap_ne
5138 : f003            >        beq skip2092
                       >        trap            ;failed not equal (non zero)
513a : 200461          >        jsr report_error
                       >
513d :                 >skip2092
                        
513d : ba                       tsx             ;SP check
513e : e0ff                     cpx #$ff
                                trap_ne
5140 : f003            >        beq skip2094
                       >        trap            ;failed not equal (non zero)
5142 : 200461          >        jsr report_error
                       >
5145 :                 >skip2094
                        
                                next_test
5145 : ad0232          >            lda test_case   ;previous test
5148 : c907            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
514a : f003            >        beq skip2097
                       >        trap            ;failed not equal (non zero)
514c : 200461          >        jsr report_error
                       >
514f :                 >skip2097
                       >
0008 =                 >test_num = test_num + 1
514f : a908            >            lda #test_num   ;*** next tests' number
5151 : 8d0232          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; jump indexed indirect
5154 : a20b                     ldx #11         ;prepare table
5156 : bd5360           jxi1    lda jxi_adr,x
5159 : 9df932                   sta jxi_tab,x
515c : ca                       dex
515d : 10f7                     bpl jxi1
515f : a963                     lda #hi(jxi_px) ;high address if page cross bug
5161 : 8d0032                   sta pg_x
                                set_stat 0
                       >            load_flag 0
5164 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
5166 : 48              >            pha         ;use stack to load status
5167 : 28              >            plp
                        
5168 : a958                     lda #'X'
516a : a204                     ldx #4
516c : a049                     ldy #'I'        ;N=0, V=0, Z=0, C=0
516e : 7cf932                   jmp (jxi_tab,x)
5171 : ea                       nop
                                trap_ne         ;runover protection
5172 : f003            >        beq skip2101
                       >        trap            ;failed not equal (non zero)
5174 : 200461          >        jsr report_error
                       >
5177 :                 >skip2101
                        
                        
5177 : 88                       dey
5178 : 88                       dey
5179 : 08               jxi_ret php             ;either SP or Y count will fail, if we do not hit
517a : 88                       dey
517b : 88                       dey
517c : 88                       dey
517d : 28                       plp
                                trap_eq         ;returned flags OK?
517e : d003            >        bne skip2103
                       >        trap           ;failed equal (zero)
5180 : 200461          >        jsr report_error
                       >
5183 :                 >skip2103
                        
                                trap_pl
5183 : 3003            >        bmi skip2105
                       >        trap            ;failed plus (bit 7 clear)
5185 : 200461          >        jsr report_error
                       >
5188 :                 >skip2105
                        
                                trap_cc
5188 : b003            >        bcs skip2107
                       >        trap            ;failed carry clear
518a : 200461          >        jsr report_error
                       >
518d :                 >skip2107
                        
                                trap_vc
518d : 7003            >        bvs skip2109
                       >        trap            ;failed overflow clear
518f : 200461          >        jsr report_error
                       >
5192 :                 >skip2109
                        
5192 : c9f2                     cmp #('X'^$aa)  ;returned registers OK?
                                trap_ne
5194 : f003            >        beq skip2111
                       >        trap            ;failed not equal (non zero)
5196 : 200461          >        jsr report_error
                       >
5199 :                 >skip2111
                        
5199 : e006                     cpx #6
                                trap_ne
519b : f003            >        beq skip2113
                       >        trap            ;failed not equal (non zero)
519d : 200461          >        jsr report_error
                       >
51a0 :                 >skip2113
                        
51a0 : c043                     cpy #('I'-6)
                                trap_ne
51a2 : f003            >        beq skip2115
                       >        trap            ;failed not equal (non zero)
51a4 : 200461          >        jsr report_error
                       >
51a7 :                 >skip2115
                        
51a7 : ba                       tsx             ;SP check
51a8 : e0ff                     cpx #$ff
                                trap_ne
51aa : f003            >        beq skip2117
                       >        trap            ;failed not equal (non zero)
51ac : 200461          >        jsr report_error
                       >
51af :                 >skip2117
                        
                        
51af : a9cb                     lda #lo(jxp_ok) ;test with index causing a page cross
51b1 : 8d0033                   sta jxp_tab
51b4 : a951                     lda #hi(jxp_ok)
51b6 : 8d0133                   sta jxp_tab+1
51b9 : a9c8                     lda #lo(jxp_px)
51bb : 8d0032                   sta pg_x
51be : a951                     lda #hi(jxp_px)
51c0 : 8d0132                   sta pg_x+1
51c3 : a2ff                     ldx #$ff
51c5 : 7c0132                   jmp (jxp_tab-$ff,x)
                                
51c8 :                  jxp_px  
                                trap            ;page cross by index to wrong page
51c8 : 200461          >        jsr report_error
                        
                        
51cb :                  jxp_ok
                                next_test
51cb : ad0232          >            lda test_case   ;previous test
51ce : c908            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
51d0 : f003            >        beq skip2121
                       >        trap            ;failed not equal (non zero)
51d2 : 200461          >        jsr report_error
                       >
51d5 :                 >skip2121
                       >
0009 =                 >test_num = test_num + 1
51d5 : a909            >            lda #test_num   ;*** next tests' number
51d7 : 8d0232          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                            if ROM_vectors = 1
                        ; test BRK clears decimal mode
                                load_flag 0     ;with interrupts enabled if allowed!
                                pha
                                lda #'B'
                                ldx #'R'
                                ldy #'K'
                                plp             ;N=0, V=0, Z=0, C=0
                                brk
                                dey             ;should not be executed
                        brk_ret0                ;address of break return
                                php             ;either SP or Y count will fail, if we do not hit
                                dey
                                dey
                                dey
                                cmp #'B'^$aa    ;returned registers OK?
                                ;the IRQ vector was never executed if A & X stay unmodified
                                trap_ne
                                cpx #'R'+1
                                trap_ne
                                cpy #'K'-6
                                trap_ne
                                pla             ;returned flags OK (unchanged)?
                                cmp_flag 0
                                trap_ne
                                tsx             ;sp?
                                cpx #$ff
                                trap_ne
                        ;pass 2
                                load_flag $ff   ;with interrupts disabled if allowed!
                                pha
                                lda #$ff-'B'
                                ldx #$ff-'R'
                                ldy #$ff-'K'
                                plp             ;N=1, V=1, Z=1, C=1
                                brk
                                dey             ;should not be executed
                        brk_ret1                ;address of break return
                                php             ;either SP or Y count will fail, if we do not hit
                                dey
                                dey
                                dey
                                cmp #($ff-'B')^$aa  ;returned registers OK?
                                ;the IRQ vector was never executed if A & X stay unmodified
                                trap_ne
                                cpx #$ff-'R'+1
                                trap_ne
                                cpy #$ff-'K'-6
                                trap_ne
                                pla             ;returned flags OK (unchanged)?
                                cmp_flag $ff
                                trap_ne
                                tsx             ;sp?
                                cpx #$ff
                                trap_ne
                                next_test
                            endif
                         
                        ; testing accumulator increment/decrement INC A & DEC A
51da : a2ac                     ldx #$ac    ;protect x & y
51dc : a0dc                     ldy #$dc
                                set_a $fe,$ff
                       >            load_flag $ff
51de : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
51e0 : 48              >            pha         ;use stack to load status
51e1 : a9fe            >            lda #$fe     ;precharge accu
51e3 : 28              >            plp
                        
51e4 : 1a                       inc a           ;ff
                                tst_as $ff,$ff-zero
51e5 : 48              >            pha
51e6 : 08              >            php         ;save flags
51e7 : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
51e9 : f003            >        beq skip2126
                       >        trap            ;failed not equal (non zero)
51eb : 200461          >        jsr report_error
                       >
51ee :                 >skip2126
                       >
51ee : 68              >            pla         ;load status
51ef : 48              >            pha
                       >            cmp_flag $ff-zero
51f0 : c9fd            >            cmp #($ff-zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
51f2 : f003            >        beq skip2129
                       >        trap            ;failed not equal (non zero)
51f4 : 200461          >        jsr report_error
                       >
51f7 :                 >skip2129
                       >
51f7 : 28              >            plp         ;restore status
51f8 : 68              >            pla
                        
51f9 : 1a                       inc a           ;00
                                tst_as 0,$ff-minus
51fa : 48              >            pha
51fb : 08              >            php         ;save flags
51fc : c900            >            cmp #0     ;test result
                       >            trap_ne
51fe : f003            >        beq skip2132
                       >        trap            ;failed not equal (non zero)
5200 : 200461          >        jsr report_error
                       >
5203 :                 >skip2132
                       >
5203 : 68              >            pla         ;load status
5204 : 48              >            pha
                       >            cmp_flag $ff-minus
5205 : c97f            >            cmp #($ff-minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
5207 : f003            >        beq skip2135
                       >        trap            ;failed not equal (non zero)
5209 : 200461          >        jsr report_error
                       >
520c :                 >skip2135
                       >
520c : 28              >            plp         ;restore status
520d : 68              >            pla
                        
520e : 1a                       inc a           ;01
                                tst_as 1,$ff-minus-zero
520f : 48              >            pha
5210 : 08              >            php         ;save flags
5211 : c901            >            cmp #1     ;test result
                       >            trap_ne
5213 : f003            >        beq skip2138
                       >        trap            ;failed not equal (non zero)
5215 : 200461          >        jsr report_error
                       >
5218 :                 >skip2138
                       >
5218 : 68              >            pla         ;load status
5219 : 48              >            pha
                       >            cmp_flag $ff-minus-zero
521a : c97d            >            cmp #($ff-minus-zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
521c : f003            >        beq skip2141
                       >        trap            ;failed not equal (non zero)
521e : 200461          >        jsr report_error
                       >
5221 :                 >skip2141
                       >
5221 : 28              >            plp         ;restore status
5222 : 68              >            pla
                        
5223 : 3a                       dec a           ;00
                                tst_as 0,$ff-minus
5224 : 48              >            pha
5225 : 08              >            php         ;save flags
5226 : c900            >            cmp #0     ;test result
                       >            trap_ne
5228 : f003            >        beq skip2144
                       >        trap            ;failed not equal (non zero)
522a : 200461          >        jsr report_error
                       >
522d :                 >skip2144
                       >
522d : 68              >            pla         ;load status
522e : 48              >            pha
                       >            cmp_flag $ff-minus
522f : c97f            >            cmp #($ff-minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
5231 : f003            >        beq skip2147
                       >        trap            ;failed not equal (non zero)
5233 : 200461          >        jsr report_error
                       >
5236 :                 >skip2147
                       >
5236 : 28              >            plp         ;restore status
5237 : 68              >            pla
                        
5238 : 3a                       dec a           ;ff
                                tst_as $ff,$ff-zero
5239 : 48              >            pha
523a : 08              >            php         ;save flags
523b : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
523d : f003            >        beq skip2150
                       >        trap            ;failed not equal (non zero)
523f : 200461          >        jsr report_error
                       >
5242 :                 >skip2150
                       >
5242 : 68              >            pla         ;load status
5243 : 48              >            pha
                       >            cmp_flag $ff-zero
5244 : c9fd            >            cmp #($ff-zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
5246 : f003            >        beq skip2153
                       >        trap            ;failed not equal (non zero)
5248 : 200461          >        jsr report_error
                       >
524b :                 >skip2153
                       >
524b : 28              >            plp         ;restore status
524c : 68              >            pla
                        
524d : 3a                       dec a           ;fe
                                set_a $fe,0
                       >            load_flag 0
524e : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
5250 : 48              >            pha         ;use stack to load status
5251 : a9fe            >            lda #$fe     ;precharge accu
5253 : 28              >            plp
                        
5254 : 1a                       inc a           ;ff
                                tst_as $ff,minus
5255 : 48              >            pha
5256 : 08              >            php         ;save flags
5257 : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
5259 : f003            >        beq skip2158
                       >        trap            ;failed not equal (non zero)
525b : 200461          >        jsr report_error
                       >
525e :                 >skip2158
                       >
525e : 68              >            pla         ;load status
525f : 48              >            pha
                       >            cmp_flag minus
5260 : c9b0            >            cmp #(minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
5262 : f003            >        beq skip2161
                       >        trap            ;failed not equal (non zero)
5264 : 200461          >        jsr report_error
                       >
5267 :                 >skip2161
                       >
5267 : 28              >            plp         ;restore status
5268 : 68              >            pla
                        
5269 : 1a                       inc a           ;00
                                tst_as 0,zero
526a : 48              >            pha
526b : 08              >            php         ;save flags
526c : c900            >            cmp #0     ;test result
                       >            trap_ne
526e : f003            >        beq skip2164
                       >        trap            ;failed not equal (non zero)
5270 : 200461          >        jsr report_error
                       >
5273 :                 >skip2164
                       >
5273 : 68              >            pla         ;load status
5274 : 48              >            pha
                       >            cmp_flag zero
5275 : c932            >            cmp #(zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
5277 : f003            >        beq skip2167
                       >        trap            ;failed not equal (non zero)
5279 : 200461          >        jsr report_error
                       >
527c :                 >skip2167
                       >
527c : 28              >            plp         ;restore status
527d : 68              >            pla
                        
527e : 1a                       inc a           ;01
                                tst_as 1,0
527f : 48              >            pha
5280 : 08              >            php         ;save flags
5281 : c901            >            cmp #1     ;test result
                       >            trap_ne
5283 : f003            >        beq skip2170
                       >        trap            ;failed not equal (non zero)
5285 : 200461          >        jsr report_error
                       >
5288 :                 >skip2170
                       >
5288 : 68              >            pla         ;load status
5289 : 48              >            pha
                       >            cmp_flag 0
528a : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
528c : f003            >        beq skip2173
                       >        trap            ;failed not equal (non zero)
528e : 200461          >        jsr report_error
                       >
5291 :                 >skip2173
                       >
5291 : 28              >            plp         ;restore status
5292 : 68              >            pla
                        
5293 : 3a                       dec a           ;00
                                tst_as 0,zero
5294 : 48              >            pha
5295 : 08              >            php         ;save flags
5296 : c900            >            cmp #0     ;test result
                       >            trap_ne
5298 : f003            >        beq skip2176
                       >        trap            ;failed not equal (non zero)
529a : 200461          >        jsr report_error
                       >
529d :                 >skip2176
                       >
529d : 68              >            pla         ;load status
529e : 48              >            pha
                       >            cmp_flag zero
529f : c932            >            cmp #(zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
52a1 : f003            >        beq skip2179
                       >        trap            ;failed not equal (non zero)
52a3 : 200461          >        jsr report_error
                       >
52a6 :                 >skip2179
                       >
52a6 : 28              >            plp         ;restore status
52a7 : 68              >            pla
                        
52a8 : 3a                       dec a           ;ff
                                tst_as $ff,minus
52a9 : 48              >            pha
52aa : 08              >            php         ;save flags
52ab : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
52ad : f003            >        beq skip2182
                       >        trap            ;failed not equal (non zero)
52af : 200461          >        jsr report_error
                       >
52b2 :                 >skip2182
                       >
52b2 : 68              >            pla         ;load status
52b3 : 48              >            pha
                       >            cmp_flag minus
52b4 : c9b0            >            cmp #(minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
52b6 : f003            >        beq skip2185
                       >        trap            ;failed not equal (non zero)
52b8 : 200461          >        jsr report_error
                       >
52bb :                 >skip2185
                       >
52bb : 28              >            plp         ;restore status
52bc : 68              >            pla
                        
52bd : e0ac                     cpx #$ac
                                trap_ne     ;x altered during test
52bf : f003            >        beq skip2187
                       >        trap            ;failed not equal (non zero)
52c1 : 200461          >        jsr report_error
                       >
52c4 :                 >skip2187
                        
52c4 : c0dc                     cpy #$dc
                                trap_ne     ;y altered during test
52c6 : f003            >        beq skip2189
                       >        trap            ;failed not equal (non zero)
52c8 : 200461          >        jsr report_error
                       >
52cb :                 >skip2189
                        
52cb : ba                       tsx
52cc : e0ff                     cpx #$ff
                                trap_ne     ;sp push/pop mismatch
52ce : f003            >        beq skip2191
                       >        trap            ;failed not equal (non zero)
52d0 : 200461          >        jsr report_error
                       >
52d3 :                 >skip2191
                        
                                next_test
52d3 : ad0232          >            lda test_case   ;previous test
52d6 : c909            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
52d8 : f003            >        beq skip2194
                       >        trap            ;failed not equal (non zero)
52da : 200461          >        jsr report_error
                       >
52dd :                 >skip2194
                       >
000a =                 >test_num = test_num + 1
52dd : a90a            >            lda #test_num   ;*** next tests' number
52df : 8d0232          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; testing load / store accumulator LDA / STA (zp)
52e2 : a299                     ldx #$99    ;protect x & y
52e4 : a066                     ldy #$66
                                set_stat 0  
                       >            load_flag 0  
52e6 : a900            >            lda #0               ;allow test to change I-flag (no mask)
                       >
52e8 : 48              >            pha         ;use stack to load status
52e9 : 28              >            plp
                        
52ea : b26a                     lda (ind1)
52ec : 08                       php         ;test stores do not alter flags
52ed : 49c3                     eor #$c3
52ef : 28                       plp
52f0 : 9276                     sta (indt)
52f2 : 08                       php         ;flags after load/store sequence
52f3 : 49c3                     eor #$c3
52f5 : c9c3                     cmp #$c3    ;test result
                                trap_ne
52f7 : f003            >        beq skip2198
                       >        trap            ;failed not equal (non zero)
52f9 : 200461          >        jsr report_error
                       >
52fc :                 >skip2198
                        
52fc : 68                       pla         ;load status
                                eor_flag 0
52fd : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
52ff : cd1532                   cmp fLDx    ;test flags
                                trap_ne
5302 : f003            >        beq skip2201
                       >        trap            ;failed not equal (non zero)
5304 : 200461          >        jsr report_error
                       >
5307 :                 >skip2201
                        
                                set_stat 0
                       >            load_flag 0
5307 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
5309 : 48              >            pha         ;use stack to load status
530a : 28              >            plp
                        
530b : b26c                     lda (ind1+2)
530d : 08                       php         ;test stores do not alter flags
530e : 49c3                     eor #$c3
5310 : 28                       plp
5311 : 9278                     sta (indt+2)
5313 : 08                       php         ;flags after load/store sequence
5314 : 49c3                     eor #$c3
5316 : c982                     cmp #$82    ;test result
                                trap_ne
5318 : f003            >        beq skip2205
                       >        trap            ;failed not equal (non zero)
531a : 200461          >        jsr report_error
                       >
531d :                 >skip2205
                        
531d : 68                       pla         ;load status
                                eor_flag 0
531e : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
5320 : cd1632                   cmp fLDx+1  ;test flags
                                trap_ne
5323 : f003            >        beq skip2208
                       >        trap            ;failed not equal (non zero)
5325 : 200461          >        jsr report_error
                       >
5328 :                 >skip2208
                        
                                set_stat 0
                       >            load_flag 0
5328 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
532a : 48              >            pha         ;use stack to load status
532b : 28              >            plp
                        
532c : b26e                     lda (ind1+4)
532e : 08                       php         ;test stores do not alter flags
532f : 49c3                     eor #$c3
5331 : 28                       plp
5332 : 927a                     sta (indt+4)
5334 : 08                       php         ;flags after load/store sequence
5335 : 49c3                     eor #$c3
5337 : c941                     cmp #$41    ;test result
                                trap_ne
5339 : f003            >        beq skip2212
                       >        trap            ;failed not equal (non zero)
533b : 200461          >        jsr report_error
                       >
533e :                 >skip2212
                        
533e : 68                       pla         ;load status
                                eor_flag 0
533f : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
5341 : cd1732                   cmp fLDx+2  ;test flags
                                trap_ne
5344 : f003            >        beq skip2215
                       >        trap            ;failed not equal (non zero)
5346 : 200461          >        jsr report_error
                       >
5349 :                 >skip2215
                        
                                set_stat 0
                       >            load_flag 0
5349 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
534b : 48              >            pha         ;use stack to load status
534c : 28              >            plp
                        
534d : b270                     lda (ind1+6)
534f : 08                       php         ;test stores do not alter flags
5350 : 49c3                     eor #$c3
5352 : 28                       plp
5353 : 927c                     sta (indt+6)
5355 : 08                       php         ;flags after load/store sequence
5356 : 49c3                     eor #$c3
5358 : c900                     cmp #0      ;test result
                                trap_ne
535a : f003            >        beq skip2219
                       >        trap            ;failed not equal (non zero)
535c : 200461          >        jsr report_error
                       >
535f :                 >skip2219
                        
535f : 68                       pla         ;load status
                                eor_flag 0
5360 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
5362 : cd1832                   cmp fLDx+3  ;test flags
                                trap_ne
5365 : f003            >        beq skip2222
                       >        trap            ;failed not equal (non zero)
5367 : 200461          >        jsr report_error
                       >
536a :                 >skip2222
                        
536a : e099                     cpx #$99
                                trap_ne     ;x altered during test
536c : f003            >        beq skip2224
                       >        trap            ;failed not equal (non zero)
536e : 200461          >        jsr report_error
                       >
5371 :                 >skip2224
                        
5371 : c066                     cpy #$66
                                trap_ne     ;y altered during test
5373 : f003            >        beq skip2226
                       >        trap            ;failed not equal (non zero)
5375 : 200461          >        jsr report_error
                       >
5378 :                 >skip2226
                        
                        
5378 : a003                     ldy #3      ;testing store result
537a : a200                     ldx #0
537c : b90532           tstai1  lda abst,y
537f : 49c3                     eor #$c3
5381 : d91032                   cmp abs1,y
                                trap_ne     ;store to indirect data
5384 : f003            >        beq skip2228
                       >        trap            ;failed not equal (non zero)
5386 : 200461          >        jsr report_error
                       >
5389 :                 >skip2228
                        
5389 : 8a                       txa
538a : 990532                   sta abst,y  ;clear                
538d : 88                       dey
538e : 10ec                     bpl tstai1
                        
5390 : a299                     ldx #$99    ;protect x & y
5392 : a066                     ldy #$66
                                set_stat $ff  
                       >            load_flag $ff  
5394 : a9ff            >            lda #$ff               ;allow test to change I-flag (no mask)
                       >
5396 : 48              >            pha         ;use stack to load status
5397 : 28              >            plp
                        
5398 : b26a                     lda (ind1)
539a : 08                       php         ;test stores do not alter flags
539b : 49c3                     eor #$c3
539d : 28                       plp
539e : 9276                     sta (indt)
53a0 : 08                       php         ;flags after load/store sequence
53a1 : 49c3                     eor #$c3
53a3 : c9c3                     cmp #$c3    ;test result
                                trap_ne
53a5 : f003            >        beq skip2232
                       >        trap            ;failed not equal (non zero)
53a7 : 200461          >        jsr report_error
                       >
53aa :                 >skip2232
                        
53aa : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
53ab : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
53ad : cd1532                   cmp fLDx    ;test flags
                                trap_ne
53b0 : f003            >        beq skip2235
                       >        trap            ;failed not equal (non zero)
53b2 : 200461          >        jsr report_error
                       >
53b5 :                 >skip2235
                        
                                set_stat $ff
                       >            load_flag $ff
53b5 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
53b7 : 48              >            pha         ;use stack to load status
53b8 : 28              >            plp
                        
53b9 : b26c                     lda (ind1+2)
53bb : 08                       php         ;test stores do not alter flags
53bc : 49c3                     eor #$c3
53be : 28                       plp
53bf : 9278                     sta (indt+2)
53c1 : 08                       php         ;flags after load/store sequence
53c2 : 49c3                     eor #$c3
53c4 : c982                     cmp #$82    ;test result
                                trap_ne
53c6 : f003            >        beq skip2239
                       >        trap            ;failed not equal (non zero)
53c8 : 200461          >        jsr report_error
                       >
53cb :                 >skip2239
                        
53cb : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
53cc : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
53ce : cd1632                   cmp fLDx+1  ;test flags
                                trap_ne
53d1 : f003            >        beq skip2242
                       >        trap            ;failed not equal (non zero)
53d3 : 200461          >        jsr report_error
                       >
53d6 :                 >skip2242
                        
                                set_stat $ff
                       >            load_flag $ff
53d6 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
53d8 : 48              >            pha         ;use stack to load status
53d9 : 28              >            plp
                        
53da : b26e                     lda (ind1+4)
53dc : 08                       php         ;test stores do not alter flags
53dd : 49c3                     eor #$c3
53df : 28                       plp
53e0 : 927a                     sta (indt+4)
53e2 : 08                       php         ;flags after load/store sequence
53e3 : 49c3                     eor #$c3
53e5 : c941                     cmp #$41    ;test result
                                trap_ne
53e7 : f003            >        beq skip2246
                       >        trap            ;failed not equal (non zero)
53e9 : 200461          >        jsr report_error
                       >
53ec :                 >skip2246
                        
53ec : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
53ed : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
53ef : cd1732                   cmp fLDx+2  ;test flags
                                trap_ne
53f2 : f003            >        beq skip2249
                       >        trap            ;failed not equal (non zero)
53f4 : 200461          >        jsr report_error
                       >
53f7 :                 >skip2249
                        
                                set_stat $ff
                       >            load_flag $ff
53f7 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
53f9 : 48              >            pha         ;use stack to load status
53fa : 28              >            plp
                        
53fb : b270                     lda (ind1+6)
53fd : 08                       php         ;test stores do not alter flags
53fe : 49c3                     eor #$c3
5400 : 28                       plp
5401 : 927c                     sta (indt+6)
5403 : 08                       php         ;flags after load/store sequence
5404 : 49c3                     eor #$c3
5406 : c900                     cmp #0      ;test result
                                trap_ne
5408 : f003            >        beq skip2253
                       >        trap            ;failed not equal (non zero)
540a : 200461          >        jsr report_error
                       >
540d :                 >skip2253
                        
540d : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
540e : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
5410 : cd1832                   cmp fLDx+3  ;test flags
                                trap_ne
5413 : f003            >        beq skip2256
                       >        trap            ;failed not equal (non zero)
5415 : 200461          >        jsr report_error
                       >
5418 :                 >skip2256
                        
5418 : e099                     cpx #$99
                                trap_ne     ;x altered during test
541a : f003            >        beq skip2258
                       >        trap            ;failed not equal (non zero)
541c : 200461          >        jsr report_error
                       >
541f :                 >skip2258
                        
541f : c066                     cpy #$66
                                trap_ne     ;y altered during test
5421 : f003            >        beq skip2260
                       >        trap            ;failed not equal (non zero)
5423 : 200461          >        jsr report_error
                       >
5426 :                 >skip2260
                        
                        
5426 : a003                     ldy #3      ;testing store result
5428 : a200                     ldx #0
542a : b90532           tstai2  lda abst,y
542d : 49c3                     eor #$c3
542f : d91032                   cmp abs1,y
                                trap_ne     ;store to indirect data
5432 : f003            >        beq skip2262
                       >        trap            ;failed not equal (non zero)
5434 : 200461          >        jsr report_error
                       >
5437 :                 >skip2262
                        
5437 : 8a                       txa
5438 : 990532                   sta abst,y  ;clear                
543b : 88                       dey
543c : 10ec                     bpl tstai2
543e : ba                       tsx
543f : e0ff                     cpx #$ff
                                trap_ne     ;sp push/pop mismatch
5441 : f003            >        beq skip2264
                       >        trap            ;failed not equal (non zero)
5443 : 200461          >        jsr report_error
                       >
5446 :                 >skip2264
                        
                                next_test
5446 : ad0232          >            lda test_case   ;previous test
5449 : c90a            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
544b : f003            >        beq skip2267
                       >        trap            ;failed not equal (non zero)
544d : 200461          >        jsr report_error
                       >
5450 :                 >skip2267
                       >
000b =                 >test_num = test_num + 1
5450 : a90b            >            lda #test_num   ;*** next tests' number
5452 : 8d0232          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; testing STZ - zp / abs / zp,x / abs,x
5455 : a07b                     ldy #123    ;protect y
5457 : a204                     ldx #4      ;precharge test area
5459 : a907                     lda #7
545b : 9552             tstz1   sta zpt,x
545d : 0a                       asl a
545e : ca                       dex
545f : 10fa                     bpl tstz1
5461 : a204                     ldx #4
                                set_a $55,$ff
                       >            load_flag $ff
5463 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
5465 : 48              >            pha         ;use stack to load status
5466 : a955            >            lda #$55     ;precharge accu
5468 : 28              >            plp
                        
5469 : 6452                     stz zpt     
546b : 6453                     stz zpt+1
546d : 6454                     stz zpt+2
546f : 6455                     stz zpt+3
5471 : 6456                     stz zpt+4
                                tst_a $55,$ff
5473 : 08              >            php         ;save flags
5474 : c955            >            cmp #$55     ;test result
                       >            trap_ne
5476 : f003            >        beq skip2272
                       >        trap            ;failed not equal (non zero)
5478 : 200461          >        jsr report_error
                       >
547b :                 >skip2272
                       >
547b : 68              >            pla         ;load status
547c : 48              >            pha
                       >            cmp_flag $ff
547d : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
547f : f003            >        beq skip2275
                       >        trap            ;failed not equal (non zero)
5481 : 200461          >        jsr report_error
                       >
5484 :                 >skip2275
                       >
5484 : 28              >            plp         ;restore status
                        
5485 : b552             tstz2   lda zpt,x   ;verify zeros stored
                                trap_ne     ;non zero after STZ zp
5487 : f003            >        beq skip2277
                       >        trap            ;failed not equal (non zero)
5489 : 200461          >        jsr report_error
                       >
548c :                 >skip2277
                        
548c : ca                       dex
548d : 10f6                     bpl tstz2
548f : a204                     ldx #4      ;precharge test area
5491 : a907                     lda #7
5493 : 9552             tstz3   sta zpt,x
5495 : 0a                       asl a
5496 : ca                       dex
5497 : 10fa                     bpl tstz3
5499 : a204                     ldx #4
                                set_a $aa,0
                       >            load_flag 0
549b : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
549d : 48              >            pha         ;use stack to load status
549e : a9aa            >            lda #$aa     ;precharge accu
54a0 : 28              >            plp
                        
54a1 : 6452                     stz zpt     
54a3 : 6453                     stz zpt+1
54a5 : 6454                     stz zpt+2
54a7 : 6455                     stz zpt+3
54a9 : 6456                     stz zpt+4
                                tst_a $aa,0
54ab : 08              >            php         ;save flags
54ac : c9aa            >            cmp #$aa     ;test result
                       >            trap_ne
54ae : f003            >        beq skip2282
                       >        trap            ;failed not equal (non zero)
54b0 : 200461          >        jsr report_error
                       >
54b3 :                 >skip2282
                       >
54b3 : 68              >            pla         ;load status
54b4 : 48              >            pha
                       >            cmp_flag 0
54b5 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
54b7 : f003            >        beq skip2285
                       >        trap            ;failed not equal (non zero)
54b9 : 200461          >        jsr report_error
                       >
54bc :                 >skip2285
                       >
54bc : 28              >            plp         ;restore status
                        
54bd : b552             tstz4   lda zpt,x   ;verify zeros stored
                                trap_ne     ;non zero after STZ zp
54bf : f003            >        beq skip2287
                       >        trap            ;failed not equal (non zero)
54c1 : 200461          >        jsr report_error
                       >
54c4 :                 >skip2287
                        
54c4 : ca                       dex
54c5 : 10f6                     bpl tstz4
                                
54c7 : a204                     ldx #4      ;precharge test area
54c9 : a907                     lda #7
54cb : 9d0532           tstz5   sta abst,x
54ce : 0a                       asl a
54cf : ca                       dex
54d0 : 10f9                     bpl tstz5
54d2 : a204                     ldx #4
                                set_a $55,$ff
                       >            load_flag $ff
54d4 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
54d6 : 48              >            pha         ;use stack to load status
54d7 : a955            >            lda #$55     ;precharge accu
54d9 : 28              >            plp
                        
54da : 9c0532                   stz abst     
54dd : 9c0632                   stz abst+1
54e0 : 9c0732                   stz abst+2
54e3 : 9c0832                   stz abst+3
54e6 : 9c0932                   stz abst+4
                                tst_a $55,$ff
54e9 : 08              >            php         ;save flags
54ea : c955            >            cmp #$55     ;test result
                       >            trap_ne
54ec : f003            >        beq skip2292
                       >        trap            ;failed not equal (non zero)
54ee : 200461          >        jsr report_error
                       >
54f1 :                 >skip2292
                       >
54f1 : 68              >            pla         ;load status
54f2 : 48              >            pha
                       >            cmp_flag $ff
54f3 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
54f5 : f003            >        beq skip2295
                       >        trap            ;failed not equal (non zero)
54f7 : 200461          >        jsr report_error
                       >
54fa :                 >skip2295
                       >
54fa : 28              >            plp         ;restore status
                        
54fb : bd0532           tstz6   lda abst,x   ;verify zeros stored
                                trap_ne     ;non zero after STZ abs
54fe : f003            >        beq skip2297
                       >        trap            ;failed not equal (non zero)
5500 : 200461          >        jsr report_error
                       >
5503 :                 >skip2297
                        
5503 : ca                       dex
5504 : 10f5                     bpl tstz6
5506 : a204                     ldx #4      ;precharge test area
5508 : a907                     lda #7
550a : 9d0532           tstz7   sta abst,x
550d : 0a                       asl a
550e : ca                       dex
550f : 10f9                     bpl tstz7
5511 : a204                     ldx #4
                                set_a $aa,0
                       >            load_flag 0
5513 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
5515 : 48              >            pha         ;use stack to load status
5516 : a9aa            >            lda #$aa     ;precharge accu
5518 : 28              >            plp
                        
5519 : 9c0532                   stz abst     
551c : 9c0632                   stz abst+1
551f : 9c0732                   stz abst+2
5522 : 9c0832                   stz abst+3
5525 : 9c0932                   stz abst+4
                                tst_a $aa,0
5528 : 08              >            php         ;save flags
5529 : c9aa            >            cmp #$aa     ;test result
                       >            trap_ne
552b : f003            >        beq skip2302
                       >        trap            ;failed not equal (non zero)
552d : 200461          >        jsr report_error
                       >
5530 :                 >skip2302
                       >
5530 : 68              >            pla         ;load status
5531 : 48              >            pha
                       >            cmp_flag 0
5532 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
5534 : f003            >        beq skip2305
                       >        trap            ;failed not equal (non zero)
5536 : 200461          >        jsr report_error
                       >
5539 :                 >skip2305
                       >
5539 : 28              >            plp         ;restore status
                        
553a : bd0532           tstz8   lda abst,x   ;verify zeros stored
                                trap_ne     ;non zero after STZ abs
553d : f003            >        beq skip2307
                       >        trap            ;failed not equal (non zero)
553f : 200461          >        jsr report_error
                       >
5542 :                 >skip2307
                        
5542 : ca                       dex
5543 : 10f5                     bpl tstz8
                                
5545 : a204                     ldx #4      ;precharge test area
5547 : a907                     lda #7
5549 : 9552             tstz11  sta zpt,x
554b : 0a                       asl a
554c : ca                       dex
554d : 10fa                     bpl tstz11
554f : a204                     ldx #4
5551 :                  tstz15
                                set_a $55,$ff
                       >            load_flag $ff
5551 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
5553 : 48              >            pha         ;use stack to load status
5554 : a955            >            lda #$55     ;precharge accu
5556 : 28              >            plp
                        
5557 : 7452                     stz zpt,x     
                                tst_a $55,$ff
5559 : 08              >            php         ;save flags
555a : c955            >            cmp #$55     ;test result
                       >            trap_ne
555c : f003            >        beq skip2312
                       >        trap            ;failed not equal (non zero)
555e : 200461          >        jsr report_error
                       >
5561 :                 >skip2312
                       >
5561 : 68              >            pla         ;load status
5562 : 48              >            pha
                       >            cmp_flag $ff
5563 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
5565 : f003            >        beq skip2315
                       >        trap            ;failed not equal (non zero)
5567 : 200461          >        jsr report_error
                       >
556a :                 >skip2315
                       >
556a : 28              >            plp         ;restore status
                        
556b : ca                       dex
556c : 10e3                     bpl tstz15
556e : a204                     ldx #4
5570 : b552             tstz12  lda zpt,x   ;verify zeros stored
                                trap_ne     ;non zero after STZ zp
5572 : f003            >        beq skip2317
                       >        trap            ;failed not equal (non zero)
5574 : 200461          >        jsr report_error
                       >
5577 :                 >skip2317
                        
5577 : ca                       dex
5578 : 10f6                     bpl tstz12
557a : a204                     ldx #4      ;precharge test area
557c : a907                     lda #7
557e : 9552             tstz13  sta zpt,x
5580 : 0a                       asl a
5581 : ca                       dex
5582 : 10fa                     bpl tstz13
5584 : a204                     ldx #4
5586 :                  tstz16
                                set_a $aa,0
                       >            load_flag 0
5586 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
5588 : 48              >            pha         ;use stack to load status
5589 : a9aa            >            lda #$aa     ;precharge accu
558b : 28              >            plp
                        
558c : 7452                     stz zpt,x
                                tst_a $aa,0
558e : 08              >            php         ;save flags
558f : c9aa            >            cmp #$aa     ;test result
                       >            trap_ne
5591 : f003            >        beq skip2322
                       >        trap            ;failed not equal (non zero)
5593 : 200461          >        jsr report_error
                       >
5596 :                 >skip2322
                       >
5596 : 68              >            pla         ;load status
5597 : 48              >            pha
                       >            cmp_flag 0
5598 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
559a : f003            >        beq skip2325
                       >        trap            ;failed not equal (non zero)
559c : 200461          >        jsr report_error
                       >
559f :                 >skip2325
                       >
559f : 28              >            plp         ;restore status
                        
55a0 : ca                       dex
55a1 : 10e3                     bpl tstz16
55a3 : a204                     ldx #4
55a5 : b552             tstz14  lda zpt,x   ;verify zeros stored
                                trap_ne     ;non zero after STZ zp
55a7 : f003            >        beq skip2327
                       >        trap            ;failed not equal (non zero)
55a9 : 200461          >        jsr report_error
                       >
55ac :                 >skip2327
                        
55ac : ca                       dex
55ad : 10f6                     bpl tstz14
                                
55af : a204                     ldx #4      ;precharge test area
55b1 : a907                     lda #7
55b3 : 9d0532           tstz21  sta abst,x
55b6 : 0a                       asl a
55b7 : ca                       dex
55b8 : 10f9                     bpl tstz21
55ba : a204                     ldx #4
55bc :                  tstz25
                                set_a $55,$ff
                       >            load_flag $ff
55bc : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
55be : 48              >            pha         ;use stack to load status
55bf : a955            >            lda #$55     ;precharge accu
55c1 : 28              >            plp
                        
55c2 : 9e0532                   stz abst,x     
                                tst_a $55,$ff
55c5 : 08              >            php         ;save flags
55c6 : c955            >            cmp #$55     ;test result
                       >            trap_ne
55c8 : f003            >        beq skip2332
                       >        trap            ;failed not equal (non zero)
55ca : 200461          >        jsr report_error
                       >
55cd :                 >skip2332
                       >
55cd : 68              >            pla         ;load status
55ce : 48              >            pha
                       >            cmp_flag $ff
55cf : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
55d1 : f003            >        beq skip2335
                       >        trap            ;failed not equal (non zero)
55d3 : 200461          >        jsr report_error
                       >
55d6 :                 >skip2335
                       >
55d6 : 28              >            plp         ;restore status
                        
55d7 : ca                       dex
55d8 : 10e2                     bpl tstz25
55da : a204                     ldx #4
55dc : bd0532           tstz22  lda abst,x   ;verify zeros stored
                                trap_ne     ;non zero after STZ zp
55df : f003            >        beq skip2337
                       >        trap            ;failed not equal (non zero)
55e1 : 200461          >        jsr report_error
                       >
55e4 :                 >skip2337
                        
55e4 : ca                       dex
55e5 : 10f5                     bpl tstz22
55e7 : a204                     ldx #4      ;precharge test area
55e9 : a907                     lda #7
55eb : 9d0532           tstz23  sta abst,x
55ee : 0a                       asl a
55ef : ca                       dex
55f0 : 10f9                     bpl tstz23
55f2 : a204                     ldx #4
55f4 :                  tstz26
                                set_a $aa,0
                       >            load_flag 0
55f4 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
55f6 : 48              >            pha         ;use stack to load status
55f7 : a9aa            >            lda #$aa     ;precharge accu
55f9 : 28              >            plp
                        
55fa : 9e0532                   stz abst,x
                                tst_a $aa,0
55fd : 08              >            php         ;save flags
55fe : c9aa            >            cmp #$aa     ;test result
                       >            trap_ne
5600 : f003            >        beq skip2342
                       >        trap            ;failed not equal (non zero)
5602 : 200461          >        jsr report_error
                       >
5605 :                 >skip2342
                       >
5605 : 68              >            pla         ;load status
5606 : 48              >            pha
                       >            cmp_flag 0
5607 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
5609 : f003            >        beq skip2345
                       >        trap            ;failed not equal (non zero)
560b : 200461          >        jsr report_error
                       >
560e :                 >skip2345
                       >
560e : 28              >            plp         ;restore status
                        
560f : ca                       dex
5610 : 10e2                     bpl tstz26
5612 : a204                     ldx #4
5614 : bd0532           tstz24  lda abst,x   ;verify zeros stored
                                trap_ne     ;non zero after STZ zp
5617 : f003            >        beq skip2347
                       >        trap            ;failed not equal (non zero)
5619 : 200461          >        jsr report_error
                       >
561c :                 >skip2347
                        
561c : ca                       dex
561d : 10f5                     bpl tstz24
                                
561f : c07b                     cpy #123
                                trap_ne     ;y altered during test 
5621 : f003            >        beq skip2349
                       >        trap            ;failed not equal (non zero)
5623 : 200461          >        jsr report_error
                       >
5626 :                 >skip2349
                        
5626 : ba                       tsx
5627 : e0ff                     cpx #$ff
                                trap_ne     ;sp push/pop mismatch
5629 : f003            >        beq skip2351
                       >        trap            ;failed not equal (non zero)
562b : 200461          >        jsr report_error
                       >
562e :                 >skip2351
                        
                                next_test
562e : ad0232          >            lda test_case   ;previous test
5631 : c90b            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
5633 : f003            >        beq skip2354
                       >        trap            ;failed not equal (non zero)
5635 : 200461          >        jsr report_error
                       >
5638 :                 >skip2354
                       >
000c =                 >test_num = test_num + 1
5638 : a90c            >            lda #test_num   ;*** next tests' number
563a : 8d0232          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; testing BIT - zp,x / abs,x / #
563d : a042                     ldy #$42
563f : a203                     ldx #3
                                set_a $ff,0
                       >            load_flag 0
5641 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
5643 : 48              >            pha         ;use stack to load status
5644 : a9ff            >            lda #$ff     ;precharge accu
5646 : 28              >            plp
                        
5647 : 3459                     bit zp1,x   ;00 - should set Z / clear  NV
                                tst_a $ff,fz 
5649 : 08              >            php         ;save flags
564a : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
564c : f003            >        beq skip2359
                       >        trap            ;failed not equal (non zero)
564e : 200461          >        jsr report_error
                       >
5651 :                 >skip2359
                       >
5651 : 68              >            pla         ;load status
5652 : 48              >            pha
                       >            cmp_flag fz 
5653 : c932            >            cmp #(fz |fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
5655 : f003            >        beq skip2362
                       >        trap            ;failed not equal (non zero)
5657 : 200461          >        jsr report_error
                       >
565a :                 >skip2362
                       >
565a : 28              >            plp         ;restore status
                        
565b : ca                       dex
                                set_a 1,0
                       >            load_flag 0
565c : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
565e : 48              >            pha         ;use stack to load status
565f : a901            >            lda #1     ;precharge accu
5661 : 28              >            plp
                        
5662 : 3459                     bit zp1,x   ;41 - should set V (M6) / clear NZ
                                tst_a 1,fv
5664 : 08              >            php         ;save flags
5665 : c901            >            cmp #1     ;test result
                       >            trap_ne
5667 : f003            >        beq skip2367
                       >        trap            ;failed not equal (non zero)
5669 : 200461          >        jsr report_error
                       >
566c :                 >skip2367
                       >
566c : 68              >            pla         ;load status
566d : 48              >            pha
                       >            cmp_flag fv
566e : c970            >            cmp #(fv|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
5670 : f003            >        beq skip2370
                       >        trap            ;failed not equal (non zero)
5672 : 200461          >        jsr report_error
                       >
5675 :                 >skip2370
                       >
5675 : 28              >            plp         ;restore status
                        
5676 : ca                       dex
                                set_a 1,0
                       >            load_flag 0
5677 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
5679 : 48              >            pha         ;use stack to load status
567a : a901            >            lda #1     ;precharge accu
567c : 28              >            plp
                        
567d : 3459                     bit zp1,x   ;82 - should set N (M7) & Z / clear V
                                tst_a 1,fnz
567f : 08              >            php         ;save flags
5680 : c901            >            cmp #1     ;test result
                       >            trap_ne
5682 : f003            >        beq skip2375
                       >        trap            ;failed not equal (non zero)
5684 : 200461          >        jsr report_error
                       >
5687 :                 >skip2375
                       >
5687 : 68              >            pla         ;load status
5688 : 48              >            pha
                       >            cmp_flag fnz
5689 : c9b2            >            cmp #(fnz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
568b : f003            >        beq skip2378
                       >        trap            ;failed not equal (non zero)
568d : 200461          >        jsr report_error
                       >
5690 :                 >skip2378
                       >
5690 : 28              >            plp         ;restore status
                        
5691 : ca                       dex
                                set_a 1,0
                       >            load_flag 0
5692 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
5694 : 48              >            pha         ;use stack to load status
5695 : a901            >            lda #1     ;precharge accu
5697 : 28              >            plp
                        
5698 : 3459                     bit zp1,x   ;c3 - should set N (M7) & V (M6) / clear Z
                                tst_a 1,fnv
569a : 08              >            php         ;save flags
569b : c901            >            cmp #1     ;test result
                       >            trap_ne
569d : f003            >        beq skip2383
                       >        trap            ;failed not equal (non zero)
569f : 200461          >        jsr report_error
                       >
56a2 :                 >skip2383
                       >
56a2 : 68              >            pla         ;load status
56a3 : 48              >            pha
                       >            cmp_flag fnv
56a4 : c9f0            >            cmp #(fnv|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
56a6 : f003            >        beq skip2386
                       >        trap            ;failed not equal (non zero)
56a8 : 200461          >        jsr report_error
                       >
56ab :                 >skip2386
                       >
56ab : 28              >            plp         ;restore status
                        
                                
                                set_a 1,$ff
                       >            load_flag $ff
56ac : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
56ae : 48              >            pha         ;use stack to load status
56af : a901            >            lda #1     ;precharge accu
56b1 : 28              >            plp
                        
56b2 : 3459                     bit zp1,x   ;c3 - should set N (M7) & V (M6) / clear Z
                                tst_a 1,~fz
56b4 : 08              >            php         ;save flags
56b5 : c901            >            cmp #1     ;test result
                       >            trap_ne
56b7 : f003            >        beq skip2391
                       >        trap            ;failed not equal (non zero)
56b9 : 200461          >        jsr report_error
                       >
56bc :                 >skip2391
                       >
56bc : 68              >            pla         ;load status
56bd : 48              >            pha
                       >            cmp_flag ~fz
56be : c9fd            >            cmp #(~fz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
56c0 : f003            >        beq skip2394
                       >        trap            ;failed not equal (non zero)
56c2 : 200461          >        jsr report_error
                       >
56c5 :                 >skip2394
                       >
56c5 : 28              >            plp         ;restore status
                        
56c6 : e8                       inx
                                set_a 1,$ff
                       >            load_flag $ff
56c7 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
56c9 : 48              >            pha         ;use stack to load status
56ca : a901            >            lda #1     ;precharge accu
56cc : 28              >            plp
                        
56cd : 3459                     bit zp1,x   ;82 - should set N (M7) & Z / clear V
                                tst_a 1,~fv
56cf : 08              >            php         ;save flags
56d0 : c901            >            cmp #1     ;test result
                       >            trap_ne
56d2 : f003            >        beq skip2399
                       >        trap            ;failed not equal (non zero)
56d4 : 200461          >        jsr report_error
                       >
56d7 :                 >skip2399
                       >
56d7 : 68              >            pla         ;load status
56d8 : 48              >            pha
                       >            cmp_flag ~fv
56d9 : c9bf            >            cmp #(~fv|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
56db : f003            >        beq skip2402
                       >        trap            ;failed not equal (non zero)
56dd : 200461          >        jsr report_error
                       >
56e0 :                 >skip2402
                       >
56e0 : 28              >            plp         ;restore status
                        
56e1 : e8                       inx
                                set_a 1,$ff
                       >            load_flag $ff
56e2 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
56e4 : 48              >            pha         ;use stack to load status
56e5 : a901            >            lda #1     ;precharge accu
56e7 : 28              >            plp
                        
56e8 : 3459                     bit zp1,x   ;41 - should set V (M6) / clear NZ
                                tst_a 1,~fnz
56ea : 08              >            php         ;save flags
56eb : c901            >            cmp #1     ;test result
                       >            trap_ne
56ed : f003            >        beq skip2407
                       >        trap            ;failed not equal (non zero)
56ef : 200461          >        jsr report_error
                       >
56f2 :                 >skip2407
                       >
56f2 : 68              >            pla         ;load status
56f3 : 48              >            pha
                       >            cmp_flag ~fnz
56f4 : c97d            >            cmp #(~fnz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
56f6 : f003            >        beq skip2410
                       >        trap            ;failed not equal (non zero)
56f8 : 200461          >        jsr report_error
                       >
56fb :                 >skip2410
                       >
56fb : 28              >            plp         ;restore status
                        
56fc : e8                       inx
                                set_a $ff,$ff
                       >            load_flag $ff
56fd : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
56ff : 48              >            pha         ;use stack to load status
5700 : a9ff            >            lda #$ff     ;precharge accu
5702 : 28              >            plp
                        
5703 : 3459                     bit zp1,x   ;00 - should set Z / clear  NV
                                tst_a $ff,~fnv 
5705 : 08              >            php         ;save flags
5706 : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
5708 : f003            >        beq skip2415
                       >        trap            ;failed not equal (non zero)
570a : 200461          >        jsr report_error
                       >
570d :                 >skip2415
                       >
570d : 68              >            pla         ;load status
570e : 48              >            pha
                       >            cmp_flag ~fnv 
570f : c93f            >            cmp #(~fnv |fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
5711 : f003            >        beq skip2418
                       >        trap            ;failed not equal (non zero)
5713 : 200461          >        jsr report_error
                       >
5716 :                 >skip2418
                       >
5716 : 28              >            plp         ;restore status
                        
                                
                                set_a $ff,0
                       >            load_flag 0
5717 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
5719 : 48              >            pha         ;use stack to load status
571a : a9ff            >            lda #$ff     ;precharge accu
571c : 28              >            plp
                        
571d : 3c1032                   bit abs1,x  ;00 - should set Z / clear  NV
                                tst_a $ff,fz 
5720 : 08              >            php         ;save flags
5721 : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
5723 : f003            >        beq skip2423
                       >        trap            ;failed not equal (non zero)
5725 : 200461          >        jsr report_error
                       >
5728 :                 >skip2423
                       >
5728 : 68              >            pla         ;load status
5729 : 48              >            pha
                       >            cmp_flag fz 
572a : c932            >            cmp #(fz |fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
572c : f003            >        beq skip2426
                       >        trap            ;failed not equal (non zero)
572e : 200461          >        jsr report_error
                       >
5731 :                 >skip2426
                       >
5731 : 28              >            plp         ;restore status
                        
5732 : ca                       dex
                                set_a 1,0
                       >            load_flag 0
5733 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
5735 : 48              >            pha         ;use stack to load status
5736 : a901            >            lda #1     ;precharge accu
5738 : 28              >            plp
                        
5739 : 3c1032                   bit abs1,x  ;41 - should set V (M6) / clear NZ
                                tst_a 1,fv
573c : 08              >            php         ;save flags
573d : c901            >            cmp #1     ;test result
                       >            trap_ne
573f : f003            >        beq skip2431
                       >        trap            ;failed not equal (non zero)
5741 : 200461          >        jsr report_error
                       >
5744 :                 >skip2431
                       >
5744 : 68              >            pla         ;load status
5745 : 48              >            pha
                       >            cmp_flag fv
5746 : c970            >            cmp #(fv|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
5748 : f003            >        beq skip2434
                       >        trap            ;failed not equal (non zero)
574a : 200461          >        jsr report_error
                       >
574d :                 >skip2434
                       >
574d : 28              >            plp         ;restore status
                        
574e : ca                       dex
                                set_a 1,0
                       >            load_flag 0
574f : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
5751 : 48              >            pha         ;use stack to load status
5752 : a901            >            lda #1     ;precharge accu
5754 : 28              >            plp
                        
5755 : 3c1032                   bit abs1,x  ;82 - should set N (M7) & Z / clear V
                                tst_a 1,fnz
5758 : 08              >            php         ;save flags
5759 : c901            >            cmp #1     ;test result
                       >            trap_ne
575b : f003            >        beq skip2439
                       >        trap            ;failed not equal (non zero)
575d : 200461          >        jsr report_error
                       >
5760 :                 >skip2439
                       >
5760 : 68              >            pla         ;load status
5761 : 48              >            pha
                       >            cmp_flag fnz
5762 : c9b2            >            cmp #(fnz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
5764 : f003            >        beq skip2442
                       >        trap            ;failed not equal (non zero)
5766 : 200461          >        jsr report_error
                       >
5769 :                 >skip2442
                       >
5769 : 28              >            plp         ;restore status
                        
576a : ca                       dex
                                set_a 1,0
                       >            load_flag 0
576b : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
576d : 48              >            pha         ;use stack to load status
576e : a901            >            lda #1     ;precharge accu
5770 : 28              >            plp
                        
5771 : 3c1032                   bit abs1,x  ;c3 - should set N (M7) & V (M6) / clear Z
                                tst_a 1,fnv
5774 : 08              >            php         ;save flags
5775 : c901            >            cmp #1     ;test result
                       >            trap_ne
5777 : f003            >        beq skip2447
                       >        trap            ;failed not equal (non zero)
5779 : 200461          >        jsr report_error
                       >
577c :                 >skip2447
                       >
577c : 68              >            pla         ;load status
577d : 48              >            pha
                       >            cmp_flag fnv
577e : c9f0            >            cmp #(fnv|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
5780 : f003            >        beq skip2450
                       >        trap            ;failed not equal (non zero)
5782 : 200461          >        jsr report_error
                       >
5785 :                 >skip2450
                       >
5785 : 28              >            plp         ;restore status
                        
                                
                                set_a 1,$ff
                       >            load_flag $ff
5786 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
5788 : 48              >            pha         ;use stack to load status
5789 : a901            >            lda #1     ;precharge accu
578b : 28              >            plp
                        
578c : 3c1032                   bit abs1,x  ;c3 - should set N (M7) & V (M6) / clear Z
                                tst_a 1,~fz
578f : 08              >            php         ;save flags
5790 : c901            >            cmp #1     ;test result
                       >            trap_ne
5792 : f003            >        beq skip2455
                       >        trap            ;failed not equal (non zero)
5794 : 200461          >        jsr report_error
                       >
5797 :                 >skip2455
                       >
5797 : 68              >            pla         ;load status
5798 : 48              >            pha
                       >            cmp_flag ~fz
5799 : c9fd            >            cmp #(~fz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
579b : f003            >        beq skip2458
                       >        trap            ;failed not equal (non zero)
579d : 200461          >        jsr report_error
                       >
57a0 :                 >skip2458
                       >
57a0 : 28              >            plp         ;restore status
                        
57a1 : e8                       inx
                                set_a 1,$ff
                       >            load_flag $ff
57a2 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
57a4 : 48              >            pha         ;use stack to load status
57a5 : a901            >            lda #1     ;precharge accu
57a7 : 28              >            plp
                        
57a8 : 3c1032                   bit abs1,x  ;82 - should set N (M7) & Z / clear V
                                tst_a 1,~fv
57ab : 08              >            php         ;save flags
57ac : c901            >            cmp #1     ;test result
                       >            trap_ne
57ae : f003            >        beq skip2463
                       >        trap            ;failed not equal (non zero)
57b0 : 200461          >        jsr report_error
                       >
57b3 :                 >skip2463
                       >
57b3 : 68              >            pla         ;load status
57b4 : 48              >            pha
                       >            cmp_flag ~fv
57b5 : c9bf            >            cmp #(~fv|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
57b7 : f003            >        beq skip2466
                       >        trap            ;failed not equal (non zero)
57b9 : 200461          >        jsr report_error
                       >
57bc :                 >skip2466
                       >
57bc : 28              >            plp         ;restore status
                        
57bd : e8                       inx
                                set_a 1,$ff
                       >            load_flag $ff
57be : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
57c0 : 48              >            pha         ;use stack to load status
57c1 : a901            >            lda #1     ;precharge accu
57c3 : 28              >            plp
                        
57c4 : 3c1032                   bit abs1,x  ;41 - should set V (M6) / clear NZ
                                tst_a 1,~fnz
57c7 : 08              >            php         ;save flags
57c8 : c901            >            cmp #1     ;test result
                       >            trap_ne
57ca : f003            >        beq skip2471
                       >        trap            ;failed not equal (non zero)
57cc : 200461          >        jsr report_error
                       >
57cf :                 >skip2471
                       >
57cf : 68              >            pla         ;load status
57d0 : 48              >            pha
                       >            cmp_flag ~fnz
57d1 : c97d            >            cmp #(~fnz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
57d3 : f003            >        beq skip2474
                       >        trap            ;failed not equal (non zero)
57d5 : 200461          >        jsr report_error
                       >
57d8 :                 >skip2474
                       >
57d8 : 28              >            plp         ;restore status
                        
57d9 : e8                       inx
                                set_a $ff,$ff
                       >            load_flag $ff
57da : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
57dc : 48              >            pha         ;use stack to load status
57dd : a9ff            >            lda #$ff     ;precharge accu
57df : 28              >            plp
                        
57e0 : 3c1032                   bit abs1,x  ;00 - should set Z / clear  NV
                                tst_a $ff,~fnv 
57e3 : 08              >            php         ;save flags
57e4 : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
57e6 : f003            >        beq skip2479
                       >        trap            ;failed not equal (non zero)
57e8 : 200461          >        jsr report_error
                       >
57eb :                 >skip2479
                       >
57eb : 68              >            pla         ;load status
57ec : 48              >            pha
                       >            cmp_flag ~fnv 
57ed : c93f            >            cmp #(~fnv |fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
57ef : f003            >        beq skip2482
                       >        trap            ;failed not equal (non zero)
57f1 : 200461          >        jsr report_error
                       >
57f4 :                 >skip2482
                       >
57f4 : 28              >            plp         ;restore status
                        
                                
                                set_a $ff,0
                       >            load_flag 0
57f5 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
57f7 : 48              >            pha         ;use stack to load status
57f8 : a9ff            >            lda #$ff     ;precharge accu
57fa : 28              >            plp
                        
57fb : 8900                     bit #$00    ;00 - should set Z
                                tst_a $ff,fz 
57fd : 08              >            php         ;save flags
57fe : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
5800 : f003            >        beq skip2487
                       >        trap            ;failed not equal (non zero)
5802 : 200461          >        jsr report_error
                       >
5805 :                 >skip2487
                       >
5805 : 68              >            pla         ;load status
5806 : 48              >            pha
                       >            cmp_flag fz 
5807 : c932            >            cmp #(fz |fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
5809 : f003            >        beq skip2490
                       >        trap            ;failed not equal (non zero)
580b : 200461          >        jsr report_error
                       >
580e :                 >skip2490
                       >
580e : 28              >            plp         ;restore status
                        
580f : ca                       dex
                                set_a 1,0
                       >            load_flag 0
5810 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
5812 : 48              >            pha         ;use stack to load status
5813 : a901            >            lda #1     ;precharge accu
5815 : 28              >            plp
                        
5816 : 8941                     bit #$41    ;41 - should clear Z
                                tst_a 1,0
5818 : 08              >            php         ;save flags
5819 : c901            >            cmp #1     ;test result
                       >            trap_ne
581b : f003            >        beq skip2495
                       >        trap            ;failed not equal (non zero)
581d : 200461          >        jsr report_error
                       >
5820 :                 >skip2495
                       >
5820 : 68              >            pla         ;load status
5821 : 48              >            pha
                       >            cmp_flag 0
5822 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
5824 : f003            >        beq skip2498
                       >        trap            ;failed not equal (non zero)
5826 : 200461          >        jsr report_error
                       >
5829 :                 >skip2498
                       >
5829 : 28              >            plp         ;restore status
                        
                        ; *** DEBUG INFO ***
                        ; if it fails the previous test and your BIT # has set the V flag
                        ; see http://forum.6502.org/viewtopic.php?f=2&t=2241&p=27243#p27239
                        ; why it shouldn't alter N or V flags on a BIT #
582a : ca                       dex
                                set_a 1,0
                       >            load_flag 0
582b : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
582d : 48              >            pha         ;use stack to load status
582e : a901            >            lda #1     ;precharge accu
5830 : 28              >            plp
                        
5831 : 8982                     bit #$82    ;82 - should set Z
                                tst_a 1,fz
5833 : 08              >            php         ;save flags
5834 : c901            >            cmp #1     ;test result
                       >            trap_ne
5836 : f003            >        beq skip2503
                       >        trap            ;failed not equal (non zero)
5838 : 200461          >        jsr report_error
                       >
583b :                 >skip2503
                       >
583b : 68              >            pla         ;load status
583c : 48              >            pha
                       >            cmp_flag fz
583d : c932            >            cmp #(fz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
583f : f003            >        beq skip2506
                       >        trap            ;failed not equal (non zero)
5841 : 200461          >        jsr report_error
                       >
5844 :                 >skip2506
                       >
5844 : 28              >            plp         ;restore status
                        
5845 : ca                       dex
                                set_a 1,0
                       >            load_flag 0
5846 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
5848 : 48              >            pha         ;use stack to load status
5849 : a901            >            lda #1     ;precharge accu
584b : 28              >            plp
                        
584c : 89c3                     bit #$c3    ;c3 - should clear Z
                                tst_a 1,0
584e : 08              >            php         ;save flags
584f : c901            >            cmp #1     ;test result
                       >            trap_ne
5851 : f003            >        beq skip2511
                       >        trap            ;failed not equal (non zero)
5853 : 200461          >        jsr report_error
                       >
5856 :                 >skip2511
                       >
5856 : 68              >            pla         ;load status
5857 : 48              >            pha
                       >            cmp_flag 0
5858 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
585a : f003            >        beq skip2514
                       >        trap            ;failed not equal (non zero)
585c : 200461          >        jsr report_error
                       >
585f :                 >skip2514
                       >
585f : 28              >            plp         ;restore status
                        
                                
                                set_a 1,$ff
                       >            load_flag $ff
5860 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
5862 : 48              >            pha         ;use stack to load status
5863 : a901            >            lda #1     ;precharge accu
5865 : 28              >            plp
                        
5866 : 89c3                     bit #$c3    ;c3 - clear Z
                                tst_a 1,~fz
5868 : 08              >            php         ;save flags
5869 : c901            >            cmp #1     ;test result
                       >            trap_ne
586b : f003            >        beq skip2519
                       >        trap            ;failed not equal (non zero)
586d : 200461          >        jsr report_error
                       >
5870 :                 >skip2519
                       >
5870 : 68              >            pla         ;load status
5871 : 48              >            pha
                       >            cmp_flag ~fz
5872 : c9fd            >            cmp #(~fz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
5874 : f003            >        beq skip2522
                       >        trap            ;failed not equal (non zero)
5876 : 200461          >        jsr report_error
                       >
5879 :                 >skip2522
                       >
5879 : 28              >            plp         ;restore status
                        
587a : e8                       inx
                                set_a 1,$ff
                       >            load_flag $ff
587b : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
587d : 48              >            pha         ;use stack to load status
587e : a901            >            lda #1     ;precharge accu
5880 : 28              >            plp
                        
5881 : 8982                     bit #$82    ;82 - should set Z
                                tst_a 1,$ff
5883 : 08              >            php         ;save flags
5884 : c901            >            cmp #1     ;test result
                       >            trap_ne
5886 : f003            >        beq skip2527
                       >        trap            ;failed not equal (non zero)
5888 : 200461          >        jsr report_error
                       >
588b :                 >skip2527
                       >
588b : 68              >            pla         ;load status
588c : 48              >            pha
                       >            cmp_flag $ff
588d : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
588f : f003            >        beq skip2530
                       >        trap            ;failed not equal (non zero)
5891 : 200461          >        jsr report_error
                       >
5894 :                 >skip2530
                       >
5894 : 28              >            plp         ;restore status
                        
5895 : e8                       inx
                                set_a 1,$ff
                       >            load_flag $ff
5896 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
5898 : 48              >            pha         ;use stack to load status
5899 : a901            >            lda #1     ;precharge accu
589b : 28              >            plp
                        
589c : 8941                     bit #$41    ;41 - should clear Z
                                tst_a 1,~fz
589e : 08              >            php         ;save flags
589f : c901            >            cmp #1     ;test result
                       >            trap_ne
58a1 : f003            >        beq skip2535
                       >        trap            ;failed not equal (non zero)
58a3 : 200461          >        jsr report_error
                       >
58a6 :                 >skip2535
                       >
58a6 : 68              >            pla         ;load status
58a7 : 48              >            pha
                       >            cmp_flag ~fz
58a8 : c9fd            >            cmp #(~fz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
58aa : f003            >        beq skip2538
                       >        trap            ;failed not equal (non zero)
58ac : 200461          >        jsr report_error
                       >
58af :                 >skip2538
                       >
58af : 28              >            plp         ;restore status
                        
58b0 : e8                       inx
                                set_a $ff,$ff
                       >            load_flag $ff
58b1 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
58b3 : 48              >            pha         ;use stack to load status
58b4 : a9ff            >            lda #$ff     ;precharge accu
58b6 : 28              >            plp
                        
58b7 : 8900                     bit #$00   ;00 - should set Z
                                tst_a $ff,$ff
58b9 : 08              >            php         ;save flags
58ba : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
58bc : f003            >        beq skip2543
                       >        trap            ;failed not equal (non zero)
58be : 200461          >        jsr report_error
                       >
58c1 :                 >skip2543
                       >
58c1 : 68              >            pla         ;load status
58c2 : 48              >            pha
                       >            cmp_flag $ff
58c3 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
58c5 : f003            >        beq skip2546
                       >        trap            ;failed not equal (non zero)
58c7 : 200461          >        jsr report_error
                       >
58ca :                 >skip2546
                       >
58ca : 28              >            plp         ;restore status
                        
                                
58cb : e003                     cpx #3
                                trap_ne     ;x altered during test
58cd : f003            >        beq skip2548
                       >        trap            ;failed not equal (non zero)
58cf : 200461          >        jsr report_error
                       >
58d2 :                 >skip2548
                        
58d2 : c042                     cpy #$42
                                trap_ne     ;y altered during test 
58d4 : f003            >        beq skip2550
                       >        trap            ;failed not equal (non zero)
58d6 : 200461          >        jsr report_error
                       >
58d9 :                 >skip2550
                        
58d9 : ba                       tsx
58da : e0ff                     cpx #$ff
                                trap_ne     ;sp push/pop mismatch
58dc : f003            >        beq skip2552
                       >        trap            ;failed not equal (non zero)
58de : 200461          >        jsr report_error
                       >
58e1 :                 >skip2552
                        
                                next_test
58e1 : ad0232          >            lda test_case   ;previous test
58e4 : c90c            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
58e6 : f003            >        beq skip2555
                       >        trap            ;failed not equal (non zero)
58e8 : 200461          >        jsr report_error
                       >
58eb :                 >skip2555
                       >
000d =                 >test_num = test_num + 1
58eb : a90d            >            lda #test_num   ;*** next tests' number
58ed : 8d0232          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; testing TRB, TSB - zp / abs
                        
                        trbt    macro       ;\1 = memory, \2 = flags   
                                sty \1
                                load_flag \2
                                pha
                                lda zpt+1
                                plp
                                trb \1
                                php
                                cmp zpt+1
                                trap_ne     ;accu was changed
                                pla
                                pha
                                ora #fz     ;mask Z
                                cmp_flag \2|fz
                                trap_ne     ;flags changed except Z
                                pla
                                and #fz
                                cmp zpt+2
                                trap_ne     ;Z flag invalid
                                lda zpt+3
                                cmp zpt
                                trap_ne     ;altered bits in memory wrong       
                                endm
                        
                        tsbt    macro       ;\1 = memory, \2 = flags   
                                sty \1
                                load_flag \2
                                pha
                                lda zpt+1
                                plp
                                tsb \1
                                php
                                cmp zpt+1
                                trap_ne     ;accu was changed
                                pla
                                pha
                                ora #fz     ;mask Z
                                cmp_flag \2|fz
                                trap_ne     ;flags changed except Z
                                pla
                                and #fz
                                cmp zpt+2
                                trap_ne     ;Z flag invalid
                                lda zpt+4
                                cmp zpt
                                trap_ne     ;altered bits in memory wrong        
                                endm
                        
58f0 : a2c0                     ldx #$c0
58f2 : a000                     ldy #0      ;op1 - memory save
                                ;   zpt     ;op1 - memory modifiable
58f4 : 6453                     stz zpt+1   ;op2 - accu
                                ;   zpt+2   ;and flags
                                ;   zpt+3   ;memory after reset
                                ;   zpt+4   ;memory after set
                                
58f6 : 98               tbt1    tya
58f7 : 2553                     and zpt+1   ;set Z by anding the 2 operands
58f9 : 08                       php
58fa : 68                       pla
58fb : 2902                     and #fz     ;mask Z
58fd : 8554                     sta zpt+2
58ff : 98                       tya         ;reset op1 bits by op2
5900 : 49ff                     eor #$ff
5902 : 0553                     ora zpt+1
5904 : 49ff                     eor #$ff
5906 : 8555                     sta zpt+3
5908 : 98                       tya         ;set op1 bits by op2
5909 : 0553                     ora zpt+1
590b : 8556                     sta zpt+4
                        
                                trbt zpt,$ff
590d : 8452            >        sty zpt
                       >        load_flag $ff
590f : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
5911 : 48              >        pha
5912 : a553            >        lda zpt+1
5914 : 28              >        plp
5915 : 1452            >        trb zpt
5917 : 08              >        php
5918 : c553            >        cmp zpt+1
                       >        trap_ne     ;accu was changed
591a : f003            >        beq skip2559
                       >        trap            ;failed not equal (non zero)
591c : 200461          >        jsr report_error
                       >
591f :                 >skip2559
                       >
591f : 68              >        pla
5920 : 48              >        pha
5921 : 0902            >        ora #fz     ;mask Z
                       >        cmp_flag $ff|fz
5923 : c9ff            >            cmp #($ff|fz|fao)&m8    ;expected flags + always on bits
                       >
                       >        trap_ne     ;flags changed except Z
5925 : f003            >        beq skip2562
                       >        trap            ;failed not equal (non zero)
5927 : 200461          >        jsr report_error
                       >
592a :                 >skip2562
                       >
592a : 68              >        pla
592b : 2902            >        and #fz
592d : c554            >        cmp zpt+2
                       >        trap_ne     ;Z flag invalid
592f : f003            >        beq skip2564
                       >        trap            ;failed not equal (non zero)
5931 : 200461          >        jsr report_error
                       >
5934 :                 >skip2564
                       >
5934 : a555            >        lda zpt+3
5936 : c552            >        cmp zpt
                       >        trap_ne     ;altered bits in memory wrong       
5938 : f003            >        beq skip2566
                       >        trap            ;failed not equal (non zero)
593a : 200461          >        jsr report_error
                       >
593d :                 >skip2566
                       >
                        
                                trbt abst,$ff
593d : 8c0532          >        sty abst
                       >        load_flag $ff
5940 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
5942 : 48              >        pha
5943 : a553            >        lda zpt+1
5945 : 28              >        plp
5946 : 1c0532          >        trb abst
5949 : 08              >        php
594a : c553            >        cmp zpt+1
                       >        trap_ne     ;accu was changed
594c : f003            >        beq skip2570
                       >        trap            ;failed not equal (non zero)
594e : 200461          >        jsr report_error
                       >
5951 :                 >skip2570
                       >
5951 : 68              >        pla
5952 : 48              >        pha
5953 : 0902            >        ora #fz     ;mask Z
                       >        cmp_flag $ff|fz
5955 : c9ff            >            cmp #($ff|fz|fao)&m8    ;expected flags + always on bits
                       >
                       >        trap_ne     ;flags changed except Z
5957 : f003            >        beq skip2573
                       >        trap            ;failed not equal (non zero)
5959 : 200461          >        jsr report_error
                       >
595c :                 >skip2573
                       >
595c : 68              >        pla
595d : 2902            >        and #fz
595f : c554            >        cmp zpt+2
                       >        trap_ne     ;Z flag invalid
5961 : f003            >        beq skip2575
                       >        trap            ;failed not equal (non zero)
5963 : 200461          >        jsr report_error
                       >
5966 :                 >skip2575
                       >
5966 : a555            >        lda zpt+3
5968 : c552            >        cmp zpt
                       >        trap_ne     ;altered bits in memory wrong       
596a : f003            >        beq skip2577
                       >        trap            ;failed not equal (non zero)
596c : 200461          >        jsr report_error
                       >
596f :                 >skip2577
                       >
                        
                                trbt zpt,0
596f : 8452            >        sty zpt
                       >        load_flag 0
5971 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
5973 : 48              >        pha
5974 : a553            >        lda zpt+1
5976 : 28              >        plp
5977 : 1452            >        trb zpt
5979 : 08              >        php
597a : c553            >        cmp zpt+1
                       >        trap_ne     ;accu was changed
597c : f003            >        beq skip2581
                       >        trap            ;failed not equal (non zero)
597e : 200461          >        jsr report_error
                       >
5981 :                 >skip2581
                       >
5981 : 68              >        pla
5982 : 48              >        pha
5983 : 0902            >        ora #fz     ;mask Z
                       >        cmp_flag 0|fz
5985 : c932            >            cmp #(0|fz|fao)&m8    ;expected flags + always on bits
                       >
                       >        trap_ne     ;flags changed except Z
5987 : f003            >        beq skip2584
                       >        trap            ;failed not equal (non zero)
5989 : 200461          >        jsr report_error
                       >
598c :                 >skip2584
                       >
598c : 68              >        pla
598d : 2902            >        and #fz
598f : c554            >        cmp zpt+2
                       >        trap_ne     ;Z flag invalid
5991 : f003            >        beq skip2586
                       >        trap            ;failed not equal (non zero)
5993 : 200461          >        jsr report_error
                       >
5996 :                 >skip2586
                       >
5996 : a555            >        lda zpt+3
5998 : c552            >        cmp zpt
                       >        trap_ne     ;altered bits in memory wrong       
599a : f003            >        beq skip2588
                       >        trap            ;failed not equal (non zero)
599c : 200461          >        jsr report_error
                       >
599f :                 >skip2588
                       >
                        
                                trbt abst,0
599f : 8c0532          >        sty abst
                       >        load_flag 0
59a2 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
59a4 : 48              >        pha
59a5 : a553            >        lda zpt+1
59a7 : 28              >        plp
59a8 : 1c0532          >        trb abst
59ab : 08              >        php
59ac : c553            >        cmp zpt+1
                       >        trap_ne     ;accu was changed
59ae : f003            >        beq skip2592
                       >        trap            ;failed not equal (non zero)
59b0 : 200461          >        jsr report_error
                       >
59b3 :                 >skip2592
                       >
59b3 : 68              >        pla
59b4 : 48              >        pha
59b5 : 0902            >        ora #fz     ;mask Z
                       >        cmp_flag 0|fz
59b7 : c932            >            cmp #(0|fz|fao)&m8    ;expected flags + always on bits
                       >
                       >        trap_ne     ;flags changed except Z
59b9 : f003            >        beq skip2595
                       >        trap            ;failed not equal (non zero)
59bb : 200461          >        jsr report_error
                       >
59be :                 >skip2595
                       >
59be : 68              >        pla
59bf : 2902            >        and #fz
59c1 : c554            >        cmp zpt+2
                       >        trap_ne     ;Z flag invalid
59c3 : f003            >        beq skip2597
                       >        trap            ;failed not equal (non zero)
59c5 : 200461          >        jsr report_error
                       >
59c8 :                 >skip2597
                       >
59c8 : a555            >        lda zpt+3
59ca : c552            >        cmp zpt
                       >        trap_ne     ;altered bits in memory wrong       
59cc : f003            >        beq skip2599
                       >        trap            ;failed not equal (non zero)
59ce : 200461          >        jsr report_error
                       >
59d1 :                 >skip2599
                       >
                        
                                tsbt zpt,$ff
59d1 : 8452            >        sty zpt
                       >        load_flag $ff
59d3 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
59d5 : 48              >        pha
59d6 : a553            >        lda zpt+1
59d8 : 28              >        plp
59d9 : 0452            >        tsb zpt
59db : 08              >        php
59dc : c553            >        cmp zpt+1
                       >        trap_ne     ;accu was changed
59de : f003            >        beq skip2603
                       >        trap            ;failed not equal (non zero)
59e0 : 200461          >        jsr report_error
                       >
59e3 :                 >skip2603
                       >
59e3 : 68              >        pla
59e4 : 48              >        pha
59e5 : 0902            >        ora #fz     ;mask Z
                       >        cmp_flag $ff|fz
59e7 : c9ff            >            cmp #($ff|fz|fao)&m8    ;expected flags + always on bits
                       >
                       >        trap_ne     ;flags changed except Z
59e9 : f003            >        beq skip2606
                       >        trap            ;failed not equal (non zero)
59eb : 200461          >        jsr report_error
                       >
59ee :                 >skip2606
                       >
59ee : 68              >        pla
59ef : 2902            >        and #fz
59f1 : c554            >        cmp zpt+2
                       >        trap_ne     ;Z flag invalid
59f3 : f003            >        beq skip2608
                       >        trap            ;failed not equal (non zero)
59f5 : 200461          >        jsr report_error
                       >
59f8 :                 >skip2608
                       >
59f8 : a556            >        lda zpt+4
59fa : c552            >        cmp zpt
                       >        trap_ne     ;altered bits in memory wrong        
59fc : f003            >        beq skip2610
                       >        trap            ;failed not equal (non zero)
59fe : 200461          >        jsr report_error
                       >
5a01 :                 >skip2610
                       >
                        
                                tsbt abst,$ff
5a01 : 8c0532          >        sty abst
                       >        load_flag $ff
5a04 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
5a06 : 48              >        pha
5a07 : a553            >        lda zpt+1
5a09 : 28              >        plp
5a0a : 0c0532          >        tsb abst
5a0d : 08              >        php
5a0e : c553            >        cmp zpt+1
                       >        trap_ne     ;accu was changed
5a10 : f003            >        beq skip2614
                       >        trap            ;failed not equal (non zero)
5a12 : 200461          >        jsr report_error
                       >
5a15 :                 >skip2614
                       >
5a15 : 68              >        pla
5a16 : 48              >        pha
5a17 : 0902            >        ora #fz     ;mask Z
                       >        cmp_flag $ff|fz
5a19 : c9ff            >            cmp #($ff|fz|fao)&m8    ;expected flags + always on bits
                       >
                       >        trap_ne     ;flags changed except Z
5a1b : f003            >        beq skip2617
                       >        trap            ;failed not equal (non zero)
5a1d : 200461          >        jsr report_error
                       >
5a20 :                 >skip2617
                       >
5a20 : 68              >        pla
5a21 : 2902            >        and #fz
5a23 : c554            >        cmp zpt+2
                       >        trap_ne     ;Z flag invalid
5a25 : f003            >        beq skip2619
                       >        trap            ;failed not equal (non zero)
5a27 : 200461          >        jsr report_error
                       >
5a2a :                 >skip2619
                       >
5a2a : a556            >        lda zpt+4
5a2c : c552            >        cmp zpt
                       >        trap_ne     ;altered bits in memory wrong        
5a2e : f003            >        beq skip2621
                       >        trap            ;failed not equal (non zero)
5a30 : 200461          >        jsr report_error
                       >
5a33 :                 >skip2621
                       >
                        
                                tsbt zpt,0
5a33 : 8452            >        sty zpt
                       >        load_flag 0
5a35 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
5a37 : 48              >        pha
5a38 : a553            >        lda zpt+1
5a3a : 28              >        plp
5a3b : 0452            >        tsb zpt
5a3d : 08              >        php
5a3e : c553            >        cmp zpt+1
                       >        trap_ne     ;accu was changed
5a40 : f003            >        beq skip2625
                       >        trap            ;failed not equal (non zero)
5a42 : 200461          >        jsr report_error
                       >
5a45 :                 >skip2625
                       >
5a45 : 68              >        pla
5a46 : 48              >        pha
5a47 : 0902            >        ora #fz     ;mask Z
                       >        cmp_flag 0|fz
5a49 : c932            >            cmp #(0|fz|fao)&m8    ;expected flags + always on bits
                       >
                       >        trap_ne     ;flags changed except Z
5a4b : f003            >        beq skip2628
                       >        trap            ;failed not equal (non zero)
5a4d : 200461          >        jsr report_error
                       >
5a50 :                 >skip2628
                       >
5a50 : 68              >        pla
5a51 : 2902            >        and #fz
5a53 : c554            >        cmp zpt+2
                       >        trap_ne     ;Z flag invalid
5a55 : f003            >        beq skip2630
                       >        trap            ;failed not equal (non zero)
5a57 : 200461          >        jsr report_error
                       >
5a5a :                 >skip2630
                       >
5a5a : a556            >        lda zpt+4
5a5c : c552            >        cmp zpt
                       >        trap_ne     ;altered bits in memory wrong        
5a5e : f003            >        beq skip2632
                       >        trap            ;failed not equal (non zero)
5a60 : 200461          >        jsr report_error
                       >
5a63 :                 >skip2632
                       >
                        
                                tsbt abst,0
5a63 : 8c0532          >        sty abst
                       >        load_flag 0
5a66 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
5a68 : 48              >        pha
5a69 : a553            >        lda zpt+1
5a6b : 28              >        plp
5a6c : 0c0532          >        tsb abst
5a6f : 08              >        php
5a70 : c553            >        cmp zpt+1
                       >        trap_ne     ;accu was changed
5a72 : f003            >        beq skip2636
                       >        trap            ;failed not equal (non zero)
5a74 : 200461          >        jsr report_error
                       >
5a77 :                 >skip2636
                       >
5a77 : 68              >        pla
5a78 : 48              >        pha
5a79 : 0902            >        ora #fz     ;mask Z
                       >        cmp_flag 0|fz
5a7b : c932            >            cmp #(0|fz|fao)&m8    ;expected flags + always on bits
                       >
                       >        trap_ne     ;flags changed except Z
5a7d : f003            >        beq skip2639
                       >        trap            ;failed not equal (non zero)
5a7f : 200461          >        jsr report_error
                       >
5a82 :                 >skip2639
                       >
5a82 : 68              >        pla
5a83 : 2902            >        and #fz
5a85 : c554            >        cmp zpt+2
                       >        trap_ne     ;Z flag invalid
5a87 : f003            >        beq skip2641
                       >        trap            ;failed not equal (non zero)
5a89 : 200461          >        jsr report_error
                       >
5a8c :                 >skip2641
                       >
5a8c : a556            >        lda zpt+4
5a8e : c552            >        cmp zpt
                       >        trap_ne     ;altered bits in memory wrong        
5a90 : f003            >        beq skip2643
                       >        trap            ;failed not equal (non zero)
5a92 : 200461          >        jsr report_error
                       >
5a95 :                 >skip2643
                       >
                        
                                
5a95 : c8                       iny         ;iterate op1
5a96 : d004                     bne tbt3
5a98 : e653                     inc zpt+1   ;iterate op2
5a9a : f003                     beq tbt2
5a9c : 4cf658           tbt3    jmp tbt1        
5a9f :                  tbt2
5a9f : e0c0                     cpx #$c0
                                trap_ne     ;x altered during test
5aa1 : f003            >        beq skip2645
                       >        trap            ;failed not equal (non zero)
5aa3 : 200461          >        jsr report_error
                       >
5aa6 :                 >skip2645
                        
5aa6 : ba                       tsx
5aa7 : e0ff                     cpx #$ff
                                trap_ne     ;sp push/pop mismatch
5aa9 : f003            >        beq skip2647
                       >        trap            ;failed not equal (non zero)
5aab : 200461          >        jsr report_error
                       >
5aae :                 >skip2647
                        
                                next_test    
5aae : ad0232          >            lda test_case   ;previous test
5ab1 : c90d            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
5ab3 : f003            >        beq skip2650
                       >        trap            ;failed not equal (non zero)
5ab5 : 200461          >        jsr report_error
                       >
5ab8 :                 >skip2650
                       >
000e =                 >test_num = test_num + 1
5ab8 : a90e            >            lda #test_num   ;*** next tests' number
5aba : 8d0232          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                            if rkwl_wdc_op = 1
                        ; testing RMB, SMB - zp
                        rmbt    macro       ;\1 = bitnum
                                lda #$ff
                                sta zpt
                                set_a $a5,0
                                rmb \1,zpt
                                tst_a $a5,0
                                lda zpt
                                cmp #$ff-(1<<\1)
                                trap_ne     ;wrong bits set or cleared
                                lda #1<<\1
                                sta zpt
                                set_a $5a,$ff
                                rmb \1,zpt
                                tst_a $5a,$ff
                                lda zpt
                                trap_ne     ;wrong bits set or cleared
                                endm
                        smbt    macro       ;\1 = bitnum
                                lda #$ff-(1<<\1)
                                sta zpt
                                set_a $a5,0
                                smb \1,zpt
                                tst_a $a5,0
                                lda zpt
                                cmp #$ff
                                trap_ne     ;wrong bits set or cleared
                                lda #0
                                sta zpt
                                set_a $5a,$ff
                                smb \1,zpt
                                tst_a $5a,$ff
                                lda zpt
                                cmp #1<<\1
                                trap_ne     ;wrong bits set or cleared
                                endm
                        
                                ldx #$ba    ;protect x & y
                                ldy #$d0
                                rmbt 0
                                rmbt 1
                                rmbt 2
                                rmbt 3
                                rmbt 4
                                rmbt 5
                                rmbt 6
                                rmbt 7
                                smbt 0
                                smbt 1
                                smbt 2
                                smbt 3
                                smbt 4
                                smbt 5
                                smbt 6
                                smbt 7
                                cpx #$ba
                                trap_ne     ;x altered during test
                                cpy #$d0
                                trap_ne     ;y altered during test
                                tsx
                                cpx #$ff
                                trap_ne     ;sp push/pop mismatch
                                next_test
                            endif        
                                 
                        ; testing CMP - (zp)         
5abd : a2de                     ldx #$de    ;protect x & y
5abf : a0ad                     ldy #$ad
                                set_a $80,0
                       >            load_flag 0
5ac1 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
5ac3 : 48              >            pha         ;use stack to load status
5ac4 : a980            >            lda #$80     ;precharge accu
5ac6 : 28              >            plp
                        
5ac7 : d272                     cmp (ind1+8)
                                tst_a $80,fc
5ac9 : 08              >            php         ;save flags
5aca : c980            >            cmp #$80     ;test result
                       >            trap_ne
5acc : f003            >        beq skip2655
                       >        trap            ;failed not equal (non zero)
5ace : 200461          >        jsr report_error
                       >
5ad1 :                 >skip2655
                       >
5ad1 : 68              >            pla         ;load status
5ad2 : 48              >            pha
                       >            cmp_flag fc
5ad3 : c931            >            cmp #(fc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
5ad5 : f003            >        beq skip2658
                       >        trap            ;failed not equal (non zero)
5ad7 : 200461          >        jsr report_error
                       >
5ada :                 >skip2658
                       >
5ada : 28              >            plp         ;restore status
                        
                                set_a $7f,0
                       >            load_flag 0
5adb : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
5add : 48              >            pha         ;use stack to load status
5ade : a97f            >            lda #$7f     ;precharge accu
5ae0 : 28              >            plp
                        
5ae1 : d272                     cmp (ind1+8)
                                tst_a $7f,fzc
5ae3 : 08              >            php         ;save flags
5ae4 : c97f            >            cmp #$7f     ;test result
                       >            trap_ne
5ae6 : f003            >        beq skip2663
                       >        trap            ;failed not equal (non zero)
5ae8 : 200461          >        jsr report_error
                       >
5aeb :                 >skip2663
                       >
5aeb : 68              >            pla         ;load status
5aec : 48              >            pha
                       >            cmp_flag fzc
5aed : c933            >            cmp #(fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
5aef : f003            >        beq skip2666
                       >        trap            ;failed not equal (non zero)
5af1 : 200461          >        jsr report_error
                       >
5af4 :                 >skip2666
                       >
5af4 : 28              >            plp         ;restore status
                        
                                set_a $7e,0
                       >            load_flag 0
5af5 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
5af7 : 48              >            pha         ;use stack to load status
5af8 : a97e            >            lda #$7e     ;precharge accu
5afa : 28              >            plp
                        
5afb : d272                     cmp (ind1+8)
                                tst_a $7e,fn
5afd : 08              >            php         ;save flags
5afe : c97e            >            cmp #$7e     ;test result
                       >            trap_ne
5b00 : f003            >        beq skip2671
                       >        trap            ;failed not equal (non zero)
5b02 : 200461          >        jsr report_error
                       >
5b05 :                 >skip2671
                       >
5b05 : 68              >            pla         ;load status
5b06 : 48              >            pha
                       >            cmp_flag fn
5b07 : c9b0            >            cmp #(fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
5b09 : f003            >        beq skip2674
                       >        trap            ;failed not equal (non zero)
5b0b : 200461          >        jsr report_error
                       >
5b0e :                 >skip2674
                       >
5b0e : 28              >            plp         ;restore status
                        
                                set_a $80,$ff
                       >            load_flag $ff
5b0f : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
5b11 : 48              >            pha         ;use stack to load status
5b12 : a980            >            lda #$80     ;precharge accu
5b14 : 28              >            plp
                        
5b15 : d272                     cmp (ind1+8)
                                tst_a $80,~fnz
5b17 : 08              >            php         ;save flags
5b18 : c980            >            cmp #$80     ;test result
                       >            trap_ne
5b1a : f003            >        beq skip2679
                       >        trap            ;failed not equal (non zero)
5b1c : 200461          >        jsr report_error
                       >
5b1f :                 >skip2679
                       >
5b1f : 68              >            pla         ;load status
5b20 : 48              >            pha
                       >            cmp_flag ~fnz
5b21 : c97d            >            cmp #(~fnz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
5b23 : f003            >        beq skip2682
                       >        trap            ;failed not equal (non zero)
5b25 : 200461          >        jsr report_error
                       >
5b28 :                 >skip2682
                       >
5b28 : 28              >            plp         ;restore status
                        
                                set_a $7f,$ff
                       >            load_flag $ff
5b29 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
5b2b : 48              >            pha         ;use stack to load status
5b2c : a97f            >            lda #$7f     ;precharge accu
5b2e : 28              >            plp
                        
5b2f : d272                     cmp (ind1+8)
                                tst_a $7f,~fn
5b31 : 08              >            php         ;save flags
5b32 : c97f            >            cmp #$7f     ;test result
                       >            trap_ne
5b34 : f003            >        beq skip2687
                       >        trap            ;failed not equal (non zero)
5b36 : 200461          >        jsr report_error
                       >
5b39 :                 >skip2687
                       >
5b39 : 68              >            pla         ;load status
5b3a : 48              >            pha
                       >            cmp_flag ~fn
5b3b : c97f            >            cmp #(~fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
5b3d : f003            >        beq skip2690
                       >        trap            ;failed not equal (non zero)
5b3f : 200461          >        jsr report_error
                       >
5b42 :                 >skip2690
                       >
5b42 : 28              >            plp         ;restore status
                        
                                set_a $7e,$ff
                       >            load_flag $ff
5b43 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
5b45 : 48              >            pha         ;use stack to load status
5b46 : a97e            >            lda #$7e     ;precharge accu
5b48 : 28              >            plp
                        
5b49 : d272                     cmp (ind1+8)
                                tst_a $7e,~fzc
5b4b : 08              >            php         ;save flags
5b4c : c97e            >            cmp #$7e     ;test result
                       >            trap_ne
5b4e : f003            >        beq skip2695
                       >        trap            ;failed not equal (non zero)
5b50 : 200461          >        jsr report_error
                       >
5b53 :                 >skip2695
                       >
5b53 : 68              >            pla         ;load status
5b54 : 48              >            pha
                       >            cmp_flag ~fzc
5b55 : c9fc            >            cmp #(~fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
5b57 : f003            >        beq skip2698
                       >        trap            ;failed not equal (non zero)
5b59 : 200461          >        jsr report_error
                       >
5b5c :                 >skip2698
                       >
5b5c : 28              >            plp         ;restore status
                        
5b5d : e0de                     cpx #$de
                                trap_ne     ;x altered during test
5b5f : f003            >        beq skip2700
                       >        trap            ;failed not equal (non zero)
5b61 : 200461          >        jsr report_error
                       >
5b64 :                 >skip2700
                        
5b64 : c0ad                     cpy #$ad
                                trap_ne     ;y altered during test 
5b66 : f003            >        beq skip2702
                       >        trap            ;failed not equal (non zero)
5b68 : 200461          >        jsr report_error
                       >
5b6b :                 >skip2702
                        
5b6b : ba                       tsx
5b6c : e0ff                     cpx #$ff
                                trap_ne     ;sp push/pop mismatch
5b6e : f003            >        beq skip2704
                       >        trap            ;failed not equal (non zero)
5b70 : 200461          >        jsr report_error
                       >
5b73 :                 >skip2704
                        
                                next_test
5b73 : ad0232          >            lda test_case   ;previous test
5b76 : c90e            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
5b78 : f003            >        beq skip2707
                       >        trap            ;failed not equal (non zero)
5b7a : 200461          >        jsr report_error
                       >
5b7d :                 >skip2707
                       >
000f =                 >test_num = test_num + 1
5b7d : a90f            >            lda #test_num   ;*** next tests' number
5b7f : 8d0232          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; testing logical instructions - AND EOR ORA (zp)
5b82 : a242                     ldx #$42    ;protect x & y
                        
5b84 : a000                     ldy #0      ;AND
5b86 : a580                     lda indAN   ;set indirect address
5b88 : 8552                     sta zpt
5b8a : a581                     lda indAN+1
5b8c : 8553                     sta zpt+1
5b8e :                  tand1
                                set_ay  absANa,0
                       >            load_flag 0
5b8e : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
5b90 : 48              >            pha         ;use stack to load status
5b91 : b95332          >            lda absANa,y    ;precharge accu
5b94 : 28              >            plp
                        
5b95 : 3252                     and (zpt)
                                tst_ay  absrlo,absflo,0
5b97 : 08              >            php         ;save flags
5b98 : d95b32          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
5b9b : f003            >        beq skip2712
                       >        trap            ;failed not equal (non zero)
5b9d : 200461          >        jsr report_error
                       >
5ba0 :                 >skip2712
                       >
5ba0 : 68              >            pla         ;load status
                       >            eor_flag 0
5ba1 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
5ba3 : d95f32          >            cmp absflo,y    ;test flags
                       >            trap_ne
5ba6 : f003            >        beq skip2715
                       >        trap            ;failed not equal (non zero)
5ba8 : 200461          >        jsr report_error
                       >
5bab :                 >skip2715
                       >
                        
5bab : e652                     inc zpt
5bad : c8                       iny
5bae : c004                     cpy #4
5bb0 : d0dc                     bne tand1
5bb2 : 88                       dey
5bb3 : c652                     dec zpt
5bb5 :                  tand2
                                set_ay  absANa,$ff
                       >            load_flag $ff
5bb5 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
5bb7 : 48              >            pha         ;use stack to load status
5bb8 : b95332          >            lda absANa,y    ;precharge accu
5bbb : 28              >            plp
                        
5bbc : 3252                     and (zpt)
                                tst_ay  absrlo,absflo,$ff-fnz
5bbe : 08              >            php         ;save flags
5bbf : d95b32          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
5bc2 : f003            >        beq skip2720
                       >        trap            ;failed not equal (non zero)
5bc4 : 200461          >        jsr report_error
                       >
5bc7 :                 >skip2720
                       >
5bc7 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
5bc8 : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
5bca : d95f32          >            cmp absflo,y    ;test flags
                       >            trap_ne
5bcd : f003            >        beq skip2723
                       >        trap            ;failed not equal (non zero)
5bcf : 200461          >        jsr report_error
                       >
5bd2 :                 >skip2723
                       >
                        
5bd2 : c652                     dec zpt
5bd4 : 88                       dey
5bd5 : 10de                     bpl tand2
                        
5bd7 : a000                     ldy #0      ;EOR
5bd9 : a588                     lda indEO   ;set indirect address
5bdb : 8552                     sta zpt
5bdd : a589                     lda indEO+1
5bdf : 8553                     sta zpt+1
5be1 :                  teor1
                                set_ay  absEOa,0
                       >            load_flag 0
5be1 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
5be3 : 48              >            pha         ;use stack to load status
5be4 : b95732          >            lda absEOa,y    ;precharge accu
5be7 : 28              >            plp
                        
5be8 : 5252                     eor (zpt)
                                tst_ay  absrlo,absflo,0
5bea : 08              >            php         ;save flags
5beb : d95b32          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
5bee : f003            >        beq skip2728
                       >        trap            ;failed not equal (non zero)
5bf0 : 200461          >        jsr report_error
                       >
5bf3 :                 >skip2728
                       >
5bf3 : 68              >            pla         ;load status
                       >            eor_flag 0
5bf4 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
5bf6 : d95f32          >            cmp absflo,y    ;test flags
                       >            trap_ne
5bf9 : f003            >        beq skip2731
                       >        trap            ;failed not equal (non zero)
5bfb : 200461          >        jsr report_error
                       >
5bfe :                 >skip2731
                       >
                        
5bfe : e652                     inc zpt
5c00 : c8                       iny
5c01 : c004                     cpy #4
5c03 : d0dc                     bne teor1
5c05 : 88                       dey
5c06 : c652                     dec zpt
5c08 :                  teor2
                                set_ay  absEOa,$ff
                       >            load_flag $ff
5c08 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
5c0a : 48              >            pha         ;use stack to load status
5c0b : b95732          >            lda absEOa,y    ;precharge accu
5c0e : 28              >            plp
                        
5c0f : 5252                     eor (zpt)
                                tst_ay  absrlo,absflo,$ff-fnz
5c11 : 08              >            php         ;save flags
5c12 : d95b32          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
5c15 : f003            >        beq skip2736
                       >        trap            ;failed not equal (non zero)
5c17 : 200461          >        jsr report_error
                       >
5c1a :                 >skip2736
                       >
5c1a : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
5c1b : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
5c1d : d95f32          >            cmp absflo,y    ;test flags
                       >            trap_ne
5c20 : f003            >        beq skip2739
                       >        trap            ;failed not equal (non zero)
5c22 : 200461          >        jsr report_error
                       >
5c25 :                 >skip2739
                       >
                        
5c25 : c652                     dec zpt
5c27 : 88                       dey
5c28 : 10de                     bpl teor2
                        
5c2a : a000                     ldy #0      ;ORA
5c2c : a590                     lda indOR   ;set indirect address
5c2e : 8552                     sta zpt
5c30 : a591                     lda indOR+1
5c32 : 8553                     sta zpt+1
5c34 :                  tora1
                                set_ay  absORa,0
                       >            load_flag 0
5c34 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
5c36 : 48              >            pha         ;use stack to load status
5c37 : b94f32          >            lda absORa,y    ;precharge accu
5c3a : 28              >            plp
                        
5c3b : 1252                     ora (zpt)
                                tst_ay  absrlo,absflo,0
5c3d : 08              >            php         ;save flags
5c3e : d95b32          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
5c41 : f003            >        beq skip2744
                       >        trap            ;failed not equal (non zero)
5c43 : 200461          >        jsr report_error
                       >
5c46 :                 >skip2744
                       >
5c46 : 68              >            pla         ;load status
                       >            eor_flag 0
5c47 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
5c49 : d95f32          >            cmp absflo,y    ;test flags
                       >            trap_ne
5c4c : f003            >        beq skip2747
                       >        trap            ;failed not equal (non zero)
5c4e : 200461          >        jsr report_error
                       >
5c51 :                 >skip2747
                       >
                        
5c51 : e652                     inc zpt
5c53 : c8                       iny
5c54 : c004                     cpy #4
5c56 : d0dc                     bne tora1
5c58 : 88                       dey
5c59 : c652                     dec zpt
5c5b :                  tora2
                                set_ay  absORa,$ff
                       >            load_flag $ff
5c5b : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
5c5d : 48              >            pha         ;use stack to load status
5c5e : b94f32          >            lda absORa,y    ;precharge accu
5c61 : 28              >            plp
                        
5c62 : 1252                     ora (zpt)
                                tst_ay  absrlo,absflo,$ff-fnz
5c64 : 08              >            php         ;save flags
5c65 : d95b32          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
5c68 : f003            >        beq skip2752
                       >        trap            ;failed not equal (non zero)
5c6a : 200461          >        jsr report_error
                       >
5c6d :                 >skip2752
                       >
5c6d : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
5c6e : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
5c70 : d95f32          >            cmp absflo,y    ;test flags
                       >            trap_ne
5c73 : f003            >        beq skip2755
                       >        trap            ;failed not equal (non zero)
5c75 : 200461          >        jsr report_error
                       >
5c78 :                 >skip2755
                       >
                        
5c78 : c652                     dec zpt
5c7a : 88                       dey
5c7b : 10de                     bpl tora2
                        
5c7d : e042                     cpx #$42
                                trap_ne     ;x altered during test
5c7f : f003            >        beq skip2757
                       >        trap            ;failed not equal (non zero)
5c81 : 200461          >        jsr report_error
                       >
5c84 :                 >skip2757
                        
5c84 : ba                       tsx
5c85 : e0ff                     cpx #$ff
                                trap_ne     ;sp push/pop mismatch
5c87 : f003            >        beq skip2759
                       >        trap            ;failed not equal (non zero)
5c89 : 200461          >        jsr report_error
                       >
5c8c :                 >skip2759
                        
                                next_test
5c8c : ad0232          >            lda test_case   ;previous test
5c8f : c90f            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
5c91 : f003            >        beq skip2762
                       >        trap            ;failed not equal (non zero)
5c93 : 200461          >        jsr report_error
                       >
5c96 :                 >skip2762
                       >
0010 =                 >test_num = test_num + 1
5c96 : a910            >            lda #test_num   ;*** next tests' number
5c98 : 8d0232          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                                
                            if I_flag = 3
5c9b : 58                       cli
                            endif                
                        
                        ; full binary add/subtract test - (zp) only
                        ; iterates through all combinations of operands and carry input
                        ; uses increments/decrements to predict result & result flags
5c9c : d8                       cld
5c9d : a254                     ldx #ad2        ;for indexed test
5c9f : a0ff                     ldy #$ff        ;max range
5ca1 : a900                     lda #0          ;start with adding zeroes & no carry
5ca3 : 8552                     sta adfc        ;carry in - for diag
5ca5 : 8553                     sta ad1         ;operand 1 - accumulator
5ca7 : 8554                     sta ad2         ;operand 2 - memory or immediate
5ca9 : 8d0532                   sta ada2        ;non zp
5cac : 8555                     sta adrl        ;expected result bits 0-7
5cae : 8556                     sta adrh        ;expected result bit 8 (carry out)
5cb0 : a9ff                     lda #$ff        ;complemented operand 2 for subtract
5cb2 : 8558                     sta sb2
5cb4 : 8d0632                   sta sba2        ;non zp
5cb7 : a902                     lda #2          ;expected Z-flag
5cb9 : 8557                     sta adrf
5cbb : 18               tadd    clc             ;test with carry clear
5cbc : 20b65f                   jsr chkadd
5cbf : e652                     inc adfc        ;now with carry
5cc1 : e655                     inc adrl        ;result +1
5cc3 : 08                       php             ;save N & Z from low result
5cc4 : 08                       php
5cc5 : 68                       pla             ;accu holds expected flags
5cc6 : 2982                     and #$82        ;mask N & Z
5cc8 : 28                       plp
5cc9 : d002                     bne tadd1
5ccb : e656                     inc adrh        ;result bit 8 - carry
5ccd : 0556             tadd1   ora adrh        ;merge C to expected flags
5ccf : 8557                     sta adrf        ;save expected flags except overflow
5cd1 : 38                       sec             ;test with carry set
5cd2 : 20b65f                   jsr chkadd
5cd5 : c652                     dec adfc        ;same for operand +1 but no carry
5cd7 : e653                     inc ad1
5cd9 : d0e0                     bne tadd        ;iterate op1
5cdb : a900                     lda #0          ;preset result to op2 when op1 = 0
5cdd : 8556                     sta adrh
5cdf : ee0532                   inc ada2
5ce2 : e654                     inc ad2
5ce4 : 08                       php             ;save NZ as operand 2 becomes the new result
5ce5 : 68                       pla
5ce6 : 2982                     and #$82        ;mask N00000Z0
5ce8 : 8557                     sta adrf        ;no need to check carry as we are adding to 0
5cea : c658                     dec sb2         ;complement subtract operand 2
5cec : ce0632                   dec sba2
5cef : a554                     lda ad2         
5cf1 : 8555                     sta adrl
5cf3 : d0c6                     bne tadd        ;iterate op2
                        
5cf5 : e054                     cpx #ad2
                                trap_ne         ;x altered during test
5cf7 : f003            >        beq skip2764
                       >        trap            ;failed not equal (non zero)
5cf9 : 200461          >        jsr report_error
                       >
5cfc :                 >skip2764
                        
5cfc : c0ff                     cpy #$ff
                                trap_ne         ;y altered during test 
5cfe : f003            >        beq skip2766
                       >        trap            ;failed not equal (non zero)
5d00 : 200461          >        jsr report_error
                       >
5d03 :                 >skip2766
                        
5d03 : ba                       tsx
5d04 : e0ff                     cpx #$ff
                                trap_ne         ;sp push/pop mismatch
5d06 : f003            >        beq skip2768
                       >        trap            ;failed not equal (non zero)
5d08 : 200461          >        jsr report_error
                       >
5d0b :                 >skip2768
                        
                                next_test
5d0b : ad0232          >            lda test_case   ;previous test
5d0e : c910            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
5d10 : f003            >        beq skip2771
                       >        trap            ;failed not equal (non zero)
5d12 : 200461          >        jsr report_error
                       >
5d15 :                 >skip2771
                       >
0011 =                 >test_num = test_num + 1
5d15 : a911            >            lda #test_num   ;*** next tests' number
5d17 : 8d0232          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; decimal add/subtract test
                        ; *** WARNING - tests documented behavior only! ***
                        ;   only valid BCD operands are tested, the V flag is ignored
                        ;   although V is declared as beeing valid on the 65C02 it has absolutely
                        ;   no use in BCD math. No sign = no overflow!
                        ; iterates through all valid combinations of operands and carry input
                        ; uses increments/decrements to predict result & carry flag
5d1a : f8                       sed 
5d1b : a254                     ldx #ad2        ;for indexed test
5d1d : a0ff                     ldy #$ff        ;max range
5d1f : a999                     lda #$99        ;start with adding 99 to 99 with carry
5d21 : 8553                     sta ad1         ;operand 1 - accumulator
5d23 : 8554                     sta ad2         ;operand 2 - memory or immediate
5d25 : 8d0532                   sta ada2        ;non zp
5d28 : 8555                     sta adrl        ;expected result bits 0-7
5d2a : a901                     lda #1          ;set carry in & out
5d2c : 8552                     sta adfc        ;carry in - for diag
5d2e : 8556                     sta adrh        ;expected result bit 8 (carry out)
5d30 : a981                     lda #$81        ;set N & C (99 + 99 + C = 99 + C)
5d32 : 8557                     sta adrf
5d34 : a900                     lda #0          ;complemented operand 2 for subtract
5d36 : 8558                     sta sb2
5d38 : 8d0632                   sta sba2        ;non zp
5d3b : 38               tdad    sec             ;test with carry set
5d3c : 20f35d                   jsr chkdad
5d3f : c652                     dec adfc        ;now with carry clear
5d41 : a555                     lda adrl        ;decimal adjust result
5d43 : d008                     bne tdad1       ;skip clear carry & preset result 99 (9A-1)
5d45 : c656                     dec adrh
5d47 : a999                     lda #$99
5d49 : 8555                     sta adrl
5d4b : d012                     bne tdad3
5d4d : 290f             tdad1   and #$f         ;lower nibble mask
5d4f : d00c                     bne tdad2       ;no decimal adjust needed
5d51 : c655                     dec adrl        ;decimal adjust (?0-6)
5d53 : c655                     dec adrl
5d55 : c655                     dec adrl
5d57 : c655                     dec adrl
5d59 : c655                     dec adrl
5d5b : c655                     dec adrl
5d5d : c655             tdad2   dec adrl        ;result -1
5d5f : 08               tdad3   php             ;save valid flags
5d60 : 68                       pla
5d61 : 2982                     and #$82        ;N-----Z-
5d63 : 0556                     ora adrh        ;N-----ZC
5d65 : 8557                     sta adrf
5d67 : 18                       clc             ;test with carry clear
5d68 : 20f35d                   jsr chkdad
5d6b : e652                     inc adfc        ;same for operand -1 but with carry
5d6d : a553                     lda ad1         ;decimal adjust operand 1
5d6f : f015                     beq tdad5       ;iterate operand 2
5d71 : 290f                     and #$f         ;lower nibble mask
5d73 : d00c                     bne tdad4       ;skip decimal adjust
5d75 : c653                     dec ad1         ;decimal adjust (?0-6)
5d77 : c653                     dec ad1
5d79 : c653                     dec ad1
5d7b : c653                     dec ad1
5d7d : c653                     dec ad1
5d7f : c653                     dec ad1
5d81 : c653             tdad4   dec ad1         ;operand 1 -1
5d83 : 4c3b5d                   jmp tdad        ;iterate op1
                        
5d86 : a999             tdad5   lda #$99        ;precharge op1 max
5d88 : 8553                     sta ad1
5d8a : a554                     lda ad2         ;decimal adjust operand 2
5d8c : f039                     beq tdad7       ;end of iteration
5d8e : 290f                     and #$f         ;lower nibble mask
5d90 : d018                     bne tdad6       ;skip decimal adjust
5d92 : c654                     dec ad2         ;decimal adjust (?0-6)
5d94 : c654                     dec ad2
5d96 : c654                     dec ad2
5d98 : c654                     dec ad2
5d9a : c654                     dec ad2
5d9c : c654                     dec ad2
5d9e : e658                     inc sb2         ;complemented decimal adjust for subtract (?9+6)
5da0 : e658                     inc sb2
5da2 : e658                     inc sb2
5da4 : e658                     inc sb2
5da6 : e658                     inc sb2
5da8 : e658                     inc sb2
5daa : c654             tdad6   dec ad2         ;operand 2 -1
5dac : e658                     inc sb2         ;complemented operand for subtract
5dae : a558                     lda sb2
5db0 : 8d0632                   sta sba2        ;copy as non zp operand
5db3 : a554                     lda ad2
5db5 : 8d0532                   sta ada2        ;copy as non zp operand
5db8 : 8555                     sta adrl        ;new result since op1+carry=00+carry +op2=op2
5dba : 08                       php             ;save flags
5dbb : 68                       pla
5dbc : 2982                     and #$82        ;N-----Z-
5dbe : 0901                     ora #1          ;N-----ZC
5dc0 : 8557                     sta adrf
5dc2 : e656                     inc adrh        ;result carry
5dc4 : 4c3b5d                   jmp tdad        ;iterate op2
                        
5dc7 : e054             tdad7   cpx #ad2
                                trap_ne         ;x altered during test
5dc9 : f003            >        beq skip2773
                       >        trap            ;failed not equal (non zero)
5dcb : 200461          >        jsr report_error
                       >
5dce :                 >skip2773
                        
5dce : c0ff                     cpy #$ff
                                trap_ne         ;y altered during test 
5dd0 : f003            >        beq skip2775
                       >        trap            ;failed not equal (non zero)
5dd2 : 200461          >        jsr report_error
                       >
5dd5 :                 >skip2775
                        
5dd5 : ba                       tsx
5dd6 : e0ff                     cpx #$ff
                                trap_ne         ;sp push/pop mismatch
5dd8 : f003            >        beq skip2777
                       >        trap            ;failed not equal (non zero)
5dda : 200461          >        jsr report_error
                       >
5ddd :                 >skip2777
                        
5ddd : d8                       cld
                        
5dde : ad0232                   lda test_case
5de1 : c911                     cmp #test_num
                                trap_ne         ;previous test is out of sequence
5de3 : f003            >        beq skip2779
                       >        trap            ;failed not equal (non zero)
5de5 : 200461          >        jsr report_error
                       >
5de8 :                 >skip2779
                        
5de8 : a9f0                     lda #$f0        ;mark opcode testing complete
5dea : 8d0232                   sta test_case
                        
                        ; final RAM integrity test
                        ;   verifies that none of the previous tests has altered RAM outside of the
                        ;   designated write areas.
                                check_ram
                       >            ;RAM check disabled - RAM size not set
                        
                        ; *** DEBUG INFO ***
                        ; to debug checksum errors uncomment check_ram in the next_test macro to 
                        ; narrow down the responsible opcode.
                        ; may give false errors when monitor, OS or other background activity is
                        ; allowed during previous tests.
                        
                        
                        ; S U C C E S S ************************************************       
                        ; -------------       
                                success         ;if you get here everything went well
5ded : 20cd61          >        jsr report_success
                        
                        ; -------------       
                        ; S U C C E S S ************************************************       
5df0 : 4c0034                   jmp start       ;run again      
                        
                        ; core subroutine of the decimal add/subtract test
                        ; *** WARNING - tests documented behavior only! ***
                        ;   only valid BCD operands are tested, V flag is ignored
                        ; iterates through all valid combinations of operands and carry input
                        ; uses increments/decrements to predict result & carry flag
5df3 :                  chkdad
                        ; decimal ADC / SBC zp
5df3 : 08                       php             ;save carry for subtract
5df4 : a553                     lda ad1
5df6 : 6554                     adc ad2         ;perform add
5df8 : 08                       php          
5df9 : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
5dfb : f003            >        beq skip2783
                       >        trap            ;failed not equal (non zero)
5dfd : 200461          >        jsr report_error
                       >
5e00 :                 >skip2783
                        
5e00 : 68                       pla             ;check flags
5e01 : 2983                     and #$83        ;mask N-----ZC
5e03 : c557                     cmp adrf
                                trap_ne         ;bad flags
5e05 : f003            >        beq skip2785
                       >        trap            ;failed not equal (non zero)
5e07 : 200461          >        jsr report_error
                       >
5e0a :                 >skip2785
                        
5e0a : 28                       plp
5e0b : 08                       php             ;save carry for next add
5e0c : a553                     lda ad1
5e0e : e558                     sbc sb2         ;perform subtract
5e10 : 08                       php          
5e11 : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
5e13 : f003            >        beq skip2787
                       >        trap            ;failed not equal (non zero)
5e15 : 200461          >        jsr report_error
                       >
5e18 :                 >skip2787
                        
5e18 : 68                       pla             ;check flags
5e19 : 2983                     and #$83        ;mask N-----ZC
5e1b : c557                     cmp adrf
                                trap_ne         ;bad flags
5e1d : f003            >        beq skip2789
                       >        trap            ;failed not equal (non zero)
5e1f : 200461          >        jsr report_error
                       >
5e22 :                 >skip2789
                        
5e22 : 28                       plp
                        ; decimal ADC / SBC abs
5e23 : 08                       php             ;save carry for subtract
5e24 : a553                     lda ad1
5e26 : 6d0532                   adc ada2        ;perform add
5e29 : 08                       php          
5e2a : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
5e2c : f003            >        beq skip2791
                       >        trap            ;failed not equal (non zero)
5e2e : 200461          >        jsr report_error
                       >
5e31 :                 >skip2791
                        
5e31 : 68                       pla             ;check flags
5e32 : 2983                     and #$83        ;mask N-----ZC
5e34 : c557                     cmp adrf
                                trap_ne         ;bad flags
5e36 : f003            >        beq skip2793
                       >        trap            ;failed not equal (non zero)
5e38 : 200461          >        jsr report_error
                       >
5e3b :                 >skip2793
                        
5e3b : 28                       plp
5e3c : 08                       php             ;save carry for next add
5e3d : a553                     lda ad1
5e3f : ed0632                   sbc sba2        ;perform subtract
5e42 : 08                       php          
5e43 : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
5e45 : f003            >        beq skip2795
                       >        trap            ;failed not equal (non zero)
5e47 : 200461          >        jsr report_error
                       >
5e4a :                 >skip2795
                        
5e4a : 68                       pla             ;check flags
5e4b : 2983                     and #$83        ;mask N-----ZC
5e4d : c557                     cmp adrf
                                trap_ne         ;bad flags
5e4f : f003            >        beq skip2797
                       >        trap            ;failed not equal (non zero)
5e51 : 200461          >        jsr report_error
                       >
5e54 :                 >skip2797
                        
5e54 : 28                       plp
                        ; decimal ADC / SBC #
5e55 : 08                       php             ;save carry for subtract
5e56 : a554                     lda ad2
5e58 : 8d0b32                   sta ex_adci+1   ;set ADC # operand
5e5b : a553                     lda ad1
5e5d : 200a32                   jsr ex_adci     ;execute ADC # in RAM
5e60 : 08                       php          
5e61 : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
5e63 : f003            >        beq skip2799
                       >        trap            ;failed not equal (non zero)
5e65 : 200461          >        jsr report_error
                       >
5e68 :                 >skip2799
                        
5e68 : 68                       pla             ;check flags
5e69 : 2983                     and #$83        ;mask N-----ZC
5e6b : c557                     cmp adrf
                                trap_ne         ;bad flags
5e6d : f003            >        beq skip2801
                       >        trap            ;failed not equal (non zero)
5e6f : 200461          >        jsr report_error
                       >
5e72 :                 >skip2801
                        
5e72 : 28                       plp
5e73 : 08                       php             ;save carry for next add
5e74 : a558                     lda sb2
5e76 : 8d0e32                   sta ex_sbci+1   ;set SBC # operand
5e79 : a553                     lda ad1
5e7b : 200d32                   jsr ex_sbci     ;execute SBC # in RAM
5e7e : 08                       php          
5e7f : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
5e81 : f003            >        beq skip2803
                       >        trap            ;failed not equal (non zero)
5e83 : 200461          >        jsr report_error
                       >
5e86 :                 >skip2803
                        
5e86 : 68                       pla             ;check flags
5e87 : 2983                     and #$83        ;mask N-----ZC
5e89 : c557                     cmp adrf
                                trap_ne         ;bad flags
5e8b : f003            >        beq skip2805
                       >        trap            ;failed not equal (non zero)
5e8d : 200461          >        jsr report_error
                       >
5e90 :                 >skip2805
                        
5e90 : 28                       plp
                        ; decimal ADC / SBC zp,x
5e91 : 08                       php             ;save carry for subtract
5e92 : a553                     lda ad1
5e94 : 7500                     adc 0,x         ;perform add
5e96 : 08                       php          
5e97 : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
5e99 : f003            >        beq skip2807
                       >        trap            ;failed not equal (non zero)
5e9b : 200461          >        jsr report_error
                       >
5e9e :                 >skip2807
                        
5e9e : 68                       pla             ;check flags
5e9f : 2983                     and #$83        ;mask N-----ZC
5ea1 : c557                     cmp adrf
                                trap_ne         ;bad flags
5ea3 : f003            >        beq skip2809
                       >        trap            ;failed not equal (non zero)
5ea5 : 200461          >        jsr report_error
                       >
5ea8 :                 >skip2809
                        
5ea8 : 28                       plp
5ea9 : 08                       php             ;save carry for next add
5eaa : a553                     lda ad1
5eac : f504                     sbc sb2-ad2,x   ;perform subtract
5eae : 08                       php          
5eaf : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
5eb1 : f003            >        beq skip2811
                       >        trap            ;failed not equal (non zero)
5eb3 : 200461          >        jsr report_error
                       >
5eb6 :                 >skip2811
                        
5eb6 : 68                       pla             ;check flags
5eb7 : 2983                     and #$83        ;mask N-----ZC
5eb9 : c557                     cmp adrf
                                trap_ne         ;bad flags
5ebb : f003            >        beq skip2813
                       >        trap            ;failed not equal (non zero)
5ebd : 200461          >        jsr report_error
                       >
5ec0 :                 >skip2813
                        
5ec0 : 28                       plp
                        ; decimal ADC / SBC abs,x
5ec1 : 08                       php             ;save carry for subtract
5ec2 : a553                     lda ad1
5ec4 : 7db131                   adc ada2-ad2,x  ;perform add
5ec7 : 08                       php          
5ec8 : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
5eca : f003            >        beq skip2815
                       >        trap            ;failed not equal (non zero)
5ecc : 200461          >        jsr report_error
                       >
5ecf :                 >skip2815
                        
5ecf : 68                       pla             ;check flags
5ed0 : 2983                     and #$83        ;mask N-----ZC
5ed2 : c557                     cmp adrf
                                trap_ne         ;bad flags
5ed4 : f003            >        beq skip2817
                       >        trap            ;failed not equal (non zero)
5ed6 : 200461          >        jsr report_error
                       >
5ed9 :                 >skip2817
                        
5ed9 : 28                       plp
5eda : 08                       php             ;save carry for next add
5edb : a553                     lda ad1
5edd : fdb231                   sbc sba2-ad2,x  ;perform subtract
5ee0 : 08                       php          
5ee1 : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
5ee3 : f003            >        beq skip2819
                       >        trap            ;failed not equal (non zero)
5ee5 : 200461          >        jsr report_error
                       >
5ee8 :                 >skip2819
                        
5ee8 : 68                       pla             ;check flags
5ee9 : 2983                     and #$83        ;mask N-----ZC
5eeb : c557                     cmp adrf
                                trap_ne         ;bad flags
5eed : f003            >        beq skip2821
                       >        trap            ;failed not equal (non zero)
5eef : 200461          >        jsr report_error
                       >
5ef2 :                 >skip2821
                        
5ef2 : 28                       plp
                        ; decimal ADC / SBC abs,y
5ef3 : 08                       php             ;save carry for subtract
5ef4 : a553                     lda ad1
5ef6 : 790631                   adc ada2-$ff,y  ;perform add
5ef9 : 08                       php          
5efa : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
5efc : f003            >        beq skip2823
                       >        trap            ;failed not equal (non zero)
5efe : 200461          >        jsr report_error
                       >
5f01 :                 >skip2823
                        
5f01 : 68                       pla             ;check flags
5f02 : 2983                     and #$83        ;mask N-----ZC
5f04 : c557                     cmp adrf
                                trap_ne         ;bad flags
5f06 : f003            >        beq skip2825
                       >        trap            ;failed not equal (non zero)
5f08 : 200461          >        jsr report_error
                       >
5f0b :                 >skip2825
                        
5f0b : 28                       plp
5f0c : 08                       php             ;save carry for next add
5f0d : a553                     lda ad1
5f0f : f90731                   sbc sba2-$ff,y  ;perform subtract
5f12 : 08                       php          
5f13 : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
5f15 : f003            >        beq skip2827
                       >        trap            ;failed not equal (non zero)
5f17 : 200461          >        jsr report_error
                       >
5f1a :                 >skip2827
                        
5f1a : 68                       pla             ;check flags
5f1b : 2983                     and #$83        ;mask N-----ZC
5f1d : c557                     cmp adrf
                                trap_ne         ;bad flags
5f1f : f003            >        beq skip2829
                       >        trap            ;failed not equal (non zero)
5f21 : 200461          >        jsr report_error
                       >
5f24 :                 >skip2829
                        
5f24 : 28                       plp
                        ; decimal ADC / SBC (zp,x)
5f25 : 08                       php             ;save carry for subtract
5f26 : a553                     lda ad1
5f28 : 6144                     adc (lo adi2-ad2,x) ;perform add
5f2a : 08                       php          
5f2b : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
5f2d : f003            >        beq skip2831
                       >        trap            ;failed not equal (non zero)
5f2f : 200461          >        jsr report_error
                       >
5f32 :                 >skip2831
                        
5f32 : 68                       pla             ;check flags
5f33 : 2983                     and #$83        ;mask N-----ZC
5f35 : c557                     cmp adrf
                                trap_ne         ;bad flags
5f37 : f003            >        beq skip2833
                       >        trap            ;failed not equal (non zero)
5f39 : 200461          >        jsr report_error
                       >
5f3c :                 >skip2833
                        
5f3c : 28                       plp
5f3d : 08                       php             ;save carry for next add
5f3e : a553                     lda ad1
5f40 : e146                     sbc (lo sbi2-ad2,x) ;perform subtract
5f42 : 08                       php          
5f43 : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
5f45 : f003            >        beq skip2835
                       >        trap            ;failed not equal (non zero)
5f47 : 200461          >        jsr report_error
                       >
5f4a :                 >skip2835
                        
5f4a : 68                       pla             ;check flags
5f4b : 2983                     and #$83        ;mask N-----ZC
5f4d : c557                     cmp adrf
                                trap_ne         ;bad flags
5f4f : f003            >        beq skip2837
                       >        trap            ;failed not equal (non zero)
5f51 : 200461          >        jsr report_error
                       >
5f54 :                 >skip2837
                        
5f54 : 28                       plp
                        ; decimal ADC / SBC (abs),y
5f55 : 08                       php             ;save carry for subtract
5f56 : a553                     lda ad1
5f58 : 719c                     adc (adiy2),y   ;perform add
5f5a : 08                       php          
5f5b : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
5f5d : f003            >        beq skip2839
                       >        trap            ;failed not equal (non zero)
5f5f : 200461          >        jsr report_error
                       >
5f62 :                 >skip2839
                        
5f62 : 68                       pla             ;check flags
5f63 : 2983                     and #$83        ;mask N-----ZC
5f65 : c557                     cmp adrf
                                trap_ne         ;bad flags
5f67 : f003            >        beq skip2841
                       >        trap            ;failed not equal (non zero)
5f69 : 200461          >        jsr report_error
                       >
5f6c :                 >skip2841
                        
5f6c : 28                       plp
5f6d : 08                       php             ;save carry for next add
5f6e : a553                     lda ad1
5f70 : f19e                     sbc (sbiy2),y   ;perform subtract
5f72 : 08                       php          
5f73 : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
5f75 : f003            >        beq skip2843
                       >        trap            ;failed not equal (non zero)
5f77 : 200461          >        jsr report_error
                       >
5f7a :                 >skip2843
                        
5f7a : 68                       pla             ;check flags
5f7b : 2983                     and #$83        ;mask N-----ZC
5f7d : c557                     cmp adrf
                                trap_ne         ;bad flags
5f7f : f003            >        beq skip2845
                       >        trap            ;failed not equal (non zero)
5f81 : 200461          >        jsr report_error
                       >
5f84 :                 >skip2845
                        
5f84 : 28                       plp
                        ; decimal ADC / SBC (zp)
5f85 : 08                       php             ;save carry for subtract
5f86 : a553                     lda ad1
5f88 : 7298                     adc (adi2)      ;perform add
5f8a : 08                       php          
5f8b : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
5f8d : f003            >        beq skip2847
                       >        trap            ;failed not equal (non zero)
5f8f : 200461          >        jsr report_error
                       >
5f92 :                 >skip2847
                        
5f92 : 68                       pla             ;check flags
5f93 : 2983                     and #$83        ;mask N-----ZC
5f95 : c557                     cmp adrf
                                trap_ne         ;bad flags
5f97 : f003            >        beq skip2849
                       >        trap            ;failed not equal (non zero)
5f99 : 200461          >        jsr report_error
                       >
5f9c :                 >skip2849
                        
5f9c : 28                       plp
5f9d : 08                       php             ;save carry for next add
5f9e : a553                     lda ad1
5fa0 : f29a                     sbc (sbi2)      ;perform subtract
5fa2 : 08                       php          
5fa3 : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
5fa5 : f003            >        beq skip2851
                       >        trap            ;failed not equal (non zero)
5fa7 : 200461          >        jsr report_error
                       >
5faa :                 >skip2851
                        
5faa : 68                       pla             ;check flags
5fab : 2983                     and #$83        ;mask N-----ZC
5fad : c557                     cmp adrf
                                trap_ne         ;bad flags
5faf : f003            >        beq skip2853
                       >        trap            ;failed not equal (non zero)
5fb1 : 200461          >        jsr report_error
                       >
5fb4 :                 >skip2853
                        
5fb4 : 28                       plp
5fb5 : 60                       rts
                        
                        ; core subroutine of the full binary add/subtract test
                        ; iterates through all combinations of operands and carry input
                        ; uses increments/decrements to predict result & result flags
5fb6 : a557             chkadd  lda adrf        ;add V-flag if overflow
5fb8 : 2983                     and #$83        ;keep N-----ZC / clear V
5fba : 48                       pha
5fbb : a553                     lda ad1         ;test sign unequal between operands
5fbd : 4554                     eor ad2
5fbf : 300a                     bmi ckad1       ;no overflow possible - operands have different sign
5fc1 : a553                     lda ad1         ;test sign equal between operands and result
5fc3 : 4555                     eor adrl
5fc5 : 1004                     bpl ckad1       ;no overflow occured - operand and result have same sign
5fc7 : 68                       pla
5fc8 : 0940                     ora #$40        ;set V
5fca : 48                       pha
5fcb : 68               ckad1   pla
5fcc : 8557                     sta adrf        ;save expected flags
                        ; binary ADC / SBC (zp)
5fce : 08                       php             ;save carry for subtract
5fcf : a553                     lda ad1
5fd1 : 7298                     adc (adi2)      ;perform add
5fd3 : 08                       php          
5fd4 : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
5fd6 : f003            >        beq skip2855
                       >        trap            ;failed not equal (non zero)
5fd8 : 200461          >        jsr report_error
                       >
5fdb :                 >skip2855
                        
5fdb : 68                       pla             ;check flags
5fdc : 29c3                     and #$c3        ;mask NV----ZC
5fde : c557                     cmp adrf
                                trap_ne         ;bad flags
5fe0 : f003            >        beq skip2857
                       >        trap            ;failed not equal (non zero)
5fe2 : 200461          >        jsr report_error
                       >
5fe5 :                 >skip2857
                        
5fe5 : 28                       plp
5fe6 : 08                       php             ;save carry for next add
5fe7 : a553                     lda ad1
5fe9 : f29a                     sbc (sbi2)      ;perform subtract
5feb : 08                       php          
5fec : c555                     cmp adrl        ;check result
                                trap_ne         ;bad result
5fee : f003            >        beq skip2859
                       >        trap            ;failed not equal (non zero)
5ff0 : 200461          >        jsr report_error
                       >
5ff3 :                 >skip2859
                        
5ff3 : 68                       pla             ;check flags
5ff4 : 29c3                     and #$c3        ;mask NV----ZC
5ff6 : c557                     cmp adrf
                                trap_ne         ;bad flags
5ff8 : f003            >        beq skip2861
                       >        trap            ;failed not equal (non zero)
5ffa : 200461          >        jsr report_error
                       >
5ffd :                 >skip2861
                        
5ffd : 28                       plp
5ffe : 60                       rts
                                
                        ; target for the jump indirect test
5fff : 0560             ji_adr  dw test_ji
6001 : 0f51                     dw ji_ret
                        
6003 : 88                       dey
6004 : 88                       dey
6005 :                  test_ji
6005 : 08                       php             ;either SP or Y count will fail, if we do not hit
6006 : 88                       dey
6007 : 88                       dey
6008 : 88                       dey
6009 : 28                       plp
                                trap_cs         ;flags loaded?
600a : 9003            >        bcc skip2863
                       >        trap            ;failed carry set
600c : 200461          >        jsr report_error
                       >
600f :                 >skip2863
                        
                                trap_vs
600f : 5003            >        bvc skip2865
                       >        trap            ;failed overflow set
6011 : 200461          >        jsr report_error
                       >
6014 :                 >skip2865
                        
                                trap_mi
6014 : 1003            >        bpl skip2867
                       >        trap            ;failed minus (bit 7 set)
6016 : 200461          >        jsr report_error
                       >
6019 :                 >skip2867
                        
                                trap_eq 
6019 : d003            >        bne skip2869
                       >        trap           ;failed equal (zero)
601b : 200461          >        jsr report_error
                       >
601e :                 >skip2869
                        
601e : c949                     cmp #'I'        ;registers loaded?
                                trap_ne
6020 : f003            >        beq skip2871
                       >        trap            ;failed not equal (non zero)
6022 : 200461          >        jsr report_error
                       >
6025 :                 >skip2871
                        
6025 : e04e                     cpx #'N'
                                trap_ne        
6027 : f003            >        beq skip2873
                       >        trap            ;failed not equal (non zero)
6029 : 200461          >        jsr report_error
                       >
602c :                 >skip2873
                        
602c : c041                     cpy #('D'-3)
                                trap_ne
602e : f003            >        beq skip2875
                       >        trap            ;failed not equal (non zero)
6030 : 200461          >        jsr report_error
                       >
6033 :                 >skip2875
                        
6033 : 48                       pha             ;save a,x
6034 : 8a                       txa
6035 : 48                       pha
6036 : ba                       tsx
6037 : e0fd                     cpx #$fd        ;check SP
                                trap_ne
6039 : f003            >        beq skip2877
                       >        trap            ;failed not equal (non zero)
603b : 200461          >        jsr report_error
                       >
603e :                 >skip2877
                        
603e : 68                       pla             ;restore x
603f : aa                       tax
                                set_stat $ff
                       >            load_flag $ff
6040 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
6042 : 48              >            pha         ;use stack to load status
6043 : 28              >            plp
                        
6044 : 68                       pla             ;restore a
6045 : e8                       inx             ;return registers with modifications
6046 : 49aa                     eor #$aa        ;N=1, V=1, Z=0, C=1
6048 : 6cff32                   jmp (ji_tab+2)
604b : ea                       nop
604c : ea                       nop
                                trap            ;runover protection
604d : 200461          >        jsr report_error
                        
6050 : 4c0034                   jmp start       ;catastrophic error - cannot continue
                        
                        ; target for the jump indirect test
6053 : b260             jxi_adr dw  trap_ind
6055 : b260                     dw  trap_ind
6057 : 6160                     dw  test_jxi    ;+4
6059 : 7951                     dw  jxi_ret     ;+6
605b : b260                     dw  trap_ind
605d : b260                     dw  trap_ind
                        
605f : 88                       dey
6060 : 88                       dey
6061 :                  test_jxi
6061 : 08                       php             ;either SP or Y count will fail, if we do not hit
6062 : 88                       dey
6063 : 88                       dey
6064 : 88                       dey
6065 : 28                       plp
                                trap_cs         ;flags loaded?
6066 : 9003            >        bcc skip2882
                       >        trap            ;failed carry set
6068 : 200461          >        jsr report_error
                       >
606b :                 >skip2882
                        
                                trap_vs
606b : 5003            >        bvc skip2884
                       >        trap            ;failed overflow set
606d : 200461          >        jsr report_error
                       >
6070 :                 >skip2884
                        
                                trap_mi
6070 : 1003            >        bpl skip2886
                       >        trap            ;failed minus (bit 7 set)
6072 : 200461          >        jsr report_error
                       >
6075 :                 >skip2886
                        
                                trap_eq 
6075 : d003            >        bne skip2888
                       >        trap           ;failed equal (zero)
6077 : 200461          >        jsr report_error
                       >
607a :                 >skip2888
                        
607a : c958                     cmp #'X'        ;registers loaded?
                                trap_ne
607c : f003            >        beq skip2890
                       >        trap            ;failed not equal (non zero)
607e : 200461          >        jsr report_error
                       >
6081 :                 >skip2890
                        
6081 : e004                     cpx #4
                                trap_ne        
6083 : f003            >        beq skip2892
                       >        trap            ;failed not equal (non zero)
6085 : 200461          >        jsr report_error
                       >
6088 :                 >skip2892
                        
6088 : c046                     cpy #('I'-3)
                                trap_ne
608a : f003            >        beq skip2894
                       >        trap            ;failed not equal (non zero)
608c : 200461          >        jsr report_error
                       >
608f :                 >skip2894
                        
608f : 48                       pha             ;save a,x
6090 : 8a                       txa
6091 : 48                       pha
6092 : ba                       tsx
6093 : e0fd                     cpx #$fd        ;check SP
                                trap_ne
6095 : f003            >        beq skip2896
                       >        trap            ;failed not equal (non zero)
6097 : 200461          >        jsr report_error
                       >
609a :                 >skip2896
                        
609a : 68                       pla             ;restore x
609b : aa                       tax
                                set_stat $ff
                       >            load_flag $ff
609c : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
609e : 48              >            pha         ;use stack to load status
609f : 28              >            plp
                        
60a0 : 68                       pla             ;restore a
60a1 : e8                       inx             ;return registers with modifications
60a2 : e8                       inx
60a3 : 49aa                     eor #$aa        ;N=1, V=1, Z=0, C=1
60a5 : 7cf932                   jmp (jxi_tab,x)
60a8 : ea                       nop
60a9 : ea                       nop
                                trap            ;runover protection
60aa : 200461          >        jsr report_error
                        
60ad : 4c0034                   jmp start       ;catastrophic error - cannot continue
                        
                        ; JMP (abs,x) with bad x
60b0 : ea                       nop
60b1 : ea                       nop
60b2 :                  trap_ind
60b2 : ea                       nop
60b3 : ea                       nop
                                trap            ;near miss indexed indirect jump
60b4 : 200461          >        jsr report_error
                        
60b7 : 4c0034                   jmp start       ;catastrophic error - cannot continue
                        
                        ;trap in case of unexpected IRQ, NMI, BRK, RESET
60ba :                  nmi_trap
                                trap            ;check stack for conditions at NMI
60ba : 200461          >        jsr report_error
                        
60bd : 4c0034                   jmp start       ;catastrophic error - cannot continue
60c0 :                  res_trap
                                trap            ;unexpected RESET
60c0 : 200461          >        jsr report_error
                        
60c3 : 4c0034                   jmp start       ;catastrophic error - cannot continue
                        
60c6 : 88                       dey
60c7 : 88                       dey
60c8 :                  irq_trap                ;BRK test or unextpected BRK or IRQ
60c8 : 08                       php             ;either SP or Y count will fail, if we do not hit
60c9 : 88                       dey
60ca : 88                       dey
60cb : 88                       dey
                                ;next traps could be caused by unexpected BRK or IRQ
                                ;check stack for BREAK and originating location
                                ;possible jump/branch into weeds (uninitialized space)
                            if ROM_vectors = 1               
                                cmp #$ff-'B'    ;BRK pass 2 registers loaded?
                                beq break2
                            endif        
60cc : c942                     cmp #'B'        ;BRK pass 1 registers loaded?
                                trap_ne
60ce : f003            >        beq skip2904
                       >        trap            ;failed not equal (non zero)
60d0 : 200461          >        jsr report_error
                       >
60d3 :                 >skip2904
                        
60d3 : e052                     cpx #'R'
                                trap_ne        
60d5 : f003            >        beq skip2906
                       >        trap            ;failed not equal (non zero)
60d7 : 200461          >        jsr report_error
                       >
60da :                 >skip2906
                        
60da : c048                     cpy #'K'-3
                                trap_ne
60dc : f003            >        beq skip2908
                       >        trap            ;failed not equal (non zero)
60de : 200461          >        jsr report_error
                       >
60e1 :                 >skip2908
                        
60e1 : 8550                     sta irq_a       ;save registers during break test
60e3 : 8651                     stx irq_x
60e5 : ba                       tsx             ;test break on stack
60e6 : bd0201                   lda $102,x
                                cmp_flag 0      ;break test should have B=1 & unused=1 on stack
60e9 : c930            >            cmp #(0      |fao)&m8    ;expected flags + always on bits
                        
                                trap_ne         ;possible no break flag on stack
60eb : f003            >        beq skip2911
                       >        trap            ;failed not equal (non zero)
60ed : 200461          >        jsr report_error
                       >
60f0 :                 >skip2911
                        
                            if ROM_vectors = 1       
                                pla
                                cmp_flag intdis ;should have added interrupt disable
                                trap_ne
                                tsx
                                cpx #$fc        ;sp -3? (return addr, flags)
                                trap_ne
                                lda $1ff        ;propper return on stack
                                cmp #hi(brk_ret0)
                                trap_ne
                                lda $1fe
                                cmp #lo(brk_ret0)
                                trap_ne
                                load_flag $ff
                                pha
                                ldx irq_x
                                inx             ;return registers with modifications
                                lda irq_a
                                eor #$aa
                                plp             ;N=1, V=1, Z=1, C=1 but original flags should be restored
                                rti
                                trap            ;runover protection
                                jmp start       ;catastrophic error - cannot continue
                                
                        break2                  ;BRK pass 2        
                                cpx #$ff-'R'
                                trap_ne        
                                cpy #$ff-'K'-3
                                trap_ne
                                sta irq_a       ;save registers during break test
                                stx irq_x
                                tsx             ;test break on stack
                                lda $102,x
                                cmp_flag $ff    ;break test should have B=1
                                trap_ne         ;possibly no break flag on stack
                                pla
                                cmp_flag $ff-decmode ;actual passed flags should have decmode cleared
                                trap_ne
                                tsx
                                cpx #$fc        ;sp -3? (return addr, flags)
                                trap_ne
                                lda $1ff        ;propper return on stack
                                cmp #hi(brk_ret1)
                                trap_ne
                                lda $1fe
                                cmp #lo(brk_ret1)
                                trap_ne
                                load_flag intdis
                                pha      
                                ldx irq_x
                                inx             ;return registers with modifications
                                lda irq_a
                                eor #$aa
                                plp             ;N=0, V=0, Z=0, C=0 but original flags should be restored
                                rti
                                trap            ;runover protection
                                jmp start       ;catastrophic error - cannot continue
                            else
                                trap_eq         ;check stack for conditions at BRK
60f0 : d003            >        bne skip2913
                       >        trap           ;failed equal (zero)
60f2 : 200461          >        jsr report_error
                       >
60f5 :                 >skip2913
                        
                            endif
                        
                            if report = 1
                                include "report.i65"
0001 =                  T_ATOM = 1
0002 =                  T_BEEB = 2
                        
                          if (TARGET = T_ATOM)
                        OSRDCH = $FFE3
                        OSWRCH = $FFF4
                          else
                            if (TARGET = T_BEEB)
ffe0 =                  OSRDCH = $FFE0
ffee =                  OSWRCH = $FFEE
                            else
                        ERROR TARGET must be 1 or 2
                            endif
                          endif
                        
                        
                        ;**** report 6502 funtional test errors to standard I/O ****
                        ;
                        ;this include file is part of the 6502 functional tests
                        ;it is used when you configure report = 1 in the tests
                        ;
                        ;to adopt the standard output vectors of your test environment
                        ;you must modify the rchar and rget subroutines in this include
                        ;
                        ;I/O hardware may have to be initialized in report_init
                        
                        ;print message macro - \1 = message location
                        rprt    macro
                                ldx #0
                                lda \1
                        loop\?
                                jsr rchar
                                inx
                                lda \1,x
                                bne loop\?
                                endm
                        
                        ;initialize I/O as required (example: configure & enable ACIA)
60f5 :                  report_init
                                ;nothing to initialize
                                rprt rmsg_start
60f5 : a200            >        ldx #0
60f7 : ad1262          >        lda rmsg_start
60fa :                 >loop2915
60fa : 200e62          >        jsr rchar
60fd : e8              >        inx
60fe : bd1262          >        lda rmsg_start,x
6101 : d0f7            >        bne loop2915
                        
6103 : 60                       rts
                                
                        ;show stack (with saved registers), zeropage and absolute memory workspace
                        ;after an error was trapped in the test program
6104 :                  report_error
                        ;save registers
6104 : 08                       php
6105 : 48                       pha
6106 : 8a                       txa
6107 : 48                       pha
6108 : 98                       tya
6109 : 48                       pha
610a : d8                       cld
                        ;show stack with index to registers at error
                                rprt rmsg_stack
610b : a200            >        ldx #0
610d : ad2662          >        lda rmsg_stack
6110 :                 >loop2916
6110 : 200e62          >        jsr rchar
6113 : e8              >        inx
6114 : bd2662          >        lda rmsg_stack,x
6117 : d0f7            >        bne loop2916
                        
6119 : ba                       tsx
611a : e8                       inx
611b : a901                     lda #1      ;address high
611d : 20fa61                   jsr rhex
6120 : 8a                       txa         ;address low
6121 : 20fa61                   jsr rhex
6124 : 20f661           rstack  jsr rspace
6127 : bd0001                   lda $100,x  ;stack data
612a : 20fa61                   jsr rhex
612d : e8                       inx
612e : d0f4                     bne rstack
6130 : 20ed61                   jsr rcrlf   ;new line
                        ;show zero page workspace
6133 : a900                     lda #0
6135 : 20fa61                   jsr rhex
6138 : a952                     lda #zpt
613a : aa                       tax
613b : 20fa61                   jsr rhex
613e : 20f661           rzp     jsr rspace
6141 : b500                     lda 0,x
6143 : 20fa61                   jsr rhex
6146 : e8                       inx
6147 : e059                     cpx #zp_bss
6149 : d0f3                     bne rzp
614b : 20ed61                   jsr rcrlf
                        ;show absolute workspace
614e : a932                     lda #hi(data_segment)
6150 : 20fa61                   jsr rhex
6153 : a900                     lda #lo(data_segment)
6155 : 20fa61                   jsr rhex
6158 : a200                     ldx #0
615a : 20f661           rabs    jsr rspace
615d : bd0032                   lda data_segment,x
6160 : 20fa61                   jsr rhex
6163 : e8                       inx
6164 : e00a                     cpx #(data_bss-data_segment)
6166 : d0f2                     bne rabs
                        ;ask to continue
                                rprt rmsg_cont
6168 : a200            >        ldx #0
616a : ad4262          >        lda rmsg_cont
616d :                 >loop2917
616d : 200e62          >        jsr rchar
6170 : e8              >        inx
6171 : bd4262          >        lda rmsg_cont,x
6174 : d0f7            >        bne loop2917
                        
6176 : 20e361           rerr1   jsr rget
6179 : c953                     cmp #'S'
617b : f00b                     beq rskip
617d : c943                     cmp #'C'
617f : d0f5                     bne rerr1        
                        ;restore registers
6181 : 68                       pla
6182 : a8                       tay
6183 : 68                       pla
6184 : aa                       tax
6185 : 68                       pla 
6186 : 28                       plp
6187 : 60                       rts
                        ;skip the current test
6188 : a9f0             rskip   lda #$f0            ;already end of tests?
618a : cd0232                   cmp test_case
618d : f0e7                     beq rerr1           ;skip is not available
618f : a2ff                     ldx #$ff            ;clear stack
6191 : 9a                       txs
6192 : ee0232                   inc test_case       ;next test
6195 : a900                     lda #lo(start)      ;find begin of test
6197 : 8552                     sta zpt
6199 : a934                     lda #hi(start)
619b : 8553                     sta zpt+1
619d : a004             rskipl1 ldy #4              ;search pattern
619f : b152             rskipl2 lda (zpt),y         ;next byte
61a1 : d9c861                   cmp rmark,y
61a4 : d00a                     bne rskipnx         ;no match
61a6 : 88                       dey
61a7 : 300f                     bmi rskipf          ;found pattern        
61a9 : c001                     cpy #1              ;skip immediate value
61ab : d0f2                     bne rskipl2
61ad : 88                       dey
61ae : f0ef                     beq rskipl2
                                
61b0 : e652             rskipnx inc zpt             ;next RAM location
61b2 : d0e9                     bne rskipl1
61b4 : e653                     inc zpt+1
61b6 : d0e5                     bne rskipl1
                        
61b8 : a001             rskipf  ldy #1              ;pattern found - check test number
61ba : b152                     lda (zpt),y         ;test number
61bc : c9f0                     cmp #$f0            ;end of last test?
61be : f005                     beq rskipe          ;ask to rerun all
61c0 : cd0232                   cmp test_case       ;is next test?
61c3 : d0eb                     bne rskipnx         ;continue searching
61c5 : 6c5200           rskipe  jmp (zpt)           ;start next test or rerun at end of tests
                                
61c8 : a900             rmark   lda #0              ;begin of test search pattern
61ca : 8d0232                   sta test_case
                        
                        ;show test has ended, ask to repeat
61cd :                  report_success
                            if rep_int = 1
                                rprt rmsg_priority
                                lda data_segment    ;show interrupt sequence
                                jsr rhex
                                jsr rspace
                                lda data_segment+1
                                jsr rhex
                                jsr rspace
                                lda data_segment+2
                                jsr rhex
                            endif
                                rprt rmsg_success
61cd : a200            >        ldx #0
61cf : ad7462          >        lda rmsg_success
61d2 :                 >loop2918
61d2 : 200e62          >        jsr rchar
61d5 : e8              >        inx
61d6 : bd7462          >        lda rmsg_success,x
61d9 : d0f7            >        bne loop2918
                        
61db : 20e361           rsuc1   jsr rget
61de : c952                     cmp #'R'
61e0 : d0f9                     bne rsuc1        
61e2 : 60                       rts
                        
                        ;input subroutine
                        ;get a character from standard input 
                        ;adjust according to the needs in your test environment
61e3 :                  rget                ;get character in A
61e3 : 20e0ff                   jsr OSRDCH  ;example: OSRDCH on a Beeb/Atom
                        ;rget1
                        ;        lda $bff1   ;wait RDRF
                        ;        and #8
                        ;        beq rget1
                        ;not a real ACIA - so RDRF is not checked
                        ;        lda $bff0   ;read acia rx reg
                        ;       lda $f004   ;Kowalski simulator default
                        ;the load can be replaced by a call to a kernal routine
                        ;        jsr $ffcf   ;example: CHRIN for a C64
61e6 : c961                     cmp #'a'    ;lower case
61e8 : 9002                     bcc rget1
61ea : 295f                     and #$5f    ;convert to upper case
61ec : 60               rget1   rts
                        
                        ;output subroutines
61ed : a90a             rcrlf   lda #10
61ef : 200e62                   jsr rchar
61f2 : a90d                     lda #13
61f4 : d018                     bne rchar
                        
61f6 : a920             rspace  lda #' '
61f8 : d014                     bne rchar
                                
61fa : 48               rhex    pha         ;report hex byte in A
61fb : 4a                       lsr a       ;high nibble first
61fc : 4a                       lsr a
61fd : 4a                       lsr a
61fe : 4a                       lsr a
61ff : 200562                   jsr rnib
6202 : 68                       pla         ;now low nibble
6203 : 290f                     and #$f
                        
6205 : 18               rnib    clc         ;report nibble in A
6206 : 6930                     adc #'0'    ;make printable 0-9
6208 : c93a                     cmp #'9'+1
620a : 9002                     bcc rchar
620c : 6906                     adc #6      ;make printable A-F
                        
                        ;send a character to standard output 
                        ;adjust according to the needs in your test environment
                        ;register X needs to be preserved!
620e :                  rchar               ;report character in A
620e : 20eeff                   jsr OSWRCH  ;example: OSWRCH on a Beeb/Atom
                        ;        pha         ;wait TDRF
                        ;rchar1  lda $bff1
                        ;        and #$10
                        ;        beq rchar1
                        ;        pla
                        ;not a real ACIA - so TDRF is not checked
                        ;        sta $bff0   ;write acia tx reg
                        ;        sta $f001   ;Kowalski simulator default
                        ;the store can be replaced by a call to a kernal routine
                        ;        jsr $ffd2   ;example: CHROUT for a C64
6211 : 60                       rts
                        
6212 :                  rmsg_start
6212 : 0a0d5374617274..         db  10,13,"Started testing",10,13,0
6226 :                  rmsg_stack
6226 : 0a0d7265677320..         db  10,13,"regs Y  X  A  PS PCLPCH",10,13,0
6242 :                  rmsg_cont
6242 : 0a0d7072657373..         db  10,13,"press C to continue or S to skip current test",10,13,0
6274 :                  rmsg_success
6274 : 0a0d416c6c2074..         db  10,13,"All tests completed, press R to repeat",10,13,0
                            if rep_int = 1
                        rmsg_priority
                                db  10,13,"interrupt sequence (NMI IRQ BRK) ",0
                            endif
                           
                            endif
                                    
                        ;copy of data to initialize BSS segment
                            if load_data_direct != 1
629f :                  zp_init
629f : c3824100         zp1_    db  $c3,$82,$41,0   ;test patterns for LDx BIT ROL ROR ASL LSR
62a3 : 7f               zp7f_   db  $7f             ;test pattern for compare  
                        ;logical zeropage operands
62a4 : 001f7180         zpOR_   db  0,$1f,$71,$80   ;test pattern for OR
62a8 : 0fff7f80         zpAN_   db  $0f,$ff,$7f,$80 ;test pattern for AND
62ac : ff0f8f8f         zpEO_   db  $ff,$0f,$8f,$8f ;test pattern for EOR
                        ;indirect addressing pointers
62b0 : 1032             ind1_   dw  abs1            ;indirect pointer to pattern in absolute memory
62b2 : 1132                     dw  abs1+1
62b4 : 1232                     dw  abs1+2
62b6 : 1332                     dw  abs1+3
62b8 : 1432                     dw  abs7f
62ba : 1831             inw1_   dw  abs1-$f8        ;indirect pointer for wrap-test pattern
62bc : 0532             indt_   dw  abst            ;indirect pointer to store area in absolute memory
62be : 0632                     dw  abst+1
62c0 : 0732                     dw  abst+2
62c2 : 0832                     dw  abst+3
62c4 : 0d31             inwt_   dw  abst-$f8        ;indirect pointer for wrap-test store
62c6 : 4732             indAN_  dw  absAN           ;indirect pointer to AND pattern in absolute memory
62c8 : 4832                     dw  absAN+1
62ca : 4932                     dw  absAN+2
62cc : 4a32                     dw  absAN+3
62ce : 4b32             indEO_  dw  absEO           ;indirect pointer to EOR pattern in absolute memory
62d0 : 4c32                     dw  absEO+1
62d2 : 4d32                     dw  absEO+2
62d4 : 4e32                     dw  absEO+3
62d6 : 4332             indOR_  dw  absOR           ;indirect pointer to OR pattern in absolute memory
62d8 : 4432                     dw  absOR+1
62da : 4532                     dw  absOR+2
62dc : 4632                     dw  absOR+3
                        ;add/subtract indirect pointers
62de : 0532             adi2_   dw  ada2            ;indirect pointer to operand 2 in absolute memory
62e0 : 0632             sbi2_   dw  sba2            ;indirect pointer to complemented operand 2 (SBC)
62e2 : 0631             adiy2_  dw  ada2-$ff        ;with offset for indirect indexed
62e4 : 0731             sbiy2_  dw  sba2-$ff
62e6 :                  zp_end
                            if (zp_end - zp_init) != (zp_bss_end - zp_bss)   
                                ;force assembler error if size is different   
                                ERROR ERROR ERROR   ;mismatch between bss and zeropage data
                            endif 
62e6 :                  data_init
62e6 : 6900             ex_adc_ adc #0              ;execute immediate opcodes
62e8 : 60                       rts
62e9 : e900             ex_sbc_ sbc #0              ;execute immediate opcodes
62eb : 60                       rts
62ec : c3824100         abs1_   db  $c3,$82,$41,0   ;test patterns for LDx BIT ROL ROR ASL LSR
62f0 : 7f               abs7f_  db  $7f             ;test pattern for compare
                        ;loads
62f1 : 80800002         fLDx_   db  fn,fn,0,fz      ;expected flags for load
                        ;shifts
62f5 :                  rASL_                       ;expected result ASL & ROL -carry  
62f5 : 86048200         rROL_   db  $86,$04,$82,0   ; "
62f9 : 87058301         rROLc_  db  $87,$05,$83,1   ;expected result ROL +carry
62fd :                  rLSR_                       ;expected result LSR & ROR -carry
62fd : 61412000         rROR_   db  $61,$41,$20,0   ; "
6301 : e1c1a080         rRORc_  db  $e1,$c1,$a0,$80 ;expected result ROR +carry
6305 :                  fASL_                       ;expected flags for shifts
6305 : 81018002         fROL_   db  fnc,fc,fn,fz    ;no carry in
6309 : 81018000         fROLc_  db  fnc,fc,fn,0     ;carry in
630d :                  fLSR_
630d : 01000102         fROR_   db  fc,0,fc,fz      ;no carry in
6311 : 81808180         fRORc_  db  fnc,fn,fnc,fn   ;carry in
                        ;increments (decrements)
6315 : 7f80ff0001       rINC_   db  $7f,$80,$ff,0,1 ;expected result for INC/DEC
631a : 0080800200       fINC_   db  0,fn,fn,fz,0    ;expected flags for INC/DEC
                        ;logical memory operand
631f : 001f7180         absOR_  db  0,$1f,$71,$80   ;test pattern for OR
6323 : 0fff7f80         absAN_  db  $0f,$ff,$7f,$80 ;test pattern for AND
6327 : ff0f8f8f         absEO_  db  $ff,$0f,$8f,$8f ;test pattern for EOR
                        ;logical accu operand
632b : 00f11f00         absORa_ db  0,$f1,$1f,0     ;test pattern for OR
632f : f0ffffff         absANa_ db  $f0,$ff,$ff,$ff ;test pattern for AND
6333 : fff0f00f         absEOa_ db  $ff,$f0,$f0,$0f ;test pattern for EOR
                        ;logical results
6337 : 00ff7f80         absrlo_ db  0,$ff,$7f,$80
633b : 02800080         absflo_ db  fz,fn,0,fn
633f :                  data_end
                            if (data_end - data_init) != (data_bss_end - data_bss)
                                ;force assembler error if size is different   
                                ERROR ERROR ERROR   ;mismatch between bss and data
                            endif 
                        
633f :                  vec_init
633f : ba60                     dw  nmi_trap
6341 : c060                     dw  res_trap
6343 : c860                     dw  irq_trap
fffa =                  vec_bss equ $fffa
                            endif                   ;end of RAM init data
                            
                        ; code at end of image due to the need to add blank space as required
                            if ($ff & (ji_ret - * - 2)) < ($ff & (jxi_ret - * - 2))
                        ; JMP (abs) when $xxff and $xx00 are from same page
                                ds  lo(ji_ret - * - 2)
                                nop
                                nop
                        ji_px   nop             ;low address byte matched with ji_ret 
                                nop
                                trap            ;jmp indirect page cross bug
                        
                        ; JMP (abs,x) when $xxff and $xx00 are from same page
                                ds  lo(jxi_ret - * - 2)
                                nop
                                nop
                        jxi_px  nop             ;low address byte matched with jxi_ret 
                                nop
                                trap            ;jmp indexed indirect page cross bug
                            else
                        ; JMP (abs,x) when $xxff and $xx00 are from same page
6345 : 00000000000000..         ds  lo(jxi_ret - * - 2)
6377 : ea                       nop
6378 : ea                       nop
6379 : ea               jxi_px  nop             ;low address byte matched with jxi_ret 
637a : ea                       nop
                                trap            ;jmp indexed indirect page cross bug
637b : 200461          >        jsr report_error
                        
                        
                        ; JMP (abs) when $xxff and $xx00 are from same page
637e : 00000000000000..         ds  lo(ji_ret - * - 2)
640d : ea                       nop
640e : ea                       nop
640f : ea               ji_px   nop             ;low address byte matched with ji_ret 
6410 : ea                       nop
                                trap            ;jmp indirect page cross bug
6411 : 200461          >        jsr report_error
                        
                            endif
                            
                            if (load_data_direct = 1) & (ROM_vectors = 1)  
                                org $fffa       ;vectors
                                dw  nmi_trap
                                dw  res_trap
                                dw  irq_trap
                            endif
                        
640f =                          end start
                        
No errors in pass 2.
Wrote binary from address $3400 through $6413.
Total size 12308 bytes.
Program start address is at $3400 (13312).
